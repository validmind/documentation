name: Deploy docs site to staging

on:
  push:
    branches:
      - staging
  workflow_run:
    workflows: ["Merge main into staging"]
    types:
      - completed
  workflow_dispatch:

jobs:
  deploy:
    if: |
      github.event_name == 'push' ||
      (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') ||
      github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest

    steps:
      - name: Check out installation repository
        uses: actions/checkout@v2

      - name: "Checkout documentation repository"
        uses: actions/checkout@v4
        with:
          repository: validmind/installation
          path: site/_source/installation
          token: ${{ secrets.INSTALLATION_RO_PAT }}

      - name: Check out release-notes repository
        uses: actions/checkout@v4
        with:
          repository: validmind/release-notes
          path: site/_source/release-notes
          token: ${{ secrets.RELEASE_NOTES_RO_PAT }}

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
  
      - name: Set up Quarto
        uses: quarto-dev/quarto-actions/setup@v2

      - name: Setup R environment
        uses: ./.github/actions/setup-r
  
      - name: Populate installation
        run: cp -r site/_source/installation/site/installation site/installation

      - name: Populate release notes
        run: |
          cp -r site/_source/release-notes/releases/validmind-library site/releases/validmind-library
          cp -r site/_source/release-notes/releases/frontend site/releases/frontend
          cp -r site/_source/release-notes/releases/documentation site/releases/documentation
          cp -r site/_source/release-notes/releases/cmvm site/installation/releases

      - name: Render staging docs site
        run: |
            cd site
            quarto render --profile staging &> render_errors.log || {
            echo "Quarto render failed immediately";
            cat render_errors.log;
            exit 1;
            }
            make generate-sitemap

      # If yes then create the dev.env file for use in execution step
      - name: Create dev.env file
        id: create_dev_env
        run: |
          touch dev.env
          echo VM_API_HOST=${{ secrets.PLATFORM_API_HOST }} >> dev.env
          echo VM_API_KEY=${{ secrets.PLATFORM_API_KEY }} >> dev.env
          echo VM_API_SECRET=${{ secrets.PLATFORM_API_SECRET }} >> dev.env
          echo VM_API_MODEL=${{ secrets.PLATFORM_DEV_MODEL }} >> dev.env
          cat dev.env

      # If yes then create the valid.env file for use in execution step
      - name: Create valid.env file
        id: create_valid_env
        run: |
          touch valid.env
          echo VM_API_HOST=${{ secrets.PLATFORM_API_HOST }} >> valid.env
          echo VM_API_KEY=${{ secrets.PLATFORM_API_KEY }} >> valid.env
          echo VM_API_SECRET=${{ secrets.PLATFORM_API_SECRET }} >> valid.env
          echo VM_API_MODEL=${{ secrets.PLATFORM_VALID_MODEL }} >> valid.env
          cat valid.env

      # Only execute the staging notebooks for training if .env files are created
      - name: Execute staging ValidMind for model development and validation series
        if: ${{ steps.create_dev_env.outcome == 'success' && steps.create_valid_env.outcome == 'success' }}
        uses: ./.github/actions/staging-notebook
        id: execute-staging-notebook
        with:
          dev_env: dev.env
          valid_env: valid.env

      # Staging bucket is in us-west-2
      - name: Configure AWS credentials
        run: aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID_STAGING }} && aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY_STAGING }} && aws configure set default.region us-west-2

      - name: Deploy docs staging site
        run: aws s3 sync site/_site s3://validmind-docs-staging/site --delete --exclude "installation/helm-repo/*" --exclude "site/pr_previews/*" && aws cloudfront create-invalidation --distribution-id ESWVTZYFL873V --paths "/*" --no-cli-pager
