name: Validate docs site (render, test, and deploy)

on:
  pull_request:
    types: [opened, synchronize, ready_for_review]

permissions:
  issues: write
  pull-requests: write

jobs:
  validate:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Fetch Quarto
      uses: ./.github/actions/fetch-quarto

    - name: Render demo docs site
      run: |
          cd site 
          quarto render --profile development &> render_errors.log || { 
          echo "Quarto render failed immediately";
          cat render_errors.log;
          exit 1;
          }
    
    - name: Execute Intro for Model Developers notebook (demo ver.)
        run: |
            if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q "^site/notebooks/"; then
              echo "Changes detected in site/notebooks/. Executing Intro for Model Developers notebook."
              cd site
              quarto render --profile exe-demo notebooks/tutorials/intro_for_model_developers_EXECUTED.ipynb &> render_errors.log || { 
                echo "No changes to intro_for_model_developers_EXECUTED.ipynb, skipping execution";
                cat render_errors.log;
                exit 1;
              }
            else
              echo "No changes detected in site/notebooks/. Skipping execution of Intro for Model Developers notebook."
            fi

    - name: Test for warnings or errors 
      run: |
        if grep -q 'WARN:\|ERROR:' site/render_errors.log; then
          echo "Warnings or errors detected during Quarto render"
          cat site/render_errors.log
          exit 1
        else
          echo "No warnings or errors detected during Quarto render"
        fi

      # Demo bucket is in us-east-1  
    - name: Configure AWS credentials
      run: aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} && aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} && aws configure set default.region us-east-1

    - name: Deploy PR preview
      run: aws s3 sync site/_site s3://docs-ci-cd-demo/site/pr_previews/${{ github.head_ref }} --delete && aws cloudfront create-invalidation --distribution-id E38AINJY5CYN6P --paths "/*" --no-cli-pager

    - name: Post comment with preview URL
      uses: actions/github-script@v6
      with:
        script: |
          const url = `https://docs-demo.vm.validmind.ai/pr_previews/${{ github.head_ref }}/index.html`;
          github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            body: `A PR preview is available: [Preview URL](${url})`
          });