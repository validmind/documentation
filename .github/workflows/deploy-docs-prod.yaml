name: Deploy docs site to production

on:
  push:
    branches:
      - prod
  workflow_run:
    workflows: ["Merge staging into prod"]
    types:
      - completed
  workflow_dispatch:

jobs:
  deploy:
    if: |
      github.event_name == 'push' ||
      (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') ||
      github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest

    steps:
      - name: Check out documentation repository
        uses: actions/checkout@v4

      # Reclaim space + create a reserve for deterministic headroom
      - name: Free space + create reserve
        uses: ./.github/actions/free-disk-space
        with:
          remove_dotnet: "true"
          remove_android: "true"
          remove_haskell: "true"
          prune_docker: "true"
          apt_cleanup: "true"
          create_reserve_gb: "3"

      - name: Check out validmind-library repository
        uses: actions/checkout@v4
        with:
          repository: validmind/validmind-library
          path: site/_source/validmind-library
          token: ${{ secrets.VALIDMIND_LIBRARY_RO_PAT }}

      - name: Check out installation repository
        uses: actions/checkout@v4
        with:
          repository: validmind/installation
          path: site/_source/installation
          token: ${{ secrets.INSTALLATION_RO_PAT }}

      - name: Check out release-notes repository
        uses: actions/checkout@v4
        with:
          repository: validmind/release-notes
          path: site/_source/release-notes
          token: ${{ secrets.RELEASE_NOTES_RO_PAT }}

      - name: Set up Quarto
        uses: quarto-dev/quarto-actions/setup@v2
        with:
          version: ${{ vars.QUARTO_VERSION }}

      - name: Setup R environment
        uses: ./.github/actions/setup-r

      - name: Generate Python library docs
        run: |
          cd site/_source/validmind-library
          make install && make quarto-docs
          cd ../../
          rm -rf validmind
          mkdir -p validmind
          rsync -av --exclude '_build' --exclude 'templates' _source/validmind-library/docs/ validmind/

      - name: Populate installation
        run: cp -r site/_source/installation/site/installation site/installation

      - name: Populate release notes
        run: cp -r site/_source/release-notes/releases site

      - name: Render prod docs site
        run: |
            cd site
            quarto render --profile production &> render_errors.log || {
            echo "Quarto render failed immediately";
            cat render_errors.log;
            exit 1;
            }
            make generate-sitemap

      # Prod bucket is in us-east-1
      - name: Configure AWS credentials
        run: aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID_PROD }} && aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }} && aws configure set default.region us-east-1

      - name: Deploy docs prod site
        run: aws s3 sync site/_site s3://validmind-docs-prod/site --delete --exclude "installation/omnibus/*" --exclude "installation/helm-repo/*" && aws cloudfront create-invalidation --distribution-id E2BGG3USKQTR9W --paths "/*" --no-cli-pager

      # Release headroom and shrink before final lightweight steps & post-job
      - name: Release reserve & shrink
        if: always()
        uses: ./.github/actions/free-disk-space
        with:
          release_reserve: "true"
          remove_paths: |
            site/_source/installation
            site/_source/release-notes
            site/render_errors.log
            site/_freeze
            dev.env
            valid.env

      - name: Final disk usage
        if: always()
        run: df -hT /