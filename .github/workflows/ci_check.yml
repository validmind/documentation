name: Release notes check

on:
  pull_request:
    types: [opened, synchronize, labeled, unlabeled, edited]

jobs:
  check_changes:
    runs-on: ubuntu-latest
    outputs:
      description_changed: ${{ steps.check_changes.outputs.description_changed }}
      labels_changed: ${{ steps.check_changes.outputs.labels_changed }}

    steps:
      - name: Check if description changed
        id: check_changes
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            python .github/scripts/check_changes.py description
          fi
          echo "::set-output name=description_changed::${{ success() }}"


      - name: Check if labels changed
        id: check_changes_labels
        if: ${{ steps.check_changes.outputs.description_changed == 'false' }}
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            python .github/scripts/check_changes.py labels
          fi
          echo "::set-output name=labels_changed::${{ success() }}"
  ci_check:
    needs: check_changes
    runs-on: ubuntu-latest
    if: ${{ needs.check_changes.outputs.description_changed == 'false' || needs.check_changes_labels.outputs.labels_changed == 'false' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: pip install PyGithub pyyaml

      - name: Run CI Check
        run: python .github/scripts/ci_check.py ${{ github.event.pull_request.html_url }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
