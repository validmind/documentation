name: Merge main-test into staging-test

on:
  push:
    branches:
      - nrichers/sc-6286/indicate-original-pr-in-title-for-prs-auto

permissions:
  contents: write
  id-token: write
  pull-requests: write

jobs:
  merge-main-test-into-staging-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout staging-test branch
        uses: actions/checkout@v3
        with:
          ref: staging-test

      - name: Configure git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Merge in main-test branch
        run: |
          git fetch origin main-test:main-test
          git merge main-test --no-ff --allow-unrelated-histories --strategy-option theirs -m "Merging latest changes from main-test into staging-test"

      - name: Get last merged pull request details
        id: pr-details
        run: |
          PR_INFO=$(gh pr list --repo "${{ github.repository }}" --state merged --base main-test --limit 1 --json number,title --jq '.[0]')
          PR_NUMBER=$(echo "$PR_INFO" | jq -r '.number')
          PR_TITLE=$(echo "$PR_INFO" | jq -r '.title')
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV
          echo "PR_TITLE=$PR_TITLE" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create pull request
        id: pr-number
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: update-staging-test-${{ github.run_id }}
          title: 'Merge main-test into staging-test â€” PR #${{ env.PR_NUMBER }}: ${{ env.PR_TITLE }}'
          body: 'Automatically merge main-test into staging-test branch.'

      - name: Merge pull request
        if: ${{ steps.pr-number.outputs.pull-request-number != '' }}
        run: gh pr merge --merge --auto "${{ steps.pr-number.outputs.pull-request-number }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete pull request branch
        if: ${{ success() && steps.pr-number.outputs.pull-request-number != '' }}
        run: gh api -X DELETE "repos/${{ github.repository }}/git/refs/heads/update-staging-test-${{ github.run_id }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
