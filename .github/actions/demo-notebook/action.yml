name: Execute demo notebooks
description: Installs python3, validmind, checks dependencies then executes ONLY the training notebook series with development heap tracking

inputs:
  dev_env:
    description: "Load the created dev.env file"
    required: true
  valid_env:
    description: "Load the created valid.env file"
    required: true

runs:
  using: "composite"
  steps:
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: python-pip-${{ runner.os }}-${{ hashFiles('.github/actions/demo-notebook/action.yml') }}
        restore-keys: |
          python-pip-${{ runner.os }}-

    - name: Install python3 for Jupyter Notebooks
      shell: bash
      run: |
        python3 -m pip install jupyter
        python -m pip install --upgrade pip

    - name: Install system dependencies for Kaleido
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libglib2.0-0 \
          libnss3 \
          libgdk-pixbuf2.0-0 \
          libgtk-3-0 \
          libxss1 \
          libasound2t64 \
          libxcomposite1 \
          libxrandr2 \
          libxdamage1 \
          libxfixes3 \
          libxext6 \
          libxi6 \
          libx11-xcb1 \
          libdbus-1-3 \
          xvfb
      shell: bash

    - name: Install validmind for notebook execution
      shell: bash
      run: |
        pip install -r validmind-requirements.txt

    - name: Register validmind kernel
      shell: bash
      run: |
        python -m ipykernel install --user --name validmind --display-name "ValidMind Library"

    - name: Confirm kaleido install
      shell: bash
      run: |
        pip show kaleido || {
          echo "❌ Kaleido not found"
          exit 1
        }

    - name: Kaleido smoke test
      shell: bash
      run: |
        Xvfb :99 -screen 0 1024x768x24 &
        export DISPLAY=:99

        python -c "import plotly.graph_objects as go; fig = go.Figure(); fig.add_scatter(y=[1, 2, 3]); fig.to_image(format='png'); print('✅ Kaleido works')"

    - name: Ensure dev.env file is available
      shell: bash
      id: find_dev_env
      run: |
        if [ ! -f "${{ inputs.dev_env }}" ]; then
          echo "Error: dev.env file not found at ${{ inputs.dev_env }}"
          exit 1
        fi

    - name: Execute ONLY the ValidMind for model development series with heap development
      shell: bash
      if: ${{ steps.find_dev_env.outcome == 'success' }}
      run: |
        cd site
        cp ../${{ inputs.dev_env }} ../.env
        source ../.env

        Xvfb :99 -screen 0 1024x768x24 &  # background display
        export DISPLAY=:99

          quarto render --profile exe-demo notebooks/EXECUTED/model_development \
          &> render_errors.log || {
            echo "Execute for ValidMind for model development series failed"
            cat render_errors.log
            exit 1
          }

    - name: Ensure valid.env file is available
      shell: bash
      id: find_valid_env
      run: |
        if [ ! -f "${{ inputs.valid_env }}" ]; then
          echo "Error: valid.env file not found at ${{ inputs.valid_env }}"
          exit 1
        fi

    - name: Execute ONLY the ValidMind for model validation series with heap development
      shell: bash
      if: ${{ steps.find_valid_env.outcome == 'success' }}
      run: |
        cd site
        cp ../${{ inputs.valid_env }} ../.env
        source ../.env

        Xvfb :99 -screen 0 1024x768x24 &  # background display
        export DISPLAY=:99

          quarto render --profile exe-demo notebooks/EXECUTED/model_validation &> render_errors.log || {
            echo "Execute for ValidMind for model validation series failed"
            cat render_errors.log
            exit 1
          }
