name: Execute demo notebook
description: Installs python3, validmind, checks dependencies then executes ONLY the Intro for Model Developers notebook with development heap tracking

inputs:
  env_file:
    description: "Load the created .env file"
    required: true

runs: 
  using: "composite"
  steps: 
    - name: Install python3 for Jupyter Notebooks
      shell: bash
      run: |
        python3 -m pip install jupyter
        python -m pip install --upgrade pip

    - name: Install validmind for notebook execution
      shell: bash
      run: |
        pip install validmind 
        pip install validmind[llm] 
        pip install fairlearn aequitas 
        pip install shap==0.44.1
        
    - name: Check dependencies
      shell: bash
      run: |
        pip install pycairo
        pip check

    - name: Set global multiprocessing start method to prevent Polars deadlock
      shell: bash
      id: set_spawn
      run: |
        echo "import multiprocessing; multiprocessing.set_start_method('spawn', force=True)" > set_spawn.py
        echo "PYTHONSTARTUP=$(pwd)/set_spawn.py" >> $GITHUB_ENV

    - name: Debug PYTHONSTARTUP
      if: ${{ steps.set_spawn.outcome == 'success' }}
      shell: bash
      run: |
        echo "PYTHONSTARTUP is set to: $PYTHONSTARTUP"

    - name: Ensure .env file is available
      shell: bash
      id: find_env
      run: |
        if [ ! -f "${{ inputs.env_file }}" ]; then
          echo "Error: .env file not found at ${{ inputs.env_file }}"
          exit 1
        fi

    - name: Execute ONLY the Intro for Model Developers notebook with heap development
      shell: bash
      if: ${{ steps.find_env.outcome == 'success' }}
      run: |
          cd site 
          source ../${{ inputs.env_file }}
          quarto render --profile exe-demo notebooks/tutorials/intro_for_model_developers_EXECUTED.ipynb &> render_errors.log || { 
          echo "Execute for intro_for_model_developers_EXECUTED.ipynb failed";
          cat render_errors.log;
          exit 1;
          }