---
title: "July 22, 2024"
date: 2024-07-22
aliases: 
  - /releases/2024-jul-22/release-notes.html
listing:
  id: training
  type: grid
  grid-columns: 1
  # image-height: 100%
  contents:
    - path: ../../../training/training.qmd
      title: "Try out {{< var validmind.training >}}"
      description: "Our training modules are interactive. They combine instructional content with our live product and are easy to use."
  fields: [title, description]
---

On top of our increased support for tests and arrays in the {{< var validmind.developer >}} and our first {{< var validmind.training >}} training modules, we've introduced customizable model workflows, new role functionality, and new report types.


::: {.highlights}

## {{< fa bullhorn >}} Release highlights

### {{< var validmind.developer >}} (v2.4.4)

<!---
PR #123: Support for comparison tests
URL: https://github.com/validmind/validmind-library/pull/123
Labels: enhancement, highlight
--->
<!---
PR #125: Comparison tests notebook
URL: https://github.com/validmind/validmind-library/pull/125
Labels: enhancement
--->
#### Support for comparison tests

:::: {.flex .flex-wrap .justify-around}

::: {.w-60-ns}
You can now run comparison tests with the {{< var validmind.developer >}}. 

:::

::: {.w-30-ns}
[Run comparison tests](/notebooks/how_to/run_tests/2_run_comparison_tests.ipynb){.button .button-green}

:::

::::

- This feature is useful when you want to run the same test against multiple combinations of models or datasets. 
- A comparison test creates a single documentation block that compares the individual results.

![Comparison test being run in a notebook](comparison_test.gif){width=90% fig-alt="An animated GIF showing a comparison test being run in a notebook." .screenshot}

::: {.column-margin}
The updated `run_test()` function allows you to pass an `input_grid` which runs a test for all combinations of inputs.
:::


:::: {.flex .flex-wrap .justify-around}

::: {.w-40-ns}

##### Input grid example

```python
input_grid = {
    "model": ["XGBoost"],
    "dataset": ["train_dataset", "test_dataset"],
}
```

A test runs once for each of the following input groups:

```python
{
"model": "XGBoost",
"dataset": "train_dataset"
}

{
"model": "XGBoost",
"dataset": "test_dataset"
}
```

:::

::: {.w-50-ns}

##### Example function calls

```python
from validmind.tests import run_test

input_grid = {
    "model": ["XGBoost"],
    "dataset": ["train_dataset", "test_dataset"],
}

result = run_test(
    "validmind.model_validation.sklearn.ClassifierPerformance",
    input_grid,
)

result = run_test(
    "validmind.model_validation.sklearn.ConfusionMatrix",
    input_grid,
)

result = run_test(
    "validmind.model_validation.sklearn.ROCCurve",
    input_grid,
)
```

:::

::::

### {{< var validmind.platform >}} (v1.22.0)

<!---
PR #209: "Model Workflows" section in Guides
URL: https://github.com/validmind/documentation/pull/209
Labels: documentation
--->
#### Customizable model workflows

You can now manage lifecycle processes within your {{< var validmind.platform >}} setup using customizable model workflows. 

:::: {.flex .flex-wrap .justify-around}

::: {.w-70-ns}
- You use these workflows to match your organizational needs for overseeing model development, validation, or implementation activities.
- A default workflow is provided for you as suggestion.

:::

::: {.w-30-ns}

[Configure custom workflows](/guide/model-workflows/configure-custom-workflows.qmd){.button .button-green}

:::

::::

![Workflow step configuration](/guide/model-workflows/configure-steps.gif){fig-alt="A gif workflow step configuration" .screenshot}

:::


## Enhancements

### {{< var validmind.developer >}} (v2.4.4)

<!---
PR #127: [SC-5175] Enhance add extra column to support 2d arrays
URL: https://github.com/validmind/validmind-library/pull/127
Labels: enhancement
--->
#### Support for 2D arrays in `add_extra_column`

:::: {.flex .flex-wrap .justify-around}

::: {.w-50-ns}

- With enhancements to the `VMDataset` class, the `add_extra_column()` method now supports adding 2D arrays as single columns in the dataset's DataFrame. 
- These changes ensure that 2D arrays are stored in a single column without altering the DataFrame structure. 

::: {.tc}
[add_extra_column()](/validmind/validmind/vm_models.qmd#add_extra_column){.button target="_blank"}

:::

:::

::: {.w-40-ns}
**For example:**

```python 
import numpy as np
import pandas as pd

# sample DataFrame
df = pd.DataFrame({
    'A': [1, 2, 3],
    'B': [4, 5, 6]
})

# sample 2D array
array_2d = np.array([
    [1, 2],
    [3, 4],
    [5, 6]
])

vm_dataset = vm.init_dataset(
    dataset=df,
    input_id=dummy_ds
)

vm_dataset.add_extra_columns(
    "dummy_column",
    array_2d
)
```

:::

::::



<!---
PR #834: John6797/sc 5172/test result interpretations and risk assessment
URL: https://github.com/validmind/frontend/pull/834
Labels: enhancement
--->
<!-- NR Commented out as AI features are mentioned and there's not enough info here. -->
<!-- ### Test result interpretations and risk assessment

We expanded support for figures and plots when using {{< var vm.product >}} AI interpretations and risk assessments. -->

### {{< var validmind.platform >}} (v1.22.0)

:::: {.flex .flex-wrap .justify-around}

::: {.w-40-ns}

<!---
PR #824: [SC-5146] add new role modal
URL: https://github.com/validmind/frontend/pull/824
Labels: enhancement
--->

#### Add new role functionality

Users with the `Create Role` permission can now add a new role under **{{< fa gear >}} Settings**.

::: {.tc}
[Manage roles](/guide/configuration/manage-roles.qmd){.button}

[Manage permissions](/guide/configuration/manage-permissions.qmd){.button}

:::

:::

::: {.w-50-ns}

<!---
PR #820: Added new report types
URL: https://github.com/validmind/frontend/pull/820
Labels: enhancement
--->
#### New report types

We added a number of new report types:

- Number of models by business unit and tier
- Number of models by status
- Avgerage number of days models spend in a status
- Models by number of findings

::: {.tc}
[Working with analytics](/guide/reporting/working-with-analytics.qmd){.button}

:::

:::

::::

## Bug fixes

### {{< var validmind.developer >}} (v2.4.4)

<!---
PR #229: Updated test descriptions 
URL: https://github.com/validmind/documentation/pull/229
Labels: bug
--->

:::: {.flex .flex-wrap .justify-around}

::: {.w-80-ns}

We fixed a number of missing test descriptions that were caused by a scripting issue.
:::

::: {.w-20-ns}

[Test descriptions](/developer/model-testing/test-descriptions.qmd){.button}

:::

::::

## Documentation

<!---
PR #200: Create training collateral
URL: https://github.com/validmind/documentation/pull/200
Labels: documentation
--->
### {{< var validmind.training >}}

We're introducing the first training modules that are part of our {{< var validmind.training >}} training program for:

:::: {.flex .flex-wrap .justify-around}

::: {.w-50-ns}
- Model developers
- Model validators
- Administrators

:::

::: {.w-50-ns}


:::{#training}
:::

:::

::::


{{< include /releases/_how-to-upgrade.qmd >}}


