---
title: "December 6, 2024"
aliases: 
  - /releases/2024-dec-06/release-notes.html
filters:
  - tachyons
  - preview
listing:
  - id: library
    type: grid
    grid-columns: 1
    max-description-length: 250
    # image-height: 100%
    contents:
      - path: ../../../about/overview-model-documentation.qmd
        title: "Learn more — {{< var validmind.developer >}}"
        description: "The {{< var validmind.developer >}} is a Python library and documentation engine designed to streamline the process of documenting various types of models."
    fields: [title, description]
  - id: platform
    type: grid
    grid-columns: 1
    max-description-length: 250
    # image-height: 100%
    contents:
      - path: ../../../about/overview-model-risk-management.qmd
        title: "Learn more — <br>{{< var validmind.platform >}}"
        description: "The {{< var validmind.platform >}} offers an integrated solution to manage validation reports, track findings, and report on model risk compliance across your model portfolio."
    fields: [title, description]
  - id: academy
    type: grid
    grid-columns: 1
    max-description-length: 250
    # image-height: 100%
    contents:
      - path: ../../../training/training.qmd
        title: "{{< fa graduation-cap >}} {{< var validmind.training >}}"
        description: "Our free training courses make navigating AI and governance straightforward, practical, and even fun — gain hands-on experience and discover the platform that simplifies model risk management!"
    fields: [title, description]
---

We've chosen some new names for our product offerings, expanded our training courses, introduced new large language model (LLM) features — and much, much, more!

::: {.highlights}

## {{< fa bullhorn >}} Release highlights

### {{< var validmind.developer >}} (v2.5.25)

<!---
PR #1044: [SC-6649] replace developer framework with library
URL: https://github.com/validmind/frontend/pull/1044
Labels: enhancement
--->

#### {{< var vm.product >}} Developer Framework > {{< var validmind.developer >}}

:::: {.flex .flex-wrap .justify-around}

::: {.w-50-ns}
To reduce ambiguity and highlight the capabilities of our developer tools, as of `v2.5.25` what was previously referred to as the {{< var vm.product >}} Developer Framework is now known as the **{{< var validmind.developer >}}**.


:::

::: {.w-40-ns}
:::{#library}
:::

:::

::::

:::: {.flex .flex-wrap .justify-around}

::: {.w-30-ns .tc}
[{{< var validmind.developer >}}](/developer/validmind-library.qmd){.button .button-green}

:::

::: {.w-40-ns .tc}
[{{< var validmind.developer >}} API reference](/validmind/validmind.qmd){.button .button-green target="_blank"}

:::

::: {.w-30-ns .tc}
[{{< fa brands github >}} validmind-library](https://github.com/validmind/validmind-library){.button .button-green target="_blank"}

:::

::::

::: {.callout}
## {{< var validmind.developer >}} enhancements[^1]
In addition to the enhancements in this release, references to the developer framework have been replaced across the {{< var validmind.developer >}} package and open-source repository, as well as the {{< var validmind.platform >}} and the user documentation.

:::

#### Code samples

<!---
PR #214: [SC-7262] Update RAG documentation demo notebook
URL: https://github.com/validmind/validmind-library/pull/214
Labels: enhancement
--->
##### RAG Model Documentation Demo 

Check out our **RAG Model Documentation Demo** Jupyter Notebook! 

:::: {.flex .flex-wrap .justify-around}

::: {.w-60-ns}
Learn how to build a basic RAG (Retrieval-Augmented Generation) model to help automatically answer RFP (Request for Proposal) questions using GenAI. 

:::

::: {.w-40-ns .tc}
[RAG Model Documentation Demo](/notebooks/code_samples/nlp_and_llm/rag_documentation_demo.html){.button .button-green}

:::

::::

From in-depth tests assessing generation quality to checks detecting bias and toxicity, use LangChain[^2] and {{< var vm.product >}} to build, evaluate, and document a simple RAG model as it is being developed. 

### {{< var validmind.platform >}} (v1.27.7)

#### {{< var validmind.platform >}} UI > {{< var validmind.platform >}} 
<span id="platform-rename"></span>

:::: {.flex .flex-wrap .justify-around}

::: {.w-60-ns}
To reduce ambiguity and highlight the capabilities of our cloud-hosted interface, as of `v1.27.7` what was previously referred to as the {{< var validmind.platform >}} UI is now simply known as the **{{< var validmind.platform >}}**.

:::: {.flex .flex-wrap .justify-around}
::: {.w-50-ns .tc}
[{{< var validmind.platform >}} guides](/guide/guides.qmd){.button .button-green}

:::

::: {.w-40-ns .tc}
[Accessing {{< var vm.product >}}](/guide/configuration/accessing-validmind.qmd){.button .button-green}

:::

::::

:::

::: {.w-30-ns}
:::{#platform}
:::
:::

::::


::: {.callout}
## {{< var validmind.platform >}} enhancements[^3]
In addition to the enhancements in this release, references to the platform UI have been replaced across the {{< var validmind.developer >}} package and open-source repository, as well as the {{< var validmind.platform >}} and the user documentation.

:::

<!---
PR #1048: Product Feedback
URL: https://github.com/validmind/frontend/pull/1048
Labels: enhancement
--->
#### Submit product feedback directly

:::: {.flex .flex-wrap .justify-around}

::: {.w-70-ns}

You can now submit feature requests, bug reports, or any other feedback directly within the {{< var validmind.platform >}}.

Click on the **Talk to us.** tab on the right-hand side of any screen and follow three easy steps:

::: {.tc}
[Submit feedback](/support/support.qmd#feedback){.button .button-green}

:::

:::

::: {.w-30-ns}

![The `Talk to us.` feedback panel within the {{< var validmind.platform >}}](/support/talk-to-us.png){fig-alt="A screenshot showing the `Talk to us.` feedback panel within the ValidMind Platform" .screenshot}

:::

::::


<!---
PR #1068: New reporting (Milestone 1)
URL: https://github.com/validmind/frontend/pull/1068
Labels: enhancement
--->
#### Support for custom analytics
<span id="custom-analytics"></span>
You can now add, edit, or remove custom data to your analytics within the {{< var validmind.platform >}} in two steps:

:::: {.flex .flex-wrap .justify-around}

::: {.w-50-ns}

1. **Add custom analytic pages** — Custom analytics pages allow you to add custom visualizations on top of the out-of-the-box reports provided by {{< var vm.product >}}.
2. **Add custom visualizations** — A visualization is a custom reporting widget that retrieves data on your metric of choice. Choose from bar charts, pie charts, or a simple counter.

::: {.tc}
[Manage custom reports](/guide/reporting/manage-custom-reports.qmd){.button .button-green}
:::

:::

::: {.w-50-ns .tc}
![Example setup for a custom stacked bar chart](/guide/reporting/custom-visualization-setup.png){width=85% fig-alt="An screenshot of an example setup for a custom stacked bar chart" .screenshot}

:::

::::

### Documentation 

#### User guide updates

##### Updated product terminology

<!-- MANUAL ADD: 
https://github.com/validmind/documentation/pull/521 -->

:::: {.flex .flex-wrap .justify-around}

::: {.w-70-ns}
In concert with our product renaming across the {{< var validmind.developer >}} and the {{< var validmind.platform >}}, we've edited all user guides and external facing documentation to reflect these updates.

Of note is the **{{< fa cube >}} Developers** drop-down menu, previously called {{< fa cube >}} Developer Framework.

:::

::: {.w-30-ns .tc}

[{{< var vm.product >}} product names](/about/contributing/style-guide/conventions.qmd#product-names){.button .button-green}

[{{< fa cube >}} Developers](/developer/validmind-library.qmd){.button .button-green}


:::

::::

<!-- MANUAL ADD: 
New homepage & search: https://github.com/validmind/documentation/pull/465 
New colors & logo: https://github.com/validmind/documentation/pull/366
New sidebar & ToC theme: https://github.com/validmind/documentation/pull/524 -->

##### New {{< var vm.product >}} branding
<span id="new-branding"></span>
Along with keeping our content up to date,[^4] we've refreshed the look and feel of our documentation to reflect {{< var vm.product >}}'s new brand colors used on our main website[^5] and within the {{< var validmind.platform >}}. 

###### Improved documentation homepage
:::: {.flex .flex-wrap .justify-around}

::: {.w-50-ns}
We've overhauled the documentation homepage. Check it out:

- More quick links out to popular user guides,
- New sections for training collateral and latest releases, 
- And updated search functionality!

::: {.tc}
[Documentation homepage](https://docs.validmind.ai/){.button .button-green}
:::

:::

::: {.w-40-ns .tc}
![A question entered into the new homepage search functionality](new-search-box.png){fig-alt="A screenshot of a question entered into the new homepage search functionality" .screenshot}

:::

::::

###### Updated logo and theme
The {{< var vm.product >}} logo has been updated across the documentation, and a new style applied to our side navigation and table of contents to unify the experience across our products: 

:::: {.flex .flex-wrap .justify-around}

::: {.w-40-ns .tc}
![Old documentation site theme](old-site-theme.png){fig-alt="A screenshot of the old documentation site theme" .screenshot group="theme"}

:::

::: {.w-40-ns .tc}
![New documentation site theme](new-site-theme.png){fig-alt="A screenshot of the new documentation site theme" .screenshot group="theme"}

:::

::::

<!-- MANUAL ADD — Training style overhaul:
https://github.com/validmind/documentation/pull/501
https://github.com/validmind/documentation/pull/509 
https://github.com/validmind/documentation/pull/497 -->

##### {{< var validmind.training >}} portal
<span id="validmind-academy"></span>
To complement our rebranding,[^6] our {{< var validmind.training >}} training now features its own theme and landing page to distinguish the material from the rest of the documentation along with content updates.[^7]

:::: {.flex .flex-wrap .justify-around}

::: {.w-50-ns}

- This new training homepage makes it easier for you to find and register for courses.
- Each course offered now includes a preview of the learning objectives and an estimated duration, to inform your instruction experience.

:::

::: {.w-40-ns}
:::{#academy}
:::

:::

::::


:::: {.flex .flex-wrap .justify-around}

::: {.w-40-ns .tc}
![Old training landing page](old-training-landing.png){fig-alt="A screenshot of the old training landing page" .screenshot group="academy"}

:::

::: {.w-40-ns .tc}
![New training landing page](new-training-landing.png){fig-alt="A screenshot of the new training landing page" .screenshot group="academy"}

:::

::::

<!---
PR #510: Document LLM features
URL: https://github.com/validmind/documentation/pull/510
Labels: documentation
--->
##### {{< var vm.product >}} LLM feature overview

:::: {.flex .flex-wrap .justify-around}

::: {.w-70-ns}
{{< var vm.product >}} offers several specialized features that use large language models (LLMs), such as our **Document Checker**. These features streamline model risk management and ensure regulatory compliance. 

We've created a guide on how we approach these features and what you need to know:

::: {.tc}
[Large language model features](/about/overview-llm-features.qmd){.button .button-green}
:::

:::

::: {.w-30-ns}
![Document Checker](/about/overview-llm-features-check-document.png){fig-alt="A screenshot showing the LLM feature for checking documents that can be accessed with the Check Document button" .screenshot}

:::

::::

:::


## Enhancements

### {{< var validmind.developer >}} (v2.5.25)
<span id="library-enhancements"></span>
<!---
PR #198: Add parameter grid support in the comparison tests functionality
URL: https://github.com/validmind/validmind-library/pull/198
Labels: documentation, enhancement
--->

#### Added parameter grid support in comparison tests

:::: {.flex .flex-wrap .justify-around}

::: {.w-90-ns}
In addition to comparison tests using the `input_grid` parameter in `run_test()` functionality, we've added similar support for `param`s: 

:::

::: {.w-10-ns .tc}
[run_test()](/validmind/validmind/tests.qmd#run_test){.button}

:::

::::


- Useful when you want to run the same test against multiple combinations of test parameters and create a single documentation block that compares the individual results, the updated `run_test()` function allows you to pass a `param_grid`. 
- This grid runs a test for all combinations of parameters.

**Example**

:::: {.flex .flex-wrap .justify-around}

::: {.w-40-ns}
For this `param` grid:

```
param_grid = {
    "param1": [1],
    "param2": [0.1, 0.2],
}
```

:::

::: {.w-40-ns}
A test runs once for each of the following `param` groups:

```
{"param1": 1, "param2": 0.1}
{"param1": 1, "param2": 0.2}
```

:::

::::

<!---
PR #213: chore: undo some testing changes
URL: https://github.com/validmind/validmind-library/pull/213
Labels: 
--->
<!-- #### Undo some testing changes -->

<!--- No external tag, was an internal infra update --->
 
<!-- Generated PR summary: 
 
This update to the CI workflow configuration includes two key improvements. The runner version is now set to `ubuntu-latest`, allowing your workflow to automatically use the most current stable version of Ubuntu. This change aids in maintaining compatibility with the latest software and security updates. Additionally, failure notifications are now enabled via a Slack webhook. This feature alerts your team in case of a failure during the integration job, enhancing your ability to promptly respond to and resolve any issues that occur in the CI process. -->


### {{< var validmind.platform >}} (v1.27.7)
<span id="platform-enhancements"></span>

#### User experience

<!---
PR #1012: [6413] - chore: replace all btns with chakra Button
URL: https://github.com/validmind/frontend/pull/1012
Labels: enhancement
--->
##### Updated user interface theme

With a new name[^8] comes a fresh skin — the {{< var validmind.platform >}}'s theme now matches our main website and documentation, featuring our new logo and accent color:

:::: {.flex .flex-wrap .justify-around}

::: {.w-40-ns}
![Old {{< var validmind.platform >}} theme](platform-old.png){fig-alt="A screenshot of the old ValidMind Platform theme" .screenshot group="theme"}

:::

::: {.w-40-ns}
![New {{< var validmind.platform >}} theme](platform-new.png){fig-alt="A screenshot of the new ValidMind Platform theme" .screenshot group="theme"}

:::

::::

<!---
PR #989: AI Terms of Use
URL: https://github.com/validmind/frontend/pull/989
Labels: documentation
--->
##### Accepting AI terms of use

- During registration with the {{< var validmind.platform >}},[^9] new users are now asked to read and accept our terms and conditions, including our AI Usage Policy.
- Existing users will see a dialog popup next time they log in, asking them to review and accept the same terms and conditions before continuing.

:::: {.flex .flex-wrap .justify-around}

::: {.w-70-ns}
![Popup dialog requesting review of the AI terms of use](accept-ai-terms.png){fig-alt="A screenshot of the popup dialog requesting review of the AI terms of use" .screenshot group="terms"}

:::

::: {.w-30-ns}
[Terms & conditions](https://validmind.com/about/legal/){.button}

:::

::::

![{{< var vm.product >}} profile completion screen with the terms and conditions checked](/guide/configuration/signup-complete-profile.png){fig-alt="Screenshot of the ValidMind profile completion screen with the terms and conditions checked" .screenshot group="terms" width=80%}

#### Model workflows

<!---
PR #1063: Support attaching files on workflow transitions
URL: https://github.com/validmind/frontend/pull/1063
Labels: enhancement
--->
##### Support for attaching files on workflow transitions

:::: {.flex .flex-wrap .justify-around}

::: {.w-70-ns}
We now support including attachment fields as a request field on a User Action step within workflows, allowing you to directly request supporting documentation for transitioning a model into its next lifecycle status.

:::

::: {.w-30-ns .tc}
[Set up model workflows](/guide/model-workflows/set-up-model-workflows.qmd#attachments){.button}

:::

::::

![User Action step configuration with a request field of Workflow Attachment](/guide/model-workflows/upload-workflow-attachment.png){fig-alt="A screenshot showing a User Action step configuration with a request field of Workflow Attachment" .screenshot}

##### Ability to configure divergent paths in workflows

<!-- MANUAL ADD — Updated workflows docs:
Approval step update: https://github.com/validmind/documentation/pull/264 
Condition branches: https://github.com/validmind/documentation/pull/484  -->

:::: {.flex .flex-wrap .justify-around}

::: {.w-70-ns}
We continue to add new functionality to model workflows within the {{< var validmind.platform >}}, including the ability to now select a **User Role** or a **User Type** inventory field in an Approval step, and the ability to configure diverging paths with Condition Branch steps.
:::

::: {.w-30-ns .tc}
[Approval steps](/guide/model-workflows/set-up-model-workflows.qmd#approval){.button}

[Condition Branch steps](/guide/model-workflows/set-up-model-workflows.qmd#condition-branch){.button}

:::

::::

![Example Condition Branch where GenAI models require special approval from the User group Legal Team](/guide/model-workflows/example-condition-branch.png){fig-alt="A screenshot showing an example Condition Branch where GenAI models require special approval from the User group Legal Team" .screenshot width=90%}

#### Model inventory fields

<!-- MANUAL ADD:
Calculated fields: https://github.com/validmind/documentation/pull/443 -->

##### Ability to configure calculated model inventory fields

:::: {.flex .flex-wrap .justify-around}

::: {.w-60-ns}
Custom model inventory fields are now more flexible than ever — introducing the ability to define a `formula(params)` function that automatically calculates and returns a value based on the params dictionary, which includes selected custom field keys retrieved from your other inventory model fields.

:::

::: {.w-30-ns .tc}
[Manage model inventory fields](/guide/model-inventory/manage-model-inventory-fields.qmd#calculation){.button}

:::

::::

![Adding a calculation type field](/guide/model-inventory/calculation-field.png){fig-alt="A screenshot showing the screen for adding a calculation type field" width=90% .screenshot}

::: {.column-margin}
**Example formula:**

```python
    def formula(params):
        # High Risk: If materiality is high risk, return high risk regardless of complexity
        if params.materiality == "High Risk":
                return "High Risk"
        # Medium Risk: If materiality is low risk but complexity is high risk, return medium risk
        if params.materiality == "Low Risk" and params.complexity  == "High Risk":
                return "Medium Risk"
        # Low Risk: Both materiality and complexity are low risk
        return "Low Risk"
```
:::

<!---
PR #1047: [6389] - feat: allow user to add description to each uploaded file
URL: https://github.com/validmind/frontend/pull/1047
Labels: enhancement
--->
##### Ability to add descriptions to attachments

:::: {.flex .flex-wrap .justify-around}

::: {.w-60-ns}
You can now annotate attachments uploaded to both models or model findings, allowing you to describe the contents of the file or provide commentary. 

:::

::: {.w-40-ns .tc}
[Edit model inventory fields](/guide/model-inventory/edit-model-inventory-fields.qmd#manage-supporting-documentation){.button}

[Add and manage model findings](/guide/model-validation/add-manage-model-findings.qmd#manage-supporting-documentation){.button}

:::

::::

![Adding attachment notes](/guide/model-inventory/add-attachment-note.gif){ fig-alt="An animated gif demonstrating how to add attachment notes" .screenshot width=90%}

<!---
PR #1078: Support for datetime manipulation in inventory fields
URL: https://github.com/validmind/frontend/pull/1078
Labels: enhancement
--->

<!-- SPOKE WITH ANDRES, THIS IS NOT READY TO BE EXPOSED YET  -->

<!-- #### Support for `datetime` manipulation in inventory fields

You can now use the following date/date-time-related functions in calculated fields:

- time
- date
- datetime
- `timedelta`
- `relativedelta`

Example formula using `date` and `relativedelta`:

```python
def formula(params):
    """ 
    Calculate the next review date based on the approval date and review frequency.

    Args:
        params.dmApprovedDate (str): The approval date in YYYY-MM-DD format.
        params.dmRiskTier (string): The review tier (Tier 1, Tier 2, or Tier 3).

    Returns:
        datetime: The next review date.
    """
    
    # Guard against empty dates
    if params.dmApprovedDate == "":
        return "N/A"
    
    # Convert the approved_date string to a datetime object
    approved_date = date.fromtimestamp((int(params.dmApprovedDate) or 0) / 1000)
    
    # Define the review frequency mapping
    review_frequency = {
        "Tier 1": relativedelta(months=3),  # Quarterly
        "Tier 2": relativedelta(months=6),  # Semi-annually
        "Tier 3": relativedelta(years=1)   # Annually
    }
    
    # Get the appropriate timedelta based on the tier
    frequency = review_frequency.get(params.dmRiskTier)
    
    if not frequency:
        return "N/A"
    
    # Calculate the next review date
    next_review_date = approved_date + frequency
    
    return next_review_date.isoformat()
```

To recap

Here are all the objects available in the restricted calculation code environment:

| **Function/Global**     | **Description**                                                                                       | **Example Usage**              |
|-------------------------|-------------------------------------------------------------------------------------------------------|--------------------------------|
| `hasattr`               | Checks if an object has a specific attribute.                                                         | `hasattr(obj, 'attr_name')`     |
| `getattr`               | Retrieves the value of a specified attribute from an object.                                         | `getattr(obj, 'attr_name', default)` |
| `datetime`              | Provides classes for working with dates and times.                                                   | `datetime.now()`                |
| `timedelta`             | Represents a duration, the difference between two dates or times.                                   | `datetime.now() + timedelta(days=1)` |
| `relativedelta`         | Provides more powerful date manipulations, like months or leap years handling.                      | `datetime.now() + relativedelta(months=1)` |
| time                    | Provides functions to work with time, such as sleep and measuring time intervals.                  | `time.sleep(1)`                 |
| None                    | Represents absence of a value.                                                                       | x = None                        |
| False                   | Boolean value representing false.                                                                  | is_valid = False                |
| True                    | Boolean value representing true.                                                                   | is_valid = True                 |
| abs                     | Returns absolute value of a number.                                                                | abs(-10)                        |
| bool                    | Converts a value to Boolean.                                                                      | bool(1)                         |
| float                   | Converts a value to floating-point number.                                                        | float('3.14')                   |
...
 
Generated PR summary: 
 
This update enhances date handling by updating the `CustomDatePicker` component to use `dayjs` for improved reliability and consistency over the native `Date` object. Additionally, the `useField` hook now utilizes the `useEffect` hook to initialize state values, ensuring that the `value` state accurately reflects changes to the `defaultState` prop. These improvements aim to boost the functionality and reliability of these components. -->

#### Model documentation

<!---
PR #1039: [6445] - feat: implement filtering and sorting features on historical test runs component
URL: https://github.com/validmind/frontend/pull/1039
Labels: enhancement
--->
##### Ability to filter and sort historical test runs

:::: {.flex .flex-wrap .justify-around}

::: {.w-70-ns}
If more than one set of test results has been logged with the {{< var validmind.developer >}} to the {{< var validmind.platform >}}, you can now filter your historical test results for ease of access.
 
:::

::: {.w-30-ns .tc}
[Work with test results](/guide/model-documentation/work-with-test-results.qmd#filter-historical-test-results){.button}

:::

::::

![Historical test result filters](test-result-filters.png){ fig-alt="An screenshot of the historical test result filters" .screenshot width=90%}


<!---
PR #1045: As a validator, I want to be able to tag a Documentation section as evidence in my validation report
URL: https://github.com/validmind/frontend/pull/1045
Labels: enhancement
--->
##### Documentation sections linked to evidence

:::: {.flex .flex-wrap .justify-around}

::: {.w-70-ns}
When working with validation reports, linking developer evidence is now associated with a documentation section, making validation reports clearer and the process easier for you to assess compliance.

:::

::: {.w-30-ns .tc}
[Assess compliance](/guide/model-validation/assess-compliance.qmd#link-developer-evidence){.button}

:::

::::

:::: {.flex .flex-wrap .justify-around}

::: {.w-40-ns}
![Old Developer Evidence section without linked documentation sections](old-evidence.png){fig-alt="A screenshot of the old Developer Evidence section without linked documentation sections" .screenshot group="evidence" width=90%}

:::

::: {.w-40-ns}
![New Developer Evidence section with linked documentation sections](new-evidence.png){fig-alt="A screenshot of the new Developer Evidence section with linked documentation sections" .screenshot group="evidence" width=90%}

:::

::::

<!---
PR #1025: Updagrade ckeditor 43
URL: https://github.com/validmind/frontend/pull/1025
Labels: 
--->

<!-- ### Upgrade ckeditor 43 -->
<!-- There were no notes or an `internal` tag added for this release. -->

## Bug fixes

### {{< var validmind.platform >}} (v1.27.7)

<!---
PR #1018: [SC-6833] calculating last updated for template based on last version
URL: https://github.com/validmind/frontend/pull/1018
Labels: bug
--->

<!---
PR #1037: user roles not updated
URL: https://github.com/validmind/frontend/pull/1037
Labels: bug
--->

<!---
PR #1054: [6981] - fix: solve UI bug on Assign roles modal
URL: https://github.com/validmind/frontend/pull/1054
Labels: bug
--->

:::: {.flex .flex-wrap .justify-around}

::: {.w-60-ns}

- Previously, the [last updated]{.smallcaps} value attached to templates did not accurately display the date of last modification — this has now been updated to reflect the correct last adjustment date. 

:::

::: {.w-40-ns .tc}
[Customize documentation templates](/guide/model-documentation/customize-documentation-templates.qmd){.button}

:::

::::

:::: {.flex .flex-wrap .justify-around}

::: {.w-70-ns}
- Previously, display issues were present when adding or removing roles from users within the **{{< fa book-open >}} User Directory** — these issues have now been resolved.

:::

::: {.w-30-ns .tc}
[Manage users](/guide/configuration/manage-users.qmd#user-roles){.button}

:::

::::

## Documentation

<!-- BECK IS MANUALLY ADDING NEAT THINGS WE NEVER HIGHLIGHTED OR BACKFILLED AS A DOCS LINK IN ANOTHER RELEASE -->

### User guide updates
<span id="guide-updates"></span>
We've been working hard to keep our documentation up to date with our lightning-fast feature releases. Below is a round-up of some notable user guide improvements not covered by independent feature release announcements:

#### Configuration

##### Register with {{< var vm.product >}}

<!-- User registration:
https://github.com/validmind/documentation/pull/410 -->

:::: {.flex .flex-wrap .justify-around}

::: {.w-70-ns}
Signing up for {{< var vm.product >}} is free — and now you can follow our step-by-step registration guide to get you started.

:::

::: {.w-30-ns .tc}
[Register with {{< var vm.product >}}](/guide/configuration/register-with-validmind.qmd){.button}

:::

::::

##### Managing your organization

<!-- Configuration — Organization & Users:
https://github.com/validmind/documentation/pull/226
https://github.com/validmind/documentation/pull/235
https://github.com/validmind/documentation/pull/285 -->

:::: {.flex .flex-wrap .justify-around}

::: {.w-70-ns}
After you sign up for {{< var vm.product >}}, refer to our guides on setting up your organization, including options for establishing a private connection between {{< var vm.product >}} and your company network.

:::

::: {.w-30-ns .tc}
[Managing your organization](/guide/configuration/managing-your-organization.qmd){.button}

:::

::::

##### Managing users

<!-- Updated permissions:
https://github.com/validmind/documentation/pull/273 -->

:::: {.flex .flex-wrap .justify-around}

::: {.w-70-ns}
We've clarified prerequisites for tasks and the permissions default roles have and improved our information on user management to help you understand how access to {{< var vm.product >}} works.

:::

::: {.w-30-ns .tc}
[Managing users](/guide/configuration/managing-users.qmd){.button}

:::

::::

![Example prerequisite information](example-prereq.png){fig-alt="Screenshot of some example prerequisite information" .screenshot width=90%}

#### Model inventory

##### Register models in the inventory

<!-- Updated 2-step model registration:
https://github.com/validmind/documentation/pull/253 -->

:::: {.flex .flex-wrap .justify-around}

::: {.w-60-ns}
To complement the ability to add your own model inventory fields, model registration within {{< var validmind.platform >}} is now a two-step process, broken down into Basic Model Information and Additional Model Information with a matching user guide.

:::

::: {.w-40-ns .tc}
[Register models in the inventory](/guide/model-inventory/register-models-in-inventory.qmd){.button}

:::

::::

##### View model activity

<!-- Documentation activity > Model activity:
https://github.com/validmind/documentation/pull/315 
https://github.com/validmind/documentation/pull/358 -->

To better align documentation with what users see within the {{< var validmind.platform >}}, our previous article titled "View documentation activity" has been renamed to **View model activity** and now lives under the **[model inventory]{.smallcaps}** sub-section under **Guides**.

:::: {.flex .flex-wrap .justify-around}

::: {.w-70-ns}
This new guide features expanded information on the auditing feature, including information on how to filter tracked activity.

:::

::: {.w-30-ns .tc}
[View model activity](/guide/model-inventory/view-model-activity.qmd){.button}

:::

::::

#### Model documentation

##### Working with documentation templates

<!-- Updated docs for templates:
https://github.com/validmind/documentation/pull/228
https://github.com/validmind/documentation/pull/230 -->

:::: {.flex .flex-wrap .justify-around}

::: {.w-60-ns}
We've expanded our reference guides on working with documentation templates, including updated information on customizing templates, and swapping between versions of different types of templates.

:::

::: {.w-40-ns .tc}
[Working with documentation templates](/guide/model-documentation/working-with-documentation-templates.qmd){.button}

:::

::::


##### Work with content blocks

<!-- Inserting math formulas:
https://github.com/validmind/documentation/pull/204 -->

<!-- Revamped Work with content blocks:
https://github.com/validmind/documentation/pull/390 -->


:::: {.flex .flex-wrap .justify-around}

::: {.w-70-ns}
We've expanded our reference guide on working with content blocks, including updated information on different content block types, an overview of our content editing toolbar, and a section on how to insert math formulas right into your documentation.

:::

::: {.w-30-ns .tc}
[Work with content blocks](/guide/model-documentation/work-with-content-blocks.qmd){.button}

:::

::::


#### Model validation

##### Working with model findings

<!-- Revamped model findings docs:
https://github.com/validmind/documentation/pull/352 
https://github.com/validmind/documentation/pull/355 -->

:::: {.flex .flex-wrap .justify-around}

::: {.w-70-ns}
Our reference material on model findings has been expanded to include key concepts, and have been broken down into two sub-guides detailing viewing and filtering model findings, and adding and managing model findings. 

:::

::: {.w-30-ns .tc}
[Working with model findings](/guide/model-validation/working-with-model-findings.qmd){.button}

:::

::::

#### Reporting

<!-- Revamped view reports:
https://github.com/validmind/documentation/pull/409 -->

On top of support for custom analytics,[^10] we've updated our feature documentation for reporting to include overviews of default report pages provided out-of-the-box by {{< var vm.product >}}.

:::: {.flex .flex-wrap .justify-around}

::: {.w-70-ns}
Information on available analytics and setting up reporting has also moved into its own section under **Guides** in **[reporting]{.smallcaps}**.

:::

::: {.w-30-ns .tc}
[Working with analytics](/guide/reporting/working-with-analytics.qmd){.button}

:::

::::


#### {{< fa cube >}} Developers

<!-- ##### Documenting models -->

<!-- Revamp of "Developer > Generate model documentation":
https://github.com/validmind/documentation/pull/277 -->

<!-- :::: {.flex .flex-wrap .justify-around}

::: {.w-70-ns}
We've refined our developer guide on how to use the {{< var validmind.developer >}} and {{< var validmind.platform >}} document models complete with supporting test results.

:::

::: {.w-30-ns .tc}
[Documenting models](/developer/model-documentation/documenting-models.qmd){.button}

:::

:::: -->

##### Upgrade {{< var vm.product >}}

<!-- Upgrading VM instructions:
https://github.com/validmind/documentation/pull/490 -->

:::: {.flex .flex-wrap .justify-around}

::: {.w-70-ns}
In our Jupyter Notebook samples, we've now included information within the notebooks themselves on how to upgrade to the latest version of the {{< var validmind.developer >}}.

:::

::: {.w-30-ns .tc}
[Upgrade {{< var vm.product >}}](/developer/model-documentation/install-and-initialize-validmind-library.qmd#upgrade){.button}

:::

::::

#### Feature renaming

<!-- Resource statuses > model lifecycle statuses:**
https://github.com/validmind/documentation/pull/278 -->

resource statuses > model lifecycle statuses
: We previously referred to model lifecycle statuses as "resource statuses."

:::: {.flex .flex-wrap .justify-around}

::: {.w-60-ns}
Model lifecycle statuses have been renamed in the {{< var validmind.platform >}} and documentation updated to reflect this shift. 

:::

::: {.w-40-ns .tr}
[Customize model lifecycle statuses](/guide/model-workflows/customize-model-lifecycle-statuses.qmd){.button}

:::

::::

<!-- Custom fields > model inventory fields:**
https://github.com/validmind/documentation/pull/279 -->

custom fields > model inventory fields
: We previously referred to model inventory fields as "custom fields." 

:::: {.flex .flex-wrap .justify-around}

::: {.w-60-ns}
Custom fields have been renamed in the {{< var validmind.platform >}} and documentation updated to reflect this change. 

:::

::: {.w-40-ns .tr}
[Manage model inventory fields](/guide/model-inventory/manage-model-inventory-fields.qmd){.button}

:::

::::


### {{< var validmind.training >}} updates
<span id="training-updates"></span>
<!---
PR #488: Rework training section & update validator training
URL: https://github.com/validmind/documentation/pull/488
Labels: documentation
--->

#### Updated validator training

:::: {.flex .flex-wrap .justify-around}

::: {.w-70-ns}
- We expanded our validator training and along with that, our validator user guides. 
- Now they both include more guidance for tracking and resolving issues identified in model findings. 

:::

::: {.w-25-ns}
[Track issue resolution](/guide/model-validation/add-manage-model-findings.qmd#track-issue-resolution){.button}

:::

::::

::: {.column-margin}
::: {.preview source="/training/validator-fundamentals/validator-fundamentals.qmd"}
:::
:::


### Site enhancements

#### Mobile responsive redesign

<!-- Mobile responsive grid:
https://github.com/validmind/documentation/pull/225
https://github.com/validmind/documentation/pull/252 -->

- Previously, we made use of an outdated format of rendering columns that resulted in some of our documentation pages displaying poorly on mobile-width screens.
- We've now reimplemented these pages — including our index landing page — to be mobile responsive:

:::: {.flex .flex-wrap .justify-around}

::: {.w-40-ns .tc}
![Old documentation site in mobile view](old-site-mobile.gif){fig-alt="An animated gif showing the old documentation site in mobile view" .screenshot width=70% group="mobile"}

:::

::: {.w-40-ns .tc}
![New documentation site in mobile view](new-site-mobile.gif){fig-alt="An animated gif showing the new documentation site in mobile view" .screenshot width=70% group="mobile"}

:::

::::

#### Style and accuracy edits

<!-- Style & accuracy audits:
About: https://github.com/validmind/documentation/pull/478
Get Started: https://github.com/validmind/documentation/pull/469
Guides: https://github.com/validmind/documentation/pull/377 -->

##### Improved inline link styling

<!-- Footnotes:
https://github.com/validmind/documentation/pull/222
https://github.com/validmind/documentation/pull/244 -->

- Previously, we employed heavy use of inline links in instructional text that took the reader prematurely out of the context. 
- Now, we use of footnotes to indicate supplemental information, providing a cleaner and easier to follow experience:

:::: {.flex .flex-wrap .justify-around}

::: {.w-40-ns .tc}
![Old instructional inline links](/about/contributing/style-guide/inline-links_incorrect.png){fig-alt="A screenshot of the old instructional inline links" .screenshot group="prereq"}

:::

::: {.w-40-ns .tc}
![New instructional supplementary footnote links](/about/contributing/style-guide/margin-footnotes_correct.png){fig-alt="A screenshot of the new instructional supplementary footnote links" .screenshot group="prereq"}

:::

::::

##### Enlargable lightbox-style images

<!-- Lightbox images:
https://github.com/validmind/documentation/pull/517 -->

- Previously, we embedded detailed images in our user guides without providing the ability to enlarge them. 
- Now, images that appear small within the user guides can be clicked on to expand them for ease of readability:

![Click to expand a screenshot of {{< var vm.product >}}'s main dashboard](/guide/configuration/main-dashboard.png){fig-alt="Screenshot of the main ValidMind dashboard" .screenshot width=90%}

#### Authoring enhancements

:::: {.flex .flex-wrap .justify-around}

::: {.w-70-ns}
Did you know that along with the {{< var validmind.developer >}}, the code for our documentation site is also open-source?

:::

::: {.w-30-ns .tc}
[{{< fa brands github >}} documentation](https://github.com/validmind/documentation){.button}

:::

::::

Below are some improvements we've made to our authoring tools to streamline the process for contributors: 

##### Variables and single-sourcing

<!-- Variables:
https://github.com/validmind/documentation/pull/245
https://github.com/validmind/documentation/pull/263 -->

:::: {.flex .flex-wrap .justify-around}

::: {.w-70-ns}

- Renaming our product offerings was a breeze thanks to our established variable infrastructure:

:::

::: {.w-30-ns .tc}

[Product names](/about/contributing/style-guide/conventions.qmd#product-names){.button}


:::

::::

![{{< var vm.product >}}'s rendered product variables](rendered-product-variables.png){fig-alt="Screenshot of ValidMind's rendered product variables" .screenshot width=90%}

- When possible, we prefer to single-source our content to reduce content silos and to make updating content efficient. For example, the instructions on {{< fa arrow-up-from-bracket >}} How to upgrade at the bottom of every release is simply a single-sourced file![^11]


##### Style guide for training materials

<!-- Training style guide:
https://github.com/validmind/documentation/pull/363 -->

:::: {.flex .flex-wrap .justify-around}

::: {.w-70-ns}

To support the release of {{< var validmind.training >}}, we've included a section in our style guide to cover guidelines unique to our training materials.

:::

::: {.w-30-ns .tc}

[Training materials](/about/contributing/style-guide/conventions.qmd#training-materials){.button}


:::

::::


##### New `.button` and `.video` CSS classes

<!-- CSS:
Buttons & video class: https://github.com/validmind/documentation/pull/486
Screnshots: https://github.com/validmind/documentation/pull/420 -->

- Previously, we used outdated HTML to render button links and embed videos.
- We've now implemented simplified but powerful CSS classes to replace many unwieldy lines of code:

:::: {.flex .flex-wrap .justify-around}

::: {.w-20-ns .tc}
[Buttons](/about/contributing/style-guide/conventions.qmd#buttons){.button}

:::

::: {.w-20-ns .tc}
[Videos](/about/contributing/style-guide/conventions.qmd#videos){.button}

:::

::::

#### 404 page

<!-- 404 page:
https://github.com/validmind/documentation/pull/231 -->

:::: {.flex .flex-wrap .justify-around}

::: {.w-50-ns}
Previously, visiting a non-existing page within the documentation would present you with a poor user experience in the form of a default XML error. 

We've now introduced a custom 404 page where you can perform a search instead. 

:::

::: {.w-50-ns}
::: {.preview source="/404.qmd" offset="70" height="300"}
:::
:::

::::

<span id="how-to-upgrade"></span>

{{< include /releases/_how-to-upgrade.qmd >}}


<!-- FOOTNOTES -->

[^1]: [{{< var validmind.developer >}} enhancements](#library-enhancements)

[^2]: [LangChain](https://www.langchain.com/)

[^3]: [{{< var validmind.platform >}} enhancements](#platform-enhancements)

[^4]: [User guide updates](#guide-updates)

[^5]: [{{< var vm.product >}} website](https://validmind.ai/){target="_blank"}

[^6]: [New {{< var vm.product >}} branding](#new-branding)

[^7]: [{{< var validmind.training >}} updates](#training-updates)

[^8]: [{{< var validmind.platform >}} UI > {{< var validmind.platform >}}](#platform-rename)

[^9]: [Register with {{< var vm.product >}}](/guide/configuration/register-with-validmind.qmd)

[^10]: [Support for custom analytics](#custom-analytics)

[^11]: [{{< fa arrow-up-from-bracket >}} How to upgrade](#how-to-upgrade)
