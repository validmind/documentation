---
title: "December 19, 2024"
---

SUMMARY HERE

::: {.highlights}

## {{< fa bullhorn >}} Release highlights

### {{< var validmind.developer >}} (v2.6.7)

<!---
PR #243: [SC 7521] Move capital markets notebooks from code sharing to code samples
URL: https://github.com/validmind/validmind-library/pull/243
Labels: documentation, highlight
--->
#### Jupyter Notebooks for option pricing

We've introduced two new quickstart Jupyter Notebooks dealing with option pricing in the **Capital Markets** section of our code samples. 

:::: {.flex .flex-wrap .justify-around}

::: {.w-60-ns}
- Use {{< var vm.product >}} to automate the documentation and validation of a financial model that prices knockout options:

- Implement, calibrate, and validate a Heston option pricing model using QuantLib, Python, and {{< var vm.product >}}:

:::

::: {.w-40-ns .tc}
[Knockout option pricing model](/notebooks/code_samples/capital_markets/quickstart_option_pricing_models.ipynb){.button .button-green}

[Heston option pricing model](/notebooks/code_samples/capital_markets/quickstart_option_pricing_models_quantlib.ipynb){.button .button-green}

:::

::::

### {{< var validmind.platform >}} (v1.27.17)


<!---
PR #1079: Added the ability to Managed Saved Views
URL: https://github.com/validmind/frontend/pull/1079
Labels: enhancement
--->
#### Custom model inventory and findings views
<span id="saved-views"></span>
Along with customizing what you see, you can now save preconfigured views on the **{{< fa cubes >}} Inventory** and all **{{< fa triangle-exclamation >}} Findings** pages within {{< var validmind.platform >}}, allowing you to retrieve these settings easily for future use.

:::: {.flex .flex-wrap .justify-around}

::: {.w-40-ns .tc}
[Customize model inventory layout](i/guide/model-inventory/customize-model-inventory-layout.qmd){.button .button-green}

:::

::: {.w-40-ns .tc}
[Customize model findings layout](/guide/model-validation/view-filter-model-findings.qmd#customize-model-findings-layout){.button .button-green}

:::

::::

<!-- MANUAL ADD
https://github.com/validmind/documentation/pull/583 -->

#### Custom dashboards and widgets

:::: {.flex .flex-wrap .justify-around}

::: {.w-60-ns}
We've added the capability to build custom **{{< fa home >}} Dashboard**s to allow quick access to information relevant to you via widgets.

:::

::: {.w-40-ns .tc}
[Customize your dashboard](/guide/configuration/customize-your-dashboard.qmd){.button .button-green}

:::

::::

Widget types include saved inventory and model findings views[^1], analytics reports,[^2] and model activity.[^3] 

![Custom `High Risk` dashboard showing widgets for Tier 1 models and High Severity findings](custom-dashboard.png){width=80% fig-alt="A screenshot of a custom `High Risk` dashboard showing widgets for Tier 1 models and High Severity findings" .screenshot}

### Documentation

<!---
PR #544: Add login button to docs site
URL: https://github.com/validmind/documentation/pull/544
Labels: documentation
--->

<!-- https://github.com/validmind/documentation/pull/580 -->

#### Log In button

:::: {.flex .flex-wrap .justify-around}

::: {.w-70-ns}
We've added the option to log in to the {{< var validmind.platform >}} directly from our documentation site. Click the **Log In** drop-down menu in the top right-hand corner to try it out! 

:::

::: {.w-30-ns .tc}
[Log in to {{< var vm.product >}}](/guide/configuration/log-in-to-validmind.qmd){.button .button-green}

:::

::::

![New `Log In` button](log-in.png){width=80% fig-alt="A screenshot of the new `Log In` button" .screenshot}

<!-- MANUAL ADD
https://github.com/validmind/documentation/pull/558 -->

#### New FAQ

::: {.column-margin}
![New FAQ](faq.png){fig-alt="A screenshot of the new FAQ" .screenshot}
:::

:::: {.flex .flex-wrap .justify-around}

::: {.w-80-ns}
We've completely renovated our frequently asked questions (FAQ) with completely up-to-date information and new topics such as:

:::

::: {.w-20-ns .tc}
[FAQ](/faq/faq.qmd){.button .button-green}

:::

::::

- Access & permissions
- Validation & findings
- Collaboration
- Monitoring & reporting

<!-- MANUAL ADD
https://github.com/validmind/documentation/pull/582 -->

#### {{< var vm.product >}} Help Center 

:::: {.flex .flex-wrap .justify-around}

::: {.w-80-ns}
We've soft-launched our Help Center, enabling you to easily contact us through your method of choice.

:::

::: {.w-20-ns .tc}
[Support](/support/support.qmd){.button .button-green}

:::

::::

Whether you submit a ticket through our questionnaire, chat with us through the documentation site, send us an email, or give us a call, your requests will all be captured in our Help Center. 

![{{< var vm.product >}} Help Center](help-center.png){width=80% fig-alt="A screenshot of the ValidMind Help Center" .screenshot}

:::

## Enhancements

### {{< var validmind.platform >}} (v1.27.17)

<!---
PR #1100: Mnt analytics improvements
URL: https://github.com/validmind/frontend/pull/1100
Labels: enhancement
--->
### Additional custom analytics settings

:::: {.flex .flex-wrap .justify-around}

::: {.w-70-ns}
We've extended the available options for custom analytics further â€” you can now sort bar chart visualizations and retrieve a count percentage metric for all types of visualizations.

:::

::: {.w-30-ns .tc}
[Manage custom reports](/guide/reporting/manage-custom-reports.qmd){.button .button-green}

:::

::::

<!---
PR #1076: [7333] - chore: add UI changes for revision history
URL: https://github.com/validmind/frontend/pull/1076
Labels: enhancement
--->
### Improved revision history within content blocks

:::: {.flex .flex-wrap .justify-around}

::: {.w-70-ns}
We've improved the way revision history displays within content blocks, allowing you to more easily review changes to model documentation, validation reports, and ongoing monitoring reports. 

:::

::: {.w-30-ns .tc}
[Work with content blocks](/guide/model-documentation/work-with-content-blocks.qmd){.button .button-green}

:::

::::

![Example revision history for a content block](revision-history.png){width=80% fig-alt="A screenshot of example revision history for a content block" .screenshot}

<!---
PR #1092: [SC-7471] adding custom field permission check
URL: https://github.com/validmind/frontend/pull/1092
Labels: enhancement
--->
### Granular role permissions for inventory fields

::: {.column-margin}
![Setup for an inventory field only editable by developers](developer-only-field.png){fig-alt="A screenshot of the setup for an inventory field only editable by developers" .screenshot}
:::

:::: {.flex .flex-wrap .justify-around}

::: {.w-70-ns}
You can now gate edit access to specific model inventory fields to certain roles. 
:::

::: {.w-30-ns .tc}
[Manage model inventory fields](/guide/model-inventory/manage-model-inventory-fields.qmd){.button .button-green}

:::

::::

- Leave this field blank to allow all users assigned to the model access.
- By default, the [{{< fa hand >}} Customer Admin]{.bubble} role has the ability to edit all fields on all models.[^4]

## Bug fixes

<!---
PR #1106: Deleting a finding should remove it from a validation report
URL: https://github.com/validmind/frontend/pull/1106
Labels: bug
--->
### Deleting a finding when you remove a validation report

Fixed an issue where users could delete findings even if they were assigned to a validation report.
 
Generated PR summary: 
 
This update introduces several key enhancements to the web application. The API module now includes a new function, `GetFindingLinkedAssessmentFindings`, which retrieves linked assessment findings for any given finding. This addition allows you to easily fetch and display related assessments when viewing or deleting a finding. The `AssessmentFinding` and `Assessment` types in the `guideline.ts` model have been updated to include optional fields for `assessment` and `inventory_model`, thereby associating more detailed information with each finding and assessment. 

On the user interface side, the `ViewFinding` component now provides a warning alert when you attempt to delete a finding linked to one or more assessments. This alert outlines which assessments will be affected, offering clarity on the consequences of your actions. Additionally, the `ConfirmationAlert` component's `dialogBody` prop now accepts `ReactNode`, enabling more complex and informative dialog content.

Overall, these improvements enhance your experience by providing better context and warnings during potentially impactful actions like deleting findings, ensuring you are fully informed about how linked assessments could be impacted.

## Documentation

<!-- MANUAL ADD
https://github.com/validmind/documentation/pull/580 -->

### Simplified homepage and training portal

DESC HERE

### Developer Fundamentals

<!---
PR #543: Add developer fundamentals videos & training fixes
URL: https://github.com/validmind/documentation/pull/543
Labels: documentation
--->
#### Add developer fundamentals videos & training fixes

we created a series of 10 short videos 

We created a series of 10 short videos to help you learn about the model documentation process as a developer. These videos introduce you to generating model documentation that includes tests. You will also learn about adding your own tests, editing the content online, and then submitting your documentation for approval so that a validator can review your submitted documentation.

{{ < video https://www.youtube.com/embed/videoseries?si=aP7yLOGO60h4vi8C&amp;list=PL7I7ZrCoVCCP876aLRCjitZqYif96Whlz title=Developer Fundamentals > }}
 
Generated PR summary: 
 
This update to the ValidMind project includes several key enhancements and updates. The template for training modules has been revised, changing "Documenting Models 101" to "Developer Fundamentals" and "Validating Models 101" to "Train a model." In addition, three new SVG files in specific colors have been added to the assets directory. The guides section now features a new video series called 'Developer Fundamentals' with ten videos, and a card title is included for the 'Validating Models 101' series. Updates have been made to the tutorials notebook, replacing mentions of the "ValidMind Developer Framework" with "ValidMind Library," affecting sections related to initialization and documentation. Training module adjustments aim to refine section references and boost interactivity in the documentation process. Finally, a new JSON file tracks the status of test runs, confirming that all tests are passing successfully.

<!---
PR #552: Updated workflows/actions to dynamically generate an `.env` file
URL: https://github.com/validmind/documentation/pull/552
Labels: documentation
--->

<!-- https://github.com/validmind/documentation/pull/567 -->

#### Developer Fundamentals example executed Jupyter Notebook

ValidMind Academy

- The ValidMind Academy developer fundamentals course has been updated with an improved version of the ValidMind introduction for model developers Jupyter Notebook.

- You can now execute this embedded notebook live within the training. This allows you to interact with output cells previously omitted, such as when previewing the documentation template.

- This training notebook serves as a reference guide. You will understand what to expect when you first run the cells.

Jupyter Notebooks

- We've included details on how to initialize ValidMind with credentials stored in an `.env` file in our Jupyter Notebook samples.

- Our documentation guides have also been updated to match this new experience.
 
Generated PR summary: 
 
This update introduces enhancements to the environment configuration and execution of Jupyter Notebooks within the project. You will find updates to the `.env.example` file, which now includes new environment variables: `VM_API_HOST`, `VM_API_KEY`, `VM_API_SECRET`, and `VM_API_MODEL`. GitHub Actions workflows (`demo-notebook`, `prod-notebook`, `staging-notebook`) have been modified to require an `env_file` input, ensuring that the `.env` file is present before running notebooks. Additionally, workflow files (`deploy-docs-prod.yaml`, `deploy-docs-staging.yaml`, `validate-docs-site.yaml`) are updated to create a `.env` file dynamically using secrets prior to notebook execution.

A new `execute` target in the `Makefile` facilitates running Jupyter Notebooks with specified profiles and file paths, and notebooks are now duplicated for execution rather than checked out from the main branch.

Documentation has been enhanced in `store-credentials-in-env-file.qmd` with detailed instructions on storing model credentials in `.env` files for use in notebooks. Examples and explanations for enabling monitoring with these files are added in `enable-monitoring.qmd`. These changes aim to improve the flexibility and security of environment management while streamlining notebook execution and monitoring processes.

{{< include /releases/_how-to-upgrade.qmd >}}


<!-- FOOTNOTES -->

[^1]: [Custom model inventory and findings views](#saved-views)

[^2]: [Working with analytics](/guide/reporting/working-with-analytics.qmd)

[^3]: [View model activity](/guide/model-inventory/view-model-activity.qmd)

[^4]: [Manage permissions](/guide/configuration/manage-permissions.qmd)