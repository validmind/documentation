---
title: "July 22, 2024"
filters:
  - tachyons
---

## Release highlights

 On top of our increased support for tests and arrays in the {{< var validmind.developer >}} and our first ValidMind Academy training modules, we've introduced customizable model workflows, new role functionality, and new report types.

<!---
PR #123: Support for comparison tests
URL: https://github.com/validmind/developer-framework/pull/123
Labels: enhancement, highlight
--->
<!---
PR #125: Comparison tests notebook
URL: https://github.com/validmind/developer-framework/pull/125
Labels: enhancement
--->
### Support for comparison tests

An important addition to the {{< var validmind.developer >}}, you can now run comparison tests with the developer framework. This feature is useful when you want to run the same test against multiple combinations of models or datasets. A comparison test creates a single documentation block that compares the individual results.

Here's a demonstration of how comparison tests work: 

![Comparison test](comparison_test.gif){fig-alt="An animated GIF showing a comparison test being run in a notebook."}

<!-- <video src="comparison_test.mp4" controls alt="A video that demonstrates how you can create new user groups under Settings > Groups." style="width: 80%; border: 1px solid #000; box-shadow: 5px 5px 5px #ccc, -5px 5px 5px #ccc; border-radius: 5px;">
  Your browser does not support the video tag.
</video> -->

The updated `run_test()` function allows you to pass an `input_grid` which runs a test for all combinations of inputs.

#### Input grid example

```python
input_grid = {
    "model": ["XGBoost"],
    "dataset": ["train_dataset", "test_dataset"],
}
```

A test runs once for each of the following input groups:

```python
{
"model": "XGBoost",
"dataset": "train_dataset"
}

{
"model": "XGBoost",
"dataset": "test_dataset"
}
```

#### Example function calls

```python
from validmind.tests import run_test

input_grid = {
    "model": ["XGBoost"],
    "dataset": ["train_dataset", "test_dataset"],
}

result = run_test(
    "validmind.model_validation.sklearn.ClassifierPerformance",
    input_grid,
)

result = run_test(
    "validmind.model_validation.sklearn.ConfusionMatrix",
    input_grid,
)

result = run_test(
    "validmind.model_validation.sklearn.ROCCurve",
    input_grid,
)
```

<!---
PR #209: "Model Workflows" section in Guides
URL: https://github.com/validmind/documentation/pull/209
Labels: documentation
--->
### Customizable model workflows

You can now manage lifecycle processes within your ValidMind Platform UI setup using customizable model workflows. You use these workflows to match your organizational needs for overseeing model development, validation, or implementation activities.


:::: {.flex .flex-wrap .justify-around}

::: {.w-60-ns}
Default workflows are provided for you as suggestions. You can customize the following default workflows:

- **Model documentation** 
- **Inventory model**
:::

::: {.w-40-ns}

<form method="get" action="../../guide/model-workflows/set-up-model-workflows.html" target="_blank">
   <button type="submit" style="color: white; background-color: #de257e; border-radius: 8px; border: none; font-size: 16px; padding: 6.25px 12.5px; margin-left: 16px; margin-bottom: 20px;">Set up model workflows</button>
</form>
:::

::::

Here's a demonstration of how the user interface lets you configure a model workflow: 

![](../../guide/model-workflows/configure-steps.gif){fig-alt="A gif workflow step configuration"}

## Enhancements

<!---
PR #127: [SC-5175] Enhance add extra column to support 2d arrays
URL: https://github.com/validmind/developer-framework/pull/127
Labels: enhancement
--->
### Support for 2D arrays in `add_extra_column`

With enhancements to the `VMDataset` class, the `add_extra_column` method now supports adding 2D arrays as single columns in the dataset's DataFrame. These changes ensure that 2D arrays are stored in a single column without altering the DataFrame structure.

Usage example:

```python 

import numpy as np
import pandas as pd

# sample DataFrame
df = pd.DataFrame({
    'A': [1, 2, 3],
    'B': [4, 5, 6]
})

# sample 2D array
array_2d = np.array([
    [1, 2],
    [3, 4],
    [5, 6]
])

vm_dataset = vm.init_dataset(
    dataset=df,
    input_id=dummy_ds
)

vm_dataset.add_extra_columns(
    "dummy_column",
    array_2d
)
```

<!---
PR #834: John6797/sc 5172/test result interpretations and risk assessment
URL: https://github.com/validmind/frontend/pull/834
Labels: enhancement
--->
<!-- NR Commented out as AI features are mentioned and there's not enough info here. -->
<!-- ### Test result interpretations and risk assessment

We expanded support for figures and plots when using ValidMind AI interpretations and risk assessments. -->

<!---
PR #824: [SC-5146] add new role modal
URL: https://github.com/validmind/frontend/pull/824
Labels: enhancement
--->
### Add new role functionality

Users with the `Create_Role` permission can now add a new role under Settings {{< fa arrow-right >}} Roles: [Work with roles in the {{< var validmind.platform >}}](https://app.prod.validmind.ai/settings/roles)

<!---
PR #820: Added new report types
URL: https://github.com/validmind/frontend/pull/820
Labels: enhancement
--->
### New report types

We added a number of new report types:

- Number of models by business unit and tier
- Number of models by status
- Avgerage number of days models spend in a status
- Models by number of findings

[Try our reports in the {{< var validmind.platform >}}](https://app.prod.validmind.ai/reports)

## Bug fixes

<!---
PR #229: Updated test descriptions 
URL: https://github.com/validmind/documentation/pull/229
Labels: bug
--->
### Updated test descriptions

We fixed a number of missing test descriptions that were caused by a scripting issue: [Read our test descriptions](../../developer/model-testing/test-descriptions.qmd)

## Documentation

<!---
PR #200: Create training collateral
URL: https://github.com/validmind/documentation/pull/200
Labels: documentation
--->
### New training collateral

:::: {.flex .flex-wrap .justify-around}

::: {.w-60-ns}
We're introducing the first training modules that are part of our ValidMind Academy training program for:

- Model developers
- Model validators
- Administrators
:::

::: {.w-40-ns}
<form method="get" action="../../training/training-overview.html" target="_blank">
   <button type="submit" style="color: white; background-color: #de257e; border-radius: 8px; border: none; font-size: 16px; padding: 6.25px 12.5px; margin-left: 16px; margin-bottom: 20px;">Try out ValidMind Academy</button>
</form>
:::

::::

Our training modules are **interactive**. They combine instructional content with our live product and are easy to use. 

