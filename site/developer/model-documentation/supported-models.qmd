---
title: "Supported models"
date: last-modified
aliases:
  - ../../guide/supported-models.html
listing:
  - id: next-models
    type: grid
    max-description-length: 250
    sort: false
    fields: [title, description]
    contents:
    - ../model-testing/testing-overview.qmd
    - ../model-testing/test-descriptions.qmd
    - ../samples-jupyter-notebooks.qmd
---

The {{< var validmind.developer >}} provides out-of-the-box support for testing and documentation for an array of model types and modeling packages.

## What is a supported model?

A _supported model_ refers to a model for which predefined testing or documentation functions exist in the {{< var validmind.developer >}}, provided that the model you are developing is documented using a supported version of our {{< var vm.developer >}}. These model types cover a very large portion of the models used in commercial and retail banking. 

::: {.callout}
## {{< var vm.product >}} does not limit our users to specific model types.
 
- The {{< var validmind.developer >}} is extensible to support future model types or modeling packages to accomodate rapid developments in the AI space, including the advent of large language models (LLMs).
- You always have the flexibility to implement custom tests and integrate external test providers.[^1]
:::

<!--- Please note the inherent dependency on data types, such as tabular, time series, and text data types. This distinction isn't always immediately evident. For example: while binary classification is possible on text datasets, only the `tabular_dataset` suite is explicitly mentioned in our list of supported models.--->

## Supported model types[^2]

### Traditional statistical models

:::: {.flex .flex-wrap .justify-around}

::: {.w-30-ns}
::: {.feature}
Linear regression
: Models relationship between a scalar response and one or more explanatory variables.
:::

:::

::: {.w-30-ns}
::: {.feature}
Logistic regression
: Models relationship between a scalar response and one or more explanatory variables.
:::

:::

::: {.w-30-ns}
::: {.feature}
Time series 
: Analyzes data points collected or sequenced over time.
:::

:::

::::

### Machine learning models

:::: {.flex .flex-wrap .justify-around}

::: {.w-50-ns .pr2}

::: {.feature}
Hugging Face-compatible models
: - Natural language processing (NLP) text classification — Categorizes text into predefined classes.
- Tabular classification — Assigns categories to tabular dataset entries.
- Tabular regression — Predicts continuous outcomes from tabular data.
:::

::: {.feature}
Neural networks
: - Long short-term memory (LSTM) — Processes sequences of data, remembering inputs over long periods.
- Recurrent neural network (RNN) — Processes sequences by maintaining a state that reflects the history of processed elements.
- Convolutional neural network (CNN) — Primarily used for processing grid-like data such as images.

:::

:::

::: {.w-50-ns .pl2 .pr2}

::: {.feature}
Tree-based models <br> (XGBoost / CatBoost / random forest)
: - Classification — Predicts categorical outcomes using decision trees.
- Regression — Predicts continuous outcomes using decision trees.
:::

::: {.feature}
K-nearest neighbors (KNN)
: - Classification — Assigns class by majority vote of the k-nearest neighbors.
- Regression — Predicts value based on the average of the k-nearest neighbors.

:::

::: {.feature}
Clustering
: - K-means — Partitions _n_ observations into _k_ clusters in which each observation belongs to the cluster with the nearest mean.
:::

:::

::::

### Generative AI models

::: {.feature}
Large language models (LLMs)
: - Classification — Categorizes input into predefined classes.
- Text summarization — Generates concise summaries from longer texts.
:::

## Supported modeling libraries and other tools

:::: {.flex .flex-wrap .justify-around}

::: {.w-50-ns}

- **[scikit-learn](https://scikit-learn.org/stable/)** — A Python library for machine learning, offering a range of supervised and unsupervised learning algorithms.

- **[statsmodels](https://www.statsmodels.org/stable/index.html)** — A Python module that provides classes and functions for the estimation of many different statistical models, as well as for conducting statistical tests and exploring data.

- **[PyTorch](https://pytorch.org/)** — An open-source machine learning library based on the Torch library, used for applications such as computer vision and natural language processing.

- **[Hugging Face Transformers](https://huggingface.co/docs/transformers/en/index)** — Provides thousands of pre-trained models to perform tasks on texts such as classification, information extraction, question answering, summarization, translation, and text generation.

- **[XGBoost](https://xgboost.readthedocs.io/en/stable/)** — An optimized distributed gradient boosting library designed to be highly efficient, flexible, and portable, implementing machine learning algorithms under the Gradient Boosting framework.

:::

::: {.w-50-ns}

- **[CatBoost](https://catboost.ai/)** — An open-source gradient boosting on decision trees library with categorical feature support out of the box, for ranking, classification, regression, and other ML tasks.

- **[LightGBM](https://lightgbm.readthedocs.io/en/stable/)** — A fast, distributed, high-performance gradient boosting (GBDT, GBRT, GBM, or MART) framework based on decision tree algorithms, used for ranking, classification, and many other machine learning tasks.

- **R models, via [rpy2 - R in Python](https://rpy2.github.io/)** — Facilitates the integration of R's statistical computing and graphics capabilities with Python, allowing for R models to be called from Python.

- **Large language models (LLMs), via [OpenAI-compatible APIs](https://platform.openai.com/docs/introduction)** — Access to advanced AI models trained by OpenAI for a variety of natural language tasks, including text generation, translation, and analysis, through a compatible API interface. This support includes both the OpenAI API and the Azure OpenAI Service via API.
:::

::::

## What's next

:::{#next-models}
:::


<!-- FOOTNOTES -->

[^1]: 

  - [Implement custom tests](/notebooks/code_samples/custom_tests/implement_custom_tests.ipynb)
  - [Integrate external test providers](/notebooks/code_samples/custom_tests/integrate_external_test_providers.ipynb)

[^2]: {{< var vm.product >}} offers support for both first-party models and [third-party vendor models](/about/glossary/glossary.qmd#vendor-model).
