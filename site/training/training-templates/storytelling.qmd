---
title: "Feature <br>Storytelling"
subtitle: "How do we empower our team to wrap docs into done?"
lightbox: true
# REMOVE THE SEARCH FALSE TOGGLE WHEN THE COURSE IS READY TO BE PUBLISHED
search: false
format:
  revealjs:
    controls: true
    controls-tutorial: true
    help: true
    controls-back-arrows: visible
    transition: slide
    theme: [default, ../assets/slides.scss]
    slide-number: true
    chalkboard: false
    preview-links: auto
    view-distance: 2
    logo: /validmind.png
    footer: "{{< var validmind.product >}} | [Home {{< fa person-walking-dashed-line-arrow-right >}}](/index.qmd)"
  html:
  # Change this to the file name prepended by a _ to get around the global HTML output settings required by _metadata.yml
    output-file: _storytelling.html
    search: false
title-slide-attributes:
  data-background-color: "#083E44"
  data-background-image: "../assets/home-hero.svg"
skip_preview: true
---

# Objective

_"As a member of the ValidMind product, engineering, or design teams, who is responsible for shaping, creating, or implementing features, I want to do my part in ensuring that documentation and other collateral can be completed as part of feature deployment."_

## {.scrollable .center}

:::: {.columns}
::: {.column width="30%" .pr4 .f1}
What is *storytelling*?

::: {.f3}
- Storytelling is the idea that the narrative around the feature involves more than user guides.
- Storytelling has at least two (2) parts: the scoping, and the implementation.

:::

:::

::: {.column width="70%" .bl .pl4 .f2}
::: {.f5 .nt2}
:::

::: {.f3}
::: {.panel-tabset}

### Scoping

Scoping is **mandatory** — even if the outcome of scoping is nothing needs to be implemented, that's important info we wouldn't have had without scoping:

- Scoping involves discussion around the feature, ideally during initial shaping, no later than post-implementation review.
- During scoping, we define what collateral is required: user guides, terminology or UI updates, feature highlight posts, videos, etc.
- For scoping to be considered complete when collateral is identified and the acceptance criteria outlined, context about the feature must be provided: the feature owners are responsible for showcasing the functionality, explaining the use case or supplying examples, etc.

### Implementation

Implementation depends on what is identified during scoping:

- Individual follow-up tasks are identified during scoping, and are considered **blocked** until acceptance criteria and feature context are provided.
- The feature should not be considered "complete" until implementation of storytelling is also done.

:::

:::

:::

::::

## {.scrollable .center}

:::: {.columns}
::: {.column width="25%" .pr4 .f1}
POP QUIZ

:::

::: {.column width="75%" .bl .pl4 .f3}
- Who knows about the `needs-docs` automation? (What does it do?)
- Who has used the automation before?
- ... and followed-up by providing context about the feature?
- Who has provided context about the feature proactively?
- Who has triggered the automation *before* the feature was pushed into production?
- Who believes that storytelling is part of the definition of "done?"
- ... and that good storytelling helps us empower our external and internal users?

:::
::::


<!-- ## In this course

:::: {.columns .f4}
::: {.column width="50%" .mt4 .pr4}
### [introduction]{.smallcaps}
- [Before you begin](#before-you-begin)

:::

::::

:::: {.columns .f4}

::: {.column width="50%" .mt4 .pr4}
### [section 1]{.smallcaps}

1. [iFrame embed right](#iframe-embed-right)
2. [iFrame embed bottom](#iframe-embed-bottom)
3. [iFrame embed footer](#iframe-embed-footer)
4. [Scrollable single user guide](#scrollable-single-user-guide)
5. [Scrollable tabset user guides](#scrollable-tabset-user-guide)

:::

::: {.column width="50%" .mt4}
### [section 2]{.smallcaps}

Example embedded `iframe` for interactive copy/paste workaround:

- [Get your code snippet](#get-your-code-snippet)

Topic summary & next steps:

- [Next steps](#next-steps)
:::

::::

First, let's make sure you can log in to {{< var vm.product >}}.

{{< include /training/assets/_revealjs-navigation.qmd >}} -->

<!-- ## Before you begin

::: {.panel-tabset}

### Registration -->

<!-- CHANGE THIS TO THE ROLE ICON AND REGISTRATION PAGE -->

<!-- To continue, you need to have been [onboarded](course-registration.qmd#register){target="_blank"} onto {{< var validmind.training >}} with the [**{{< fa check >}} Role Name**]{.bubble} role.

<br>

:::: {.tc .mt5 .f2 .embed}
Already logged in and refreshed this module? Click [{{< fa chevron-right >}}]() to continue.

:::

### Log in

1. Log in to check your access:

:::: {.flex .flex-wrap .justify-around}

::: {.w-50-ns .tc}

[Log in to JupyterHub](https://jupyterhub.validmind.ai/){.button target="_blank"}

:::

::: {.w-50-ns .tc}
[Log in to {{< var vm.product >}}](https://app.prod.validmind.ai){.button target="_blank"}
:::

::::


::: {.tc .f3}
Be sure to return to this page afterwards.
:::

2. After you successfully log in, refresh the page to connect this training module up to the {{< var validmind.platform >}}: 

::: {.tc}
<button class="button" onClick="window.location.reload();">Refresh Page</button>

:::


:::

# [section 1]{.smallcaps} {background-color="#083E44" background-image="/assets/img/solutions-hero.png"} -->

<!-- # iFrame embed right {background-color="#083E44" background-image="/training/assets/home-hero.svg"} -->

<!-- ## {background-iframe="https://app.prod.validmind.ai/" data-preload="yes"} 

:::: {.fr .f3 .mv5 .nr4 .pa5 .overlay}
This is a right-aligned modal `.overlay` <br>on top of the live {{< var vm.product >}} Platform.  

- It mimics the style of the docs site callouts.
- **Bold text shows up in a different colour.**
- You can use an additional callout style <br>with this class: `.embed`

::: {.f4 .pl3 .pr3 .embed}
**This is the nested embed**, <br>which also has its own bold styling.
:::

As you can see, you need to get creative <br>with some of your `<br>`s to determine <br>the max-width of the overlay box.

:::: -->

<!-- # iFrame embed bottom {background-color="#083E44" background-image="/training/assets/home-hero.svg"}

## {background-iframe="/notebooks/tutorials/intro_for_model_developers_EXECUTED.html" background-interactive="yes" data-preload="yes"} 

:::: {.absolute bottom=15 left=0 right=50 .w-100 .f3 .tc .pl4 .pr4 .overlay}
**This is a bottom-aligned modal `.overlay` on top of a rendered site file.**

::: {.f4}
You can fully interact with the page contents. 
:::
::::

# iFrame embed footer {background-color="#083E44" background-image="/training/assets/home-hero.svg"} -->

<!-- ## {background-iframe="https://app.prod.validmind.ai/settings" background-interactive="true" data-preload="yes"}

::: footer
:::: {.absolute bottom=0 left=50 right=50 .w-95 .f3 .tc .pl4 .overlay}
Sometimes you'll need to move the `overlay` to the footer in order to avoid overlap with UI elements.

::: {.f4}
This will also stretch the overlay to 95%.
:::

::::
::: -->

<!-- # [section 2]{.smallcaps} {background-color="#083E44" background-image="/assets/img/solutions-hero.png"} -->

<!-- ## Get your code snippet

:::: {.columns}

::: {.column width="80%"}

::: {.absolute left="-150" width="100%"}

<div style="zoom: 0.8; overflow: hidden;">
<iframe 
    src="https://app.prod.validmind.ai/model-inventory" 
    width="100%" 
    height="750" 
    data-preload="yes" 
    sandbox="allow-same-origin allow-scripts allow-popups allow-forms"
    allow="clipboard-read; clipboard-write">
</iframe>
</div>
:::

:::

::: {.column width="20%" .pt2}

::: {.absolute right="-150" .w-30 .f4 .pl4 .pt2 .pb3 .bl}
{{< var vm.product >}} generates a unique *code snippet* for each registered model to connect with your developer environment:

1. From the **{{< fa cubes >}} Inventory**, select the name of your model to open up the model details page.
2. On the left sidebar that appears for your model, click **Getting Started**.
3. Locate the code snippet and click **Copy snippet to clipboard**.

When you're done, click [{{< fa chevron-right >}}]() to continue.

::: {.overlay .pa2 .pl3 .f5}
**Can't load the {{< var validmind.platform >}}?**

Make sure you're logged in and have refreshed the page.
:::


:::

:::

:::: -->


# What's the solution? {background-color="#083E44" background-image="/training/assets/home-hero.svg"}

## {.scrollable .center}

:::: {.columns}
::: {.column width="30%" .pr4 .f1}
Aim for participation, not perfection

:::

::: {.column width="70%" .bl .pl4 .f3}
Storytelling is a **shared** responsibility. So together let's commit to:

- [x] Changing our perception of what "documentation" includes — not just user guides
- [x] Asking questions around what storytelling is required, early on — "left-shifting" the process
- [x] Proactively ensuring that enough context is provided for collateral to be created — ownership of information transfer

:::
::::

<!-- ::: {.f2}
<br>
There is more that {{< var vm.product >}} can do to help you {{perform task}}, including {{...}}:
::: -->



## {.scrollable}

:::: {.columns}
::: {.column width="20%" .pr4 .f1}
What happens now?

<br>



:::

::: {.column width="80%" .bl .pl4 .f2}
::: {.f5 .nt2}
:::

::: {.f3}
::: {.panel-tabset}

### Storytelling Story Template

To assist in scoping storytelling, there is now a template in Shortcut for product managers and anyone else involved in the shaping process:

- Scoping is important work that should be tracked — if we decide no documentation is required, we also have built-in paper trail.
- Storytelling scoping stories should belong to the same epic and sprint as the feature it is related to.
- This template asks all the questions required for the implementation of collateral to be considered ready to be worked on.
- This template will replace the old `needs-docs` Zapier automation — because storytelling is a discussion and not a toggle.


::: {.tc}
[Storytelling Story Template](https://app.shortcut.com/validmind/stories/new?template_id=67f56e1e-b0eb-46cc-ad48-c26ea4d26a65){.button target="_blank"}

:::

### `needs-docs` label

The old `needs-docs` Zapier automation will be **turned off** after next Monday's company-wide meeting (April 21st, 2025):

- This means that a "Documentation — {{feature}}" Story will no longer be automatically created when you add this label to a Story.
- Instead, stories for tasks identified during storytelling scoping will be created manually once all the information is available — hopefully encouraging interaction instead of "set it and forget it." These stories will be linked to the storytelling scoping story.
- We'll keep the label for flagging *documentation tech debt*<sup>1</sup> — any features that slip through the new storytelling process that need follow-up after the fact.

::: {.f4 .pl3 .pr3 .embed}
<sup>**1**</sup> **Who can use this label to identify tech debt?**

Everyone! If you see a **completed** feature that doesn't have any associated documentation stories, feel free to add the label to the feature Story — this helps the Community team and Product Managers isolate and review the backlog.
:::

:::

:::

:::

::::