# test_suites { #validmind.test_suites }

`test_suites`

Entrypoint for test suites.

## Functions

| Name | Description |
| --- | --- |
| [describe_suite](#validmind.test_suites.describe_suite) | Describes a Test Suite by ID |
| [get_by_id](#validmind.test_suites.get_by_id) | Returns the test suite by ID |
| [list_suites](#validmind.test_suites.list_suites) | Returns a list of all available test suites |
| [register_test_suite](#validmind.test_suites.register_test_suite) | Registers a custom test suite |

### describe_suite { #validmind.test_suites.describe_suite }

```python
test_suites.describe_suite(test_suite_id, verbose=False)
```

Describes a Test Suite by ID

#### Parameters {.doc-section .doc-section-parameters}

| Name          | Type   | Description                                             | Default    |
|---------------|--------|---------------------------------------------------------|------------|
| test_suite_id | str    | Test Suite ID                                           | _required_ |
| verbose       |        | If True, describe all plans and tests in the Test Suite | `False`    |

#### Returns {.doc-section .doc-section-returns}

| Name   | Type   | Description                                                         |
|--------|--------|---------------------------------------------------------------------|
|        |        | pandas.DataFrame: A formatted table with the Test Suite description |

### get_by_id { #validmind.test_suites.get_by_id }

```python
test_suites.get_by_id(test_suite_id)
```

Returns the test suite by ID

### list_suites { #validmind.test_suites.list_suites }

```python
test_suites.list_suites(pretty=True)
```

Returns a list of all available test suites

### register_test_suite { #validmind.test_suites.register_test_suite }

```python
test_suites.register_test_suite(suite_id, suite)
```

Registers a custom test suite