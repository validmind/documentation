---
title: "[validmind](/validmind/validmind.html).SHAPGlobalImportance"
sidebar: validmind-reference
toc-depth: 4
toc-expand: 4
# module.qmd.jinja2
---

## get_logger<span class='muted'>()</span>

<!-- signatures.jinja2 -->

::: {.signature}

<span class="kw">def</span><span class="name">get_logger</span>(<span class="params"><span class="n">name</span><span class="p">:</span><span class="nb">str</span><span class="o">=</span><span class="s1">'validmind'</span><span class="muted">,</span></span><span class="params"><span class="n">log_level</span><span class="p">:</span><span class="n">Optional</span><span class="p">\[</span><span class="nb">int</span><span class="p">\]</span><span class="o">=</span><span class="kc">None</span></span>)<span class="p"> → </span><span class="return-annotation"><a href="/validmind/validmind/vm_models.html#class-logging">validmind.vm_models.logging</a><span class="o">.</span><a href="/validmind/validmind/vm_models.html#class-logger">validmind.vm_models.Logger</a></span>:

:::

<!-- docstring.jinja2 -->

Get a logger for the given module name.

<!-- function.qmd.jinja2 -->

## generate_shap_plot[()]{.muted}

<!-- signatures.jinja2 -->

::: {.signature}

<span class="kw">def</span><span class="name">generate_shap_plot</span>(<span class="params"><span class="n">type\_</span><span class="p">:</span><span class="nb">str</span><span class="muted">,</span></span><span class="params"><span class="n">shap_values</span><span class="p">:</span><span class="n">np</span><span class="o">.</span><span class="n">ndarray</span><span class="muted">,</span></span><span class="params"><span class="n">x_test</span><span class="p">:</span><span class="n">Union</span><span class="p">\[</span><span class="n">np</span><span class="o">.</span><span class="n">ndarray</span><span class="p">, </span><span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">\]</span></span>)<span class="p"> → </span><span class="return-annotation"><a href="/validmind/validmind/vm_models.html#class-plt">validmind.vm_models.plt</a><span class="o">.</span><a href="/validmind/validmind/vm_models.html#class-figure">validmind.vm_models.Figure</a></span>:

:::

<!-- docstring.jinja2 -->

Plots two types of SHAP global importance (SHAP).

**Arguments**

- `type_`: The type of SHAP plot to generate. Must be "mean" or "summary".
- `shap_values`: The SHAP values to plot.
- `x_test`: The test data used to generate the SHAP values.

**Returns**

- The generated plot.

<!-- function.qmd.jinja2 -->

## select_shap_values[()]{.muted}

<!-- signatures.jinja2 -->

::: {.signature}

<span class="kw">def</span><span class="name">select_shap_values</span>(<span class="params"><span class="n">shap_values</span><span class="p">:</span><span class="n">Union</span><span class="p">\[</span><span class="n">np</span><span class="o">.</span><span class="n">ndarray</span><span class="p">, </span><span class="n">List</span><span class="p">\[</span><span class="n">np</span><span class="o">.</span><span class="n">ndarray</span><span class="p">\]</span><span class="p">\]</span><span class="muted">,</span></span><span class="params"><span class="n">class_of_interest</span><span class="p">:</span><span class="n">Optional</span><span class="p">\[</span><span class="nb">int</span><span class="p">\]</span><span class="o">=</span><span class="kc">None</span></span>)<span class="p"> → </span><span class="return-annotation"><a href="/validmind/validmind/vm_models.html#class-np">validmind.vm_models.np</a><span class="o">.</span><a href="/validmind/validmind/vm_models.html#class-ndarray">validmind.vm_models.ndarray</a></span>:

:::

<!-- docstring.jinja2 -->

Selects SHAP values for binary or multiclass classification.

For regression models, returns the SHAP values directly as there are no classes.

**Arguments**

- `shap_values`: The SHAP values returned by the SHAP explainer. For multiclass classification, this will be a list where each element corresponds to a class. For regression, this will be a single array of SHAP values.
- `class_of_interest`: The class index for which to retrieve SHAP values. If None (default), the function will assume binary classification and use class 1 by default.

**Returns**

- The SHAP values for the specified class (classification) or for the regression output.

**Raises**

- `ValueError`: If class_of_interest is specified and is out of bounds for the number of classes.

<!-- function.qmd.jinja2 -->

## SHAPGlobalImportance[()]{.muted}

<!-- signatures.jinja2 -->

::: {.signature}

<span class="decorators"><span class="decorator">@<span class="n">tags(<span class="s">'sklearn'</span>, <span class="s">'binary_classification'</span>, <span class="s">'multiclass_classification'</span>, <span class="s">'feature_importance'</span>, <span class="s">'visualization'</span>)</span></span><span class="decorator">@<span class="n">tasks(<span class="s">'classification'</span>, <span class="s">'text_classification'</span>)</span></span></span>

<span class="kw">def</span><span class="name">SHAPGlobalImportance</span>(<span class="params"><span class="n">model</span><span class="p">:</span><span class="n">VMModel</span><span class="muted">,</span></span><span class="params"><span class="n">dataset</span><span class="p">:</span><span class="n">VMDataset</span><span class="muted">,</span></span><span class="params"><span class="n">kernel_explainer_samples</span><span class="p">:</span><span class="nb">int</span><span class="o">=</span><span class="kc">10</span><span class="muted">,</span></span><span class="params"><span class="n">tree_or_linear_explainer_samples</span><span class="p">:</span><span class="nb">int</span><span class="o">=</span><span class="kc">200</span><span class="muted">,</span></span><span class="params"><span class="n">class_of_interest</span><span class="p">:</span><span class="n">Optional</span><span class="p">\[</span><span class="nb">int</span><span class="p">\]</span><span class="o">=</span><span class="kc">None</span></span>)<span class="p"> → </span><span class="return-annotation"><span class="n">Dict</span><span class="p">\[</span><span class="nb">str</span><span class="p">, </span><span class="n">Union</span><span class="p">\[</span><a href="/validmind/validmind/vm_models.html#class-plt">validmind.vm_models.plt</a><span class="o">.</span><a href="/validmind/validmind/vm_models.html#class-figure">validmind.vm_models.Figure</a><span class="p">, </span><span class="n">Dict</span><span class="p">\[</span><span class="nb">str</span><span class="p">, </span><span class="nb">float</span><span class="p">\]</span><span class="p">\]</span><span class="p">\]</span></span>:

:::

<!-- docstring.jinja2 -->

Evaluates and visualizes global feature importance using SHAP values for model explanation and risk identification.

### Purpose

The SHAP (SHapley Additive exPlanations) Global Importance metric aims to elucidate model outcomes by attributing them to the contributing features. It assigns a quantifiable global importance to each feature via their respective absolute Shapley values, thereby making it suitable for tasks like classification (both binary and multiclass). This metric forms an essential part of model risk management.

### Test Mechanism

The exam begins with the selection of a suitable explainer which aligns with the model's type. For tree-based models like XGBClassifier, RandomForestClassifier, CatBoostClassifier, TreeExplainer is used whereas for linear models like LogisticRegression, XGBRegressor, LinearRegression, it is the LinearExplainer. Once the explainer calculates the Shapley values, these values are visualized using two specific graphical representations:

1. Mean Importance Plot: This graph portrays the significance of individual features based on their absolute Shapley values. It calculates the average of these absolute Shapley values across all instances to highlight the global importance of features.

1. Summary Plot: This visual tool combines the feature importance with their effects. Every dot on this chart represents a Shapley value for a certain feature in a specific case. The vertical axis is denoted by the feature whereas the horizontal one corresponds to the Shapley value. A color gradient indicates the value of the feature, gradually changing from low to high. Features are systematically organized in accordance with their importance.

### Signs of High Risk

- Overemphasis on certain features in SHAP importance plots, thus hinting at the possibility of model overfitting
- Anomalies such as unexpected or illogical features showing high importance, which might suggest that the model's decisions are rooted in incorrect or undesirable reasoning
- A SHAP summary plot filled with high variability or scattered data points, indicating a cause for concern

### Strengths

- SHAP does more than just illustrating global feature significance, it offers a detailed perspective on how different features shape the model's decision-making logic for each instance.
- It provides clear insights into model behavior.

### Limitations

- High-dimensional data can convolute interpretations.
- Associating importance with tangible real-world impact still involves a certain degree of subjectivity.

<!-- class.qmd.jinja2 -->

## [class]{.muted} UnsupportedModelForSHAPError

<!-- signatures.jinja2 -->

::: {.signature}

<span class="kw">class</span><span class="name">UnsupportedModelForSHAPError</span>:

:::

<!-- docstring.jinja2 -->

When an unsupported model is used for SHAP importance.

**Inherited members**

- **From BaseError**: [class BaseError[()]{.muted}](#class-baseerror), [__init__[()]{.muted}](#__init__), [__str__[()]{.muted}](#__str__), [description[()]{.muted}](#description)
- **From builtins.BaseException**: with_traceback, add_note
