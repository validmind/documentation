---
title: "[validmind](/validmind/validmind.html).RegardScore"
sidebar: validmind-reference
toc-depth: 4
toc-expand: 4
# module.qmd.jinja2
---

## validate_prediction<span class='muted'>()</span>

<!-- signatures.jinja2 -->

::: {.signature}

<span class="kw">def</span><span class="name">validate_prediction</span>(<span class="params"><span class="n">y_true</span><span class="p">:</span><span class="n">Union</span><span class="p">\[</span><span class="n">np</span><span class="o">.</span><span class="n">ndarray</span><span class="p">, </span><span class="nb">list</span><span class="p">\]</span><span class="muted">,</span></span><span class="params"><span class="n">y_pred</span><span class="p">:</span><span class="n">Union</span><span class="p">\[</span><span class="n">np</span><span class="o">.</span><span class="n">ndarray</span><span class="p">, </span><span class="nb">list</span><span class="p">\]</span><span class="muted">,</span></span><span class="params"><span class="n">dataset_id</span><span class="p">:</span><span class="n">Optional</span><span class="p">\[</span><span class="nb">str</span><span class="p">\]</span><span class="o">=</span><span class="kc">None</span></span>)<span class="p"> â†’ </span><span class="return-annotation"><span class="n">Tuple</span><span class="p">\[</span><a href="/validmind/validmind/vm_models.html#class-np">validmind.vm_models.np</a><span class="o">.</span><a href="/validmind/validmind/vm_models.html#class-ndarray">validmind.vm_models.ndarray</a><span class="p">, </span><a href="/validmind/validmind/vm_models.html#class-np">validmind.vm_models.np</a><span class="o">.</span><a href="/validmind/validmind/vm_models.html#class-ndarray">validmind.vm_models.ndarray</a><span class="p">\]</span></span>:

:::

<!-- docstring.jinja2 -->

Comprehensive validation of true and predicted value pairs. Handles NaN/None values and length mismatches.

**Arguments**

- `y_true`: List or array of true values
- `y_pred`: List or array of predicted values
- `dataset_id`: Optional identifier for the dataset (for logging)

**Returns**

- (cleaned_y_true, cleaned_y_pred) with matching lengths and no NaN values

<!-- function.qmd.jinja2 -->

## RegardScore[()]{.muted}

<!-- signatures.jinja2 -->

::: {.signature}

<span class="decorators"><span class="decorator">@<span class="n">tags(<span class="s">'nlp'</span>, <span class="s">'text_data'</span>, <span class="s">'visualization'</span>)</span></span><span class="decorator">@<span class="n">tasks(<span class="s">'text_classification'</span>, <span class="s">'text_summarization'</span>)</span></span></span>

<span class="kw">def</span><span class="name">RegardScore</span>(<span class="params"><span class="n">dataset</span><span class="muted">,</span></span><span class="params"><span class="n">model</span></span>):

:::

<!-- docstring.jinja2 -->

Assesses the sentiment and potential biases in text generated by NLP models by computing and visualizing regard scores.

### Purpose

The `RegardScore` test aims to evaluate the levels of regard (positive, negative, neutral, or other) in texts generated by NLP models. It helps in understanding the sentiment and bias present in the generated content.

### Test Mechanism

This test extracts the true and predicted values from the provided dataset and model. It then computes the regard scores for each text instance using a preloaded `regard` evaluation tool. The scores are compiled into dataframes, and visualizations such as histograms and bar charts are generated to display the distribution of regard scores. Additionally, descriptive statistics (mean, median, standard deviation, minimum, and maximum) are calculated for the regard scores, providing a comprehensive overview of the model's performance.

### Signs of High Risk

- Noticeable skewness in the histogram, especially when comparing the predicted regard scores with the target regard scores, can indicate biases or inconsistencies in the model.
- Lack of neutral scores in the model's predictions, despite a balanced distribution in the target data, might signal an issue.

### Strengths

- Provides a clear evaluation of regard levels in generated texts, aiding in ensuring content appropriateness.
- Visual representations (histograms and bar charts) make it easier to interpret the distribution and trends of regard scores.
- Descriptive statistics offer a concise summary of the model's performance in generating texts with balanced sentiments.

### Limitations

- The accuracy of the regard scores is contingent upon the underlying `regard` tool.
- The scores provide a broad overview but do not specify which portions or tokens of the text are responsible for high regard.
- Supplementary, in-depth analysis might be needed for granular insights.
