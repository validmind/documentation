---
title: "Setting up model workflows"
date: last-modified
listing:
  - id: model-workflows
    type: grid
    max-description-length: 250
    sort: false
    fields: [title, description]
    contents:
    - manage-model-stages.qmd
    - configure-custom-workflows.qmd
    - workflow-configuration-examples.qmd
---

Configure workflows to match your organizational needs for overseeing model development, validation, implementation, ongoing monitoring, auditing, or other risk management activities.

- Models in your model inventory transition through your organization's custom model lifecycles via model stages, which are in turn manipulated via workflows.
- Workflows are comprised of workflow steps,[^1] and have their own states discrete from model stages.[^2]
- Some step types allow you to define conditional requirements,[^3] providing flexible customization.

## Set up workflows

:::{#model-workflows}
:::

## Workflow elements

A workflow is comprised of an interplay of these elements:

- [Workflow step types](#workflow-step-types)
- [Conditional requirements](#conditional-requirements)
- [Workflow states](#workflow-states)

### Workflow step types

::: {.panel-tabset}

### Transitions

:::: {.flex .flex-wrap .justify-around}

::: {.w-50-ns .pr5}
[{{< fa cube >}} &hairsp; Model Stage Change](#stage-change){.button .button-fill}

:::

::: {.w-50-ns .pr3}
[{{< fa wifi >}} &hairsp; Workflow State Change](#state-change){.button .button-fill}

:::

::::

#### {{< fa cube >}} Model Stage Change
<span id="stage-change"></span>

- Transitions a model into another stage.
- Requires available model stages associated with the workflow.[^4]

| Field | Description |
|---:|---|
| [when these conditions are met]{.smallcaps} (optional) | Add conditional requirements to qualify for this step.[^5]  |
| [set model stage to]{.smallcaps} | Select the model stage to transition to. |
: **{{< fa cube >}} Model Stage Change** step configuration {.hover tbl-colwidths="[40,60]"}

#### {{< fa wifi >}} Workflow State Change
<span id="state-change"></span>

Transitions the workflow into another workflow state.[^6]

| Field | Description |
|---:|---|
| [set workflow state to]{.smallcaps} | Select or add[^7] the workflow state to transition the workflow to.  |
| [progress]{.smallcaps} | Indicate the progress of the workflow at this transition into the next state. |
: **{{< fa wifi >}} Workflow State Change** step configuration {.hover tbl-colwidths="[30,70]"}

### Actions

:::: {.flex .flex-wrap .justify-around}

::: {.w-50-ns .pr5}
[{{< fa arrow-pointer >}} &hairsp; User Action v2](#user-action){.button .button-fill}

:::

::: {.w-50-ns .pr3}
[{{< fa users >}} &hairsp; Approval](#approval){.button .button-fill}

:::

::::

#### {{< fa arrow-pointer >}} User Action v2*
<span id="user-action"></span>

Creates a button that performs an action on behalf of the user.

| Field | Description |
|---:|---|
| [display action button when]{.smallcaps}  (optional) | Add conditional requirements for displaying this step.[^8]  |
| [action button label]{.smallcaps} | Text that displays on your action button. |
| [request fields]{.smallcaps} | Include required inventory fields alongside your action.[^9]  |
: **{{< fa arrow-pointer >}} User Action v2** step configuration {.hover tbl-colwidths="[40,60]"}

<!-- :::: {.flex .flex-wrap .justify-around}

::: {.w-50-ns .mt2}

![User Action step configuration with a request field of Date on Hold](configure-user-action.png){fig-alt="A screenshot showing a User Action step configuration with a request field of Date On Hold" .screenshot group="user-action"}

:::

::: {.w-40-ns .mt2}

![Action transition panel with the Date on Hold inventory field](user-action-inventory-field.png){fig-alt="A screenshot showing the action transition panel with the Date On Hold inventory field" .screenshot group="user-action"}

Example
: A `Put On Hold` action that requests a value in the Date On Hold field, and transitions the model lifecycle status to <br>[On Hold]{.bubble}.

:::

:::: -->
<!-- 
::: {.callout title="All model inventory field types can be included as request fields on a User Action step. "}

:::: {.flex .flex-wrap .justify-around}

::: {.w-50-ns .mt2}

![User Action step configuration with a request field of Workflow Attachment](upload-workflow-attachment.png){fig-alt="A screenshot showing a User Action step configuration with a request field of Workflow Attachment" .screenshot group="attachments"}

:::

::: {.w-40-ns .mt2}

![Files uploaded under the Workflow Attachment inventory field](model-workflow-attachments.png){fig-alt="A screenshot showing the files uploaded under the Workflow Attachment inventory field" .screenshot group="attachments"}

Example
: An `In Initial Validation` action that requests an upload in the [workflow attachment]{.smallcaps} field, and transitions the model lifecycle status to [In Initial Validation]{.bubble}.

:::

::::
::: -->

#### {{< fa users >}} Approval*
<span id="approval"></span>

When your workflow reaches the approval step, roles or users in the selected **[approval group]{.smallcaps}** will receive a preconfigured message.

- Select from either **User Roles**,[^10] **Model Stakeholder Types**,[^11] or either **User Role** or **User Type** inventory field.[^12]
- Must be connected to both an approval and rejection {{< fa cube >}} Model Stage Change step.[^13]

::: {.callout}
Please note that roles, stakeholders, or users must be assigned to the indicated **[approval group]{.smallcaps}** before the workflow is transitioned into the **{{< fa users >}} Approval** step in order for the message to be displayed to users in those categories.

:::

| Field | Description |
|---:|---|
| [approval group]{.smallcaps}  | Select the roles, stakeholders, or user fields responsible for approval. |
| [threshold]{.smallcaps} | Percentage of approvers required for the resource to be approved.[^14] |
| Approval Message | When your resource reaches this approval step, the users in the selected group will receive the following message.[^15] |
: **{{< fa users >}} Approval** step configuration {.hover tbl-colwidths="[35,65]"}

<!-- :::: {.flex .flex-wrap .justify-around}

::: {.w-50-ns}
![APPROVAL GROUP step configuration with a User Roles selection of Validator](configure-approval-step.png){fig-alt="A screenshot showing an APPROVAL GROUP step configuration with a User Roles selection of Validator" .screenshot group="approval"}

:::

::: {.w-40-ns}
![Setup for the Approval Message shown to the APPROVAL GROUP of User Roles — Validator](approval-group-setup.png){fig-alt="A screenshot showing the setup for the Approval Message shown to the APPROVAL GROUP of User Roles — Validator" .screenshot group="approval"}

Example
: A message shown to the User Roles — Validator requesting review of a model for compliance.

:::

:::: -->

### Conditional

:::: {.flex .flex-wrap .justify-around}

::: {.w-50-ns .pr5}
[{{< fa maximize >}} &hairsp; Condition Branch](#stage-change){.button .button-fill}

:::

::: {.w-50-ns .pr3}
[{{< fa clock >}} &hairsp; Wait](#wait){.button .button-fill}

:::

::::

#### {{< fa maximize >}} Condition Branch*
<span id="condition-branch"></span>

- Allows diverging paths based on conditional requirements.
- A `default` branch will be automatically included as a catch-all `else` path to ensure that your conditional logic is complete.

::: {.callout-important}
Workflows cannot be saved until condition branches are connected to other steps.
:::

To configure a condition branch:

1. On the Configure Condition Branch modal, click **{{< fa plus >}} Add Branch**.
2. Enter in the **[path name]{.smallcaps}** and designate the **[conditions]{.smallcaps}**[^12] that apply to this path.
3. Continue with steps 1 and 2 until your conditional branch logic is complete.

    To remove a path, click **{{< fa ellipsis-vertical >}}** and select **{{< fa trash-can >}} Remove Path**.
4. When you are finished setting up all your branch paths, click **Update Step** to save your step.

    Proceed with linking the Condition Branch with your subsequent steps.[^13]

<!-- For example, if you wanted your models where the field `GenAI Model` is set to `true` to undergo a special legal approval process:

- First, you'd set up a Condition Branch path to look for instances where `GenAI Model` is set to `true`.
- Then, you would add an Approval step[^14] that requests a review of the model from the User Roles — `Legal Team`.
- Finally, configure the `default` path to bypass this special approval.  -->

<!-- :::: {.flex .flex-wrap .justify-around}

::: {.w-50-ns}
![CONDITION BRANCH step configuration with condition of GenAI Model = `true`](configure-condition-branch.png){fig-alt="A screenshot showing a CONDITION BRANCH step configuration with condition of GenAI Model = `true`" .screenshot group="condition"}

:::

::: {.w-50-ns}
![Legal Team Approval step configuration](legal-team-approval.png){fig-alt="Screenshot showing the Legal Team Approval step configuration" .screenshot group="condition"}

:::

::::

::: {.column-margin}
![Example Condition Branch where GenAI models require special approval from the User Roles — Legal Team](example-condition-branch.png){fig-alt="A screenshot showing an example Condition Branch where GenAI models require special approval from the User Roles — Legal Team" .screenshot group="condition"}

::: -->

#### {{< fa clock >}} Wait*
<span id="wait"></span>

- Creates a time condition for displaying next available action.
- Used to enforce a time delay or a calendar date milestone. 

::: {.callout title="Time stamp configuration is in the current user's timezone."}
Other users viewing those fields or the workflow will see the value automatically in their timezone. 
:::

To configure a wait step, select when you would like to [resume workflow]{.smallcaps}: 

| Option | Required field | Description | 
|---:|---|---|
| After Time Interval  | [wait duration]{.smallcaps} | Wait for a set amount of time in minutes, hours, or days. Applies to all models under the workflow. |
| At Specified Date | [wait until]{.smallcaps} | Wait until a specific timestamp. Applies to all models under the workflow. If the milestone date inputted is in the past, the next workflow step will display immediately. |
| At Specified Date on Model Field | [model field]{.smallcaps}[^15] | Wait until a specific timestamp as defined by a valid `Date` or `Date Time` type model inventory field on a per model basis. If the selected field is empty[^16] or the milestone date inputted is in the past, the next workflow step will display immediately. |
: **Wait** step configuration {.hover tbl-colwidths="[30,15,45]"}

### Start / Stop

:::: {.flex .flex-wrap .justify-around}

::: {.w-50-ns .pr5}
[{{< fa arrow-right-arrow-left >}} &hairsp; Run Workflow](#run-workflow){.button .button-fill}

:::

::: {.w-50-ns .pr3}
[{{< fa circle-stop >}} &hairsp; End](#end){.button .button-fill}

:::

::::

#### {{< fa arrow-right-arrow-left >}} Run Workflow*
<span id="run-workflow"></span>

WIP

#### {{< fa circle-stop >}} End*
<span id="end"></span>

WIP

:::

### Conditional requirements*

Conditional requirements can be configured for the following step types:[^6]

| Step type | Conditional options |
|---:|---|
| Status Change | Under **[when these conditions are met]{.smallcaps}**, you are able to set both `AND` and `OR` conditions. |
| User Action | Under **[display action button when]{.smallcaps}**, you are able to set both `AND` and `OR` conditions.  |
| Approval | Under **[threshold]{.smallcaps}**, you are able to set the minimum percentage of approvers required for the resource to be approved. |
| Condition Branch | Under each branch's **[conditions]{.smallcaps}**, you're able to designate the `AND` and `OR` conditions that apply to that path. |
: Step type conditional options {.hover tbl-colwidths="[20,80]"}

For Status Change, User Action, and Condition Branch conditions, you're able to add a single independent **Rule** or a linked condition **Group**. These rules and groups can be nested if desired:

- Click **{{< fa plus >}} Rule** to add an independent rule.
- Click **{{< fa plus >}} Group** to add a linked group of rules that all must be true to qualify.

### Workflow states*

Workflow states are statuses unique to a specific workflow, discrete from model stages.**

#### Add workflow states

Add workflow states by either while configuring a **{{< fa wifi >}} Workflow State Change** step,** or via the **{{< fa gear >}} Settings** page:

1. In the left sidebar, click **{{< fa gear >}} Settings**.
2. Under Workspace, select **Workflow States**.
3. Click on the workflow you'd like to modify workflow states for.
4. Click **{{< fa gear >}} Add New Workflow State**.
5. Enter in a **[name]{.smallcaps}** and a **[description]{.smallcaps}**, then select a **[color]{.smallcaps}** for your workflow state.
6. Click **Save** to create the workflow state.

#### Delete workflow states

::: {.callout-important title="Workflow state deletion is permanent."}
Deleting a workflow state may cause your existing workflows to malfunction.*CAN YOU EVEN DELETE A STATE THAT IS IN USE? Check
:::

1. In the left sidebar, click **{{< fa gear >}} Settings**.
2. Under Workspace, select **Workflow States**.
3. Click on the workflow you'd like to delete workflow states for.
4. Hover over the workflow state until the **{{< fa trash-can >}}** appears, then click on it.
5. After you confirm, the workflow state will be removed.

## What's next

- [Working with model workflows](working-with-model-workflows.qmd)

<!-- FOOTNOTES -->

[^1]: [Workflow step types](#workflow-step-types)

[^2]: [Workflow states](#workflow-states)

[^3]: [Conditional requirements](#conditional-requirements)

[^4]: [Manage model stages](manage-model-stages.qmd)

[^5]: [Conditional requirements](#conditional-requirements)

[^6]: [Workflow states](#workflow-states)

[^7]: Click **{{< fa plus >}} Add New State** to create a new state unique to this workflow.

[^8]: [Conditional requirements](#conditional-requirements)

[^9]:

    - Select the field, then click **{{< fa plus >}} Add Field** to insert.
    - [Manage model inventory fields](/guide/model-inventory/manage-model-inventory-fields.qmd)

[^10]: [Manage roles](/guide/configuration/manage-roles.qmd)

[^11]: [Manage model stakeholder types](/guide/configuration/manage-model-stakeholder-types.qmd)

[^12]: [Manage model inventory fields](/guide/model-inventory/manage-model-inventory-fields.qmd#inventory-field-types)

[^13]: [Workflow step types](#workflow-step-types)

[^14]: [Conditional requirements](#conditional-requirements)

[^15]:

    Enter in a **[title]{.smallcaps}** and a **[message]{.smallcaps}** to display.

<!-- 

[^4]: [Add conditional requirements](configure-custom-workflows.qmd#add-conditional-requirements)

[^5]: [Manage model stages](manage-model-stages.qmd)

[^6]: [Add conditional requirements](configure-custom-workflows.qmd#add-conditional-requirements)

[^7]: [Manage model inventory fields](/guide/model-inventory/manage-model-inventory-fields.qmd)

[^8]: [Manage roles](/guide/configuration/manage-roles.qmd)

[^9]: [Manage model inventory fields](/guide/model-inventory/manage-model-inventory-fields.qmd)

[^10]: [Status Change](#status-change) steps

[^11]: [Add conditional requirements](configure-custom-workflows.qmd#add-conditional-requirements)

[^12]: [Add conditional requirements](configure-custom-workflows.qmd#add-conditional-requirements)

[^13]: [Link steps together](configure-custom-workflows.qmd#link-steps-together) 

[^14]: [Approval](#approval) steps

[^15]: [Manage model inventory fields](/guide/model-inventory/manage-model-inventory-fields.qmd#inventory-field-types)

[^16]: Make model inventory fields **[required on registration]{.smallcaps}** to ensure necessary fields have valid values. -->
