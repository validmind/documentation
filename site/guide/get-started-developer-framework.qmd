---
title: "Get started with the ValidMind Developer Framework"
date: last-modified
listing:
  - id: developer-getting-started
    type: grid
    max-description-length: 250
    sort: false
    fields: [title, description]
    contents:
    - ../notebooks/quickstart_customer_churn_full_suite.ipynb
    - developer-getting-started-video.qmd
  - id: developer-how-to-beginner
    type: grid
    max-description-length: 250
    sort: false
    fields: [title, description]
    contents: 
    - ../notebooks/how_to/run_a_test.ipynb
    - ../notebooks/how_to/configure_parameters_demo.ipynb
    - ../notebooks/how_to/implementing_custom_tests.ipynb
  - id: developer-code-samples
    type: grid
    max-description-length: 250
    sort: false
    fields: [title, description]
    contents: 
    - ../notebooks/code_samples/customization/customizing_metrics_with_output_templates.ipynb
    - ../notebooks/code_samples/LLM_and_NLP/prompt_validation_demo.ipynb
    - ../notebooks/code_samples/time_series/tutorial_time_series_forecasting.ipynb
---

As a model developer, you use the ValidMind Developer Framework to automate the generation of model documentation by uploading documentation artifacts and test results to the ValidMind platform.

## What is the Developer Framework?

ValidMind's Developer Framework provides a rich collection of documentation tools and test suites, from documenting descriptions of your dataset to validation testing your models for weak spots and overfit areas. 

![](get-started-validmind.png){width=70% fig-align="center" fig-alt="An image showing the two main components of ValidMind. The Developer Framework that integrates with your existing developer environment, and the ValidMind MRM platform."}

ValidMind offers two primary methods for documenting model risk:

- **Generate documentation**: Through automation, the framework extracts metadata from associated datasets and models for you and generates model documentation based on a template. You can also add more documentation and tests manually using the documentation editing capabilities in the ValidMind UI. 

- **Run validation tests**: The framework provides a suite of validation tests for common financial services use cases. For cases where these tests do not cover everything you need, you can also extend existing test suites with your own proprietary tests or testing providers. 

The Developer Framework is designed to be model agnostic. If your model is built in Python, ValidMindâ€™s Python client library already provides all the standard functionality you might need without requiring your developers to rewrite any functions.

::: {.callout-important collapse="true" appearance="minimal"}
##  {{< fa angle-right >}} Key ValidMind concepts

<!--- These concepts were already introduced in the "Get started" section. They are repeated here in a collapsed format in case a reader missed them earlier. --->

{{< include key-validmind-concepts.qmd >}}

:::

## Getting started

When you [**sign up**](https://app.prod.validmind.ai) for ValidMind, you get access to demo models and code samples that you can try out. Start with our QuickStart or watch the video:

:::{#developer-getting-started}
:::

## How to run tests

ValidMind provides many built-in tests and test suites which make it easy for a model developer to document their work. Start by running a pre-made test, then modify it, and finally create your own test: 

:::{#developer-how-to-beginner}
:::

Learn more: [Run tests & test suites](testing-overview.qmd)

## Try the code samples

Our code samples showcase the capabilities and features of the ValidMind Developer Framework. Examples that you can build on and adapt for your own use cases include:

:::{#developer-code-samples}
::: 

Try more: [Code samples](samples-jupyter-notebooks.qmd)

## Reference

<a href="../validmind/validmind.html" target="_blank">ValidMind Developer Framework Reference</a> {{< fa external-link >}}
