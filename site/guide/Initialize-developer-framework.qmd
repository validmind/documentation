---
title: "Initialize the developer framework"
keywords: "initialize developer framework, model developer, model risk management, ValidMind"
---

These steps show how a model developer can:

- Initialize the developer framework
- Add documentation
- Run tests and generate metrics
- Verify information is being sent to the ValidMind SaaS platform

## Prerequisites

 In order to initialize the developer framework and to be able to upload to the ValidMind SaaS platform, you must provide the following information:

- `api_host`: The location of the ValidMind API
- `api_key`: The account API key
- `api_secret`: The account secret key
- `project`: The project identifier

For existing projects, this information can be found in the SaaS UI:

1. Go to the **Projects** page and select the project.

2. Click **CLIENT INTEGRATION** and scroll down to **Initializing the client library**.

3. Locate the code snippet and click **Copy to clipboard**. 

If you do not have an existing project, you can [create one](create-projects.qmd). 

The developer framework also requires access to the data sources where data sets used for training, testing, and trained model files are stored. This access is needed to run model documentation and validation tests, and to upload to the ValidMind SaaS platform to populate the model documentation and validation reports.

## Initialize the developer framework

1. Install the client library:

    ```shell
    pip install validmind
    ```

2. Initialize the client library:

    Paste the code snippet with the client integration details directly into your development source code, replacing this example with your own:

    ```python
    import validmind as vm

    vm.init(
      api_host = "{{< var api_host >}}/tracking",
      api_key = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      api_secret = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      project = "<project-identifier>"
    )
    ```

::: {.column-margin}
::: {.callout-important}
## Don't forget
 
Replace the API key and secret shown in these steps with your own.
:::
:::

After you have pasted the code snippet into your development source code and executed the code, the client library should initialize and successfully register with ValidMind when executed the client library can be used for documenting and testing your models, and to upload to the ValidMind SaaS platform. 

## Add documentation

TBD 

## Run tests and generate metrics

TBD 

## What's Next

TO DO Switch to web user interface to track your first upload to the SaaS platform.

<!---
Track your first event


```python
{sdkPingSnippet}
```

Initialize the SDK on your python code and track your first
event with `vm.ping()`, if the event is tracked successfully you will see the message below

```python
Awaiting... Success!
```

## Troubleshooting

[Include any common issues or errors that may arise during the task and how to resolve them.]

## Conclusion

[Summarize the task and provide any next steps or resources for the user to continue their learning or work.]


QMD: General getting started w/ initializing developer framework and runnning a simple test via intro notebook ()
Then next steps will be getting started with their own model, for FR it will be time series notebook.
Notebooks are tutorials or how-tos, they are NOT reference! So the notebooks need to move around in the docs
    Could split the getting started up into sections for Developers, Validators, and Admins (and likely get rid of the Guide section)
--->
