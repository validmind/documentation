---
title: "Install and initialize the Developer Framework"
date: last-modified
---

Every documentation project includes a code snippet that connects your developer environment with ValidMind. For example, you can use the code snippet shown here with a Jupyter notebook to upload documentation to this project.

These steps show how a model developer can integrate the Developer Framework in our own developer environment by installing and initializing it.

For example, you can use these steps to initialize the Developer Framework as part of a Jupyter notebook or use it in other parts of your customer infrastructure, such as MLOps.

## Prerequisites

In order to integrate the Developer Framework and to be able to upload to the ValidMind Platform, you must provide the following information through a code snippet that you copy from the ValidMind Platform UI:

| Argument      | Description                        |
|---------------|------------------------------------|
| `api_host`    | The location of the ValidMind API  |
| `api_key`     | The account API key                |
| `api_secret`  | The account secret key             |
| `project`     | The project identifier             |


## Locate the framework integration instructions

For existing projects, this information can be found in the ValidMind UI:

1. In the left sidebar, click [**Model Inventory**](https://app.prod.validmind.ai/model-inventory).

2. Select a model by clicking on it or find your model by applying a filter or searching for it.

3. In the left sidebar that appears for your model, click **Getting Started**.

3. Locate the code snippet and click **Copy to clipboard**. 

If you do not have an existing project, you can [create one](create-documentation-projects.qmd). 

The Developer Framework also requires access to the data sources where data sets used for training, testing, and trained model files are stored. This access is needed to run model documentation and validation tests, and to upload to the ValidMind Platform to populate the model documentation and validation reports.

## Install the client library

To install the client library:

```shell
pip install validmind
```

## Initialize the client library

To initialize the client library, paste the code snippet with the client integration details directly into your development source code, replacing this example with your own:

```python
import validmind as vm

vm.init(
  api_host = "{{< var api_host >}}/tracking",
  api_key = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
  api_secret = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
  project = "<project-identifier>"
)
```

::: {.column-margin}
::: {.callout-important}
## Don't forget
 
Replace the API key and secret shown in these steps with your own.
:::
:::

After you have pasted the code snippet into your development source code and executed the code, the Python client library will register with ValidMind. You can now use the Developer Framework to document and test your models, and to upload to the ValidMind Platform.