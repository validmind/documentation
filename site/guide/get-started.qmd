---
title: "Get started"
keywords: "get started, model risk management, ValidMind"
---

<!-- 
Quickstart, essentially the demo
- Configuration 
- Dev framework demo
- Model validator try-out
--->

The easiest way to get started with ValidMind is to try out our developer framework and explore the SaaS platform UI. 

These steps will show you how our developer framework works and what you can do with our SaaS UI. To make this getting started easier, we've picked a 

<!---
NR TO DO add a graphic that shows how developers document and validators validate
--->

## Try out the developer framework

For model developers, we recommend that you try our introductory notebooks to learn how you initialize the developer framework, add documentation, run test plans, generate metrics, and send information to the ValidMind SaaS platform:

- [ValidMind Python Library Introduction](../notebooks/intro.ipynb)
- [ValidMind Python Library Introduction (for R users)](../notebooks/intro-r.ipynb)

<!-- TO DO we need to add a download link here --->
You can also download the source for these notebooks to make changes locally and test the output: [Download link]

## Explore the SaaS platform

For model developers and validators: Review and evaluate models and model documentation to ensure they comply with organizational and regulatory requirements.

<!---
Generating & Editing a new online document
Creating a new online document for a model use case
Importing the Developer Framework
Generating model documentation using the Developer Framework
Editing the documentation in the ValidMind online UI assistance

Incorporating feedback from MRGR / Model validation team 
Reviewing the model documentation as a Model Validator
Providing feedback as a Model Validator
Reviewing and addressing feedback as a Model Developer

Configuring ValidMind
TEMPLATE Configuring approval workflows and procedures
Configuring model documentation templates & boilerplates
--->

## What's next

Ready to configure ValidMind for your own use case? Move on to the guide Try our 
In this getting started, the model has been defined, the use case and documentation template had been picked, and tests were run tests,

