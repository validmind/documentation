---
title: "Supported models"
keywords: "Supported models, ai risk, model risk management, ValidMind"
date: last-modified
---

Our Supported Models provide an array of templates for testing and documentation, aimed at specific use-cases. This topic is relevant for model developers who want to know what functionality the Developer Framework provides and how they can extend it. 

## What is a supported model?

A _supported model_ refers to a model for which predefined testing or documentation functions exist in the ValidMind Developer Framework, provided that the model you are developing is documented using a supported version of our client library.

<!--- TO DO This text might need a bit more expansion --->
Please note the inherent dependency on data types, such as tabular, time series, and text data types. This distinction isn't always immediately evident. For example: while binary classification is possible on text datasets, only the `tabular_dataset` suite is explicitly mentioned in our list of supported models.

Additionally, the framework might accommodate additional models not explicitly listed. The absence of pre-configured tests for these models doesn't necessarily indicate a lack of support. You always have the flexibility to [integrate your own tests or connect to an external test provider](../notebooks/external_test_providers_demo.ipynb), if needed.

## Currently supported models

As of release ({{< var version >}}), the Developer Framework supports the following model types: 

The following table presents an overview of libraries supported by each test suite, as well as the tests which comprise each test suite as of the current Developer Framework release. 

| Problem type | Goal | Test Suite | Supported Libraries | Tests |
|--------------|------|------------|---------------------|-------|
| Binary classification | Data validation | tabular_dataset | numpy, pandas | DatasetMetadata, DatasetDescription, DescriptiveStatistics, DatasetCorrelations |
| Binary classification | Data validation | tabular_dataset | numpy, pandas | ClassImbalance, Duplicates, HighCardinality, HighPearsonCorrelation, MissingValues, Skewness, UniqueRows, TooManyZeroValues |
| Binary classification | Model validation | binary_classifier_model_validation | sklearn.RandomForestClassifier, sklearn.LogisticRegression, xgboost.XGBClassifier, CatBoostClassifier | ModelMetadata, DatasetSplit, ConfusionMatrix, ClassifierInSamplePerformance, ClassifierOutOfSamplePerformance, PermutationFeatureImportance, PrecisionRecallCurve, ROCCurve, CharacteristicStabilityIndex, PopulationStabilityIndex, SHAPGlobalImportance |
| Binary classification | Model validation | binary_classifier_model_validation | sklearn.RandomForestClassifier, sklearn.LogisticRegression, xgboost.XGBClassifier, CatBoostClassifier | MinimumAccuracy, MinimumF1Score, MinimumROCAUCScore, TrainingTestDegradation |
| Binary classification | Model validation | binary_classifier_model_validation | sklearn.RandomForestClassifier, sklearn.LogisticRegression, xgboost.XGBClassifier, CatBoostClassifier | OverfitDiagnosis, WeakspotsDiagnosis, RobustnessDiagnosis |
| Time series | Data validation | time_series_dataset | numpy, pandas | TimeSeriesOutliers, TimeSeriesMissingValues, TimeSeriesFrequency |
| Time series | Data validation | time_series_dataset | numpy, pandas | TimeSeriesLinePlot, TimeSeriesHistogram, ACFandPACFPlot, SeasonalDecompose, AutoSeasonality, AutoStationarity, RollingStatsPlot, AutoAR, AutoMA |
| Time series | Data validation | time_series_dataset | numpy, pandas |  ScatterPlot, LaggedCorrelationHeatmap, EngleGrangerCoint, SpreadPlot |
| Time series | Model validation | time_series_model_validation | statsmodels.regression.linear_model.OLS, statsmodels.regression.linear_model.GLS, sklearn.linear_model.LinearRegression, xgboost.XGBRegressor | RegressionModelSummary |
| Time series | Model validation | time_series_model_validation | statsmodels.regression.linear_model.OLS, statsmodels.regression.linear_model.GLS, sklearn.linear_model.LinearRegression, xgboost.XGBRegressor | RegressionModelInsampleComparison, RegressionModelOutsampleComparison |
| Time series | Model validation | time_series_model_validation | statsmodels.regression.linear_model.OLS, statsmodels.regression.linear_model.GLS, sklearn.linear_model.LinearRegression, xgboost.XGBRegressor | RegressionModelForecastPlot |

## Related Topics

* Check out our [Developer Framework documentation](get-started-developer-framework.qmd) for more details on how to use our documentation and testing functions with supported models.

* For additional tests that are not supported, refer to our documentation on [Implementing Custom Tests](../notebooks/how_to/implementing_custom_tests.ipynb) and [Integrating External Test Providers.](../notebooks/external_test_providers_demo.ipynb)
