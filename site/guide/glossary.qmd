---
title: "Glossary"
keywords: "glossary, model risk management, ValidMind"
---

This glossary of terms provides short definitions for technical terms you find commonly used in our product documetnation. 
<!--- 

Certainly! Here are the short definitions for the ValidMind-specific technical terms:


3. **Model Documentation Automation**: A feature in ValidMind that allows for the automatic creation of model documentation using predefined templates and test plans.

4. **ValidMind Developer Framework**: A component of ValidMind that offers a structured approach to document and test risk models for consistency. It streamlines the process of generating documentation especially for AI/ML and algorithmic models.

5. **Client-side library**: Part of the ValidMind Developer Framework, it facilitates the interaction of the user's development environment with the main platform.

6. **API endpoints (in the context of models and testing with ValidMind)**: Specific URLs or URIs in ValidMind's system where external platforms or tools can access certain functionalities, such as model testing or documentation.

7. **ValidMind MRM Platform**: The cloud-based interface and tools in ValidMind that provide guidelines, best practices, and functionalities to review and evaluate models and their documentation.

8. **Multi-tenant architecture**: The design of the ValidMind MRM platform that allows multiple users or organizations to use the platform independently while sharing the same resources or infrastructure.



10. **Validation projects**: Projects within the ValidMind MRM Platform where developers and validators collaborate to review model documentation, track statuses, and generate validation reports.

--->

## ValidMind

Model inventory
: A feature in the ValidMind MRM Platform where you can track, manage, and oversee the lifecycle of models.

project
: All documentation work in ValidMind is organized into projects which act as a container for the model documentation and validation report of your model. Each stage of the modelâ€™s MRM lifecycle will constitute a new project, and may be configured with its own templates and workflows. 

template, documentation template
: A collection of content blocks that, when rendered, produces a document that model developers can use for model validation.  The template structure is a combination of content sections where each section can have one or more content blocks. Multiple sections are joined to create a longer document with a table of contents that has different heading and subheading levels, such as 1., 1.1., and so on. We currently support text-based content blocks that are populated with the ValidMind UI and test-driven content blocks. A template is represented as a YAML file.

ValidMind Developer Framework <span id="developer-framework">
: ValidMind's set of tools, guidelines, and standards designed to provide developers with a structured approach to documenting risk models. Includes our Python library, API endpoints, and other software components that simplify the model development process. Also see [ValidMind Platform](#platform).

ValidMind Platform UI <span id="platform">
: ValidMind's hosted multi-tenant architecture that includes the cloud-based web interface, APIs, databases, documentation and validation engine, and various internal services. Also see [Developer Framework](#developer-framework).

## Developers

`pip`
: A package manager for Python, used to install and manage software packages written in the Python programming language. An acronym for "Pip Installs Packages" or "Preferred Installer Program." Used to install the Python client library that is part of the ValidMind Developer Framework so that model developers can make use of its features. 

JupyterHub 
: A multi-user server that manages and proxies multiple instances of the single-user Jupyter notebook server. JupyterHub provides a platform for users to interactively work with data science and scientific computing tools in a collaborative environment. It can be deployed on various platforms, including local machines, university infrastructures, and cloud services.

Jupyter notebook
: TBD

GitHub 
:

## Model risk management

1st line of defense
: TBD

2nd line of defense
: TBD

model developer
: Responsible for developing, implementing, and maintaining risk models. Model developers are typically subject matter experts in their domain and are responsible for ensuring that the model is fit-for-purpose, accurate, and aligned with the business requirements. Model developers collaborate with model validators and business units to ensure that models are conceptually sound, robust, and fit for their intended purpose, ultimately contributing to effective Model Risk Management and reliable decision-making.

Model documentation
: Provides a comprehensive record and description of a quantitative model. This documentation should encompass all relevant information about the model in accordance with regulatory requirements, model risk policies, assumptions, mthodologies, data and inputs, model performance, evaluation, limitations, and intended use

model inventory
: A comprehensive documentation of all models used by an organization, their purpose, and their associated risks, essential for effective MRM.

model risk management (MRM)
: The process of identifying, assessing, and controlling risks associated with models used in financial institutions. Governance and risk management functions oversee the MRM process and ensure compliance with policies. 

model risk
: The potential for financial loss, incorrect decisions or unintended consequences resulting from errors or inaccuracies in financial models.

model governance
: The policies, procedures, and controls put in place by financial institutions to manage and monitor the use of models.

model validation 
: The process of evaluating and testing models to ensure that they are accurate, reliable, and effective with the help of our  platform.

model validator
: Responsible for the independent evaluation of a model's conceptual soundness, performance, and compliance with regulatory requirements. Their role is to ensure the model's assumptions, methodologies, and data quality are appropriate, and that the model is fit for its intended use. Model validators collaborate with business units and model developers to identify and address potential issues, ultimately helping to minimize model risk and enhance the reliability of model-driven decisions.

three lines of defense
: A structured approach to MRM, consisting of 1) business units responsible for model development, validation, and implementation; 2) an independent model risk oversight function that provides a governance framework and guidance; and 3) the internal audit function, which assesses the effectiveness of MRM practices and controls.

