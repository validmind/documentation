{"swagger": "2.0", "basePath": "/admin/api/v1", "paths": {"/organizations/": {"get": {"responses": {"500": {"description": "Internal Server Error."}, "403": {"description": "Unauthorized"}, "401": {"description": "Unauthorized. API credentials required"}, "200": {"description": "Organization successfully fetched and returned"}}, "summary": "Get all organizations via admin API client", "description": "Lists all organizations\nRequires admin API key authentication.", "operationId": "get_public_admin_organization_resource_collection", "tags": ["admin organizations"]}, "post": {"responses": {"500": {"description": "Internal Server Error."}, "401": {"description": "Unauthorized. API credentials required."}, "400": {"description": "Bad Request. Possible issues could be missing name in payload."}, "201": {"description": "Organization successfully created."}}, "summary": "Creates organization and its dependencies via admin API client:", "description": "Creates organization and its dependencies.\n- A new organization\n- A default group for the organization\n- Business units\n- Roles and Permissions\n- Workflows\n- Findings severities\n- Templates\n- Demo inventory model\n\n- Assigns a free subscription plan\n\n**Request Payload:**\n- **organization_name:** (required) The name of the organization.\n- **demo_inventory_models:** (required) List of inventory models to add.\n- **initial_templates:**\n    Dict of initial templates to add by template type.\n- **admin_user:** (required) Admin user for organization.\n**Response Payload:**\n- organization: The created organization.", "operationId": "post_public_admin_organization_resource_collection", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateOrganization"}}], "tags": ["admin organizations"]}}, "/organizations/bootstrap": {"get": {"responses": {"500": {"description": "Internal Server Error"}, "401": {"description": "Unauthorized. API credentials required"}, "200": {"description": "Bootstrap status retrieved successfully"}}, "summary": "Check if system has been bootstrapped via admin API client", "description": "Check bootstrap status", "operationId": "get_public_admin_organization_bootstrap_collection", "tags": ["admin organizations"]}, "post": {"responses": {"500": {"description": "Internal Server Error."}, "400": {"description": "Bad Request. Possible issues could be missing name in payload."}, "201": {"description": "Organization and user successfully created."}}, "summary": "Bootstrap initial organization and admin user via admin API client", "description": "Bootstraps initial organization and admin user.\nCreates organization and its dependencies:\n- A new organization\n- A default group for the organization\n- Business units\n- Roles and Permissions\n- Workflows\n- Findings severities\n- Templates (all for bootstrap)\n- Demo inventory models (all for bootstrap)\n\n- Assigns a free subscription plan\n\n**Request Payload:**\n- **organization_name:** (required) The name of the organization.\n- **admin_user:** (required) Admin user for organization.\n**Response Payload:**\n- organization: The created organization.", "operationId": "post_public_admin_organization_bootstrap_collection", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BootstrapOrganization"}}], "tags": ["admin organizations"]}}, "/organizations/defaults": {"get": {"responses": {"500": {"description": "Internal Server Error"}, "401": {"description": "Unauthorized. API credentials required"}, "200": {"description": "Organization defaults retrieved successfully"}}, "summary": "Returns all default organization template data including models, guidelines,", "description": "Get organization defaults\nrisk areas, templates, business units, use cases, workflows, and more.", "operationId": "get_public_admin_organization_defaults_collection", "tags": ["admin organizations"]}}, "/organizations/defaults/template": {"get": {"responses": {"500": {"description": "Internal Server Error"}, "401": {"description": "Unauthorized. API credentials required"}, "200": {"description": "Template data retrieved successfully"}}, "summary": "Get organization and model data templates via admin API client", "description": "Get organization template data", "operationId": "get_public_admin_organization_defaults_template_collection", "tags": ["admin organizations"]}}, "/organizations/defaults/upload": {"post": {"responses": {"500": {"description": "Internal Server Error."}, "401": {"description": "Unauthorized. API credentials required."}, "201": {"description": "Template successfully uploaded."}}, "summary": "Uploads new organization template via admin API client", "description": "Uploads new organization template.", "operationId": "post_public_admin_organization_defaults_upload", "tags": ["admin organizations"]}}, "/organizations/simple": {"get": {"responses": {"401": {"description": "Unauthorized. API credentials required"}, "200": {"description": "Test endpoint working"}}, "summary": "Simple test endpoint for admin API client", "description": "Simple test endpoint", "operationId": "get_public_admin_simple_resource", "tags": ["admin organizations"]}}, "/organizations/test": {"get": {"responses": {"401": {"description": "Unauthorized. API credentials required"}, "200": {"description": "Test endpoint working"}}, "summary": "Test endpoint for admin API client", "description": "Test endpoint", "operationId": "get_public_admin_test_resource", "tags": ["admin organizations"]}}, "/organizations/{cuid}": {"parameters": [{"name": "cuid", "in": "path", "required": true, "type": "string"}], "patch": {"responses": {"500": {"description": "Internal Server Error."}, "404": {"description": "Organization not found."}, "401": {"description": "Unauthorized. API credentials required."}, "400": {"description": "Bad Request. Possible issues could be missing or invalid fields in payload."}, "200": {"description": "Organization updated successfully."}}, "summary": "Update organization via admin API client", "description": "Update a specific organization by CUID\nRequires admin API key authentication.", "operationId": "patch_public_admin_organization_resource_instance", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/PatchOrganization"}}], "tags": ["admin organizations"]}}, "/organizations/{cuid}/defaults/template": {"parameters": [{"name": "cuid", "in": "path", "required": true, "type": "string"}], "patch": {"responses": {"500": {"description": "Internal Server Error."}, "404": {"description": "Organization not found."}, "401": {"description": "Unauthorized. API credentials required."}, "400": {"description": "Bad Request. Possible issues could be missing name in payload."}, "201": {"description": "Organization template successfully created."}}, "summary": "Create template for organization via admin API client", "description": "Create template for organization by CUID", "operationId": "patch_public_admin_organization_template_resource_collection", "tags": ["admin organizations"]}}, "/organizations/{cuid}/inventory_models": {"parameters": [{"name": "cuid", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"500": {"description": "Internal Server Error."}, "403": {"description": "Unauthorized"}, "401": {"description": "Unauthorized. API credentials required"}, "200": {"description": "Organization inventory models successfully fetched and returned"}}, "summary": "Get all inventory models for an organization via admin API client", "description": "Lists all organization's inventory models", "operationId": "get_public_admin_organization_inventory_models_collection", "tags": ["admin organizations"]}}, "/users/": {"get": {"responses": {"500": {"description": "Internal Server Error."}, "403": {"description": "Unauthorized"}, "401": {"description": "Unauthorized. API credentials required"}, "200": {"description": "Users successfully fetched and returned"}}, "summary": "Get all users via admin API client", "description": "Lists all users\nRequires admin API key authentication.", "operationId": "get_public_admin_user_resource_collection", "tags": ["admin users"]}, "post": {"responses": {"500": {"description": "Internal Server Error."}, "401": {"description": "Unauthorized. API credentials required."}, "400": {"description": "Bad Request. Possible issues could be missing required fields in payload."}, "201": {"description": "User successfully created."}}, "summary": "Create a new user via admin API client", "description": "Creates user and its dependencies.\nRequires admin API key authentication.\n\n**Request Payload:**\n- **first_name:** (required) User's first name\n- **last_name:** (optional) User's last name\n- **email:** (required) User's email address\n- **password:** (optional) User's password\n- **organization:** (required) Organization details object:\n    - **organization_cuid:** (required) The CUID of the organization\n    - **roles:** (optional) List of role CUIDs to assign to the user\n\n**Response Payload:**\n- user: The created user with all dependencies", "operationId": "post_public_admin_user_resource_collection", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateUser"}}], "tags": ["admin users"]}}, "/users/admin_users": {"get": {"responses": {"500": {"description": "Internal Server Error."}, "403": {"description": "Unauthorized"}, "401": {"description": "Unauthorized. API credentials required"}, "200": {"description": "Admin Users successfully fetched and returned"}}, "summary": "Get all admin users via admin API client", "description": "Lists all admin users\nRequires admin API key authentication.", "operationId": "get_public_admin_admin_users_resource_collection", "tags": ["admin users"]}, "post": {"responses": {"500": {"description": "Internal Server Error."}, "401": {"description": "Unauthorized. API credentials required."}, "400": {"description": "Bad Request. Possible issues could be missing required fields in payload."}, "201": {"description": "Admin user successfully created."}}, "summary": "Create a new admin user via admin API client", "description": "Creates admin user.\nRequires admin API key authentication.\n\n**Request Payload:**\n- **first_name:** (required) Admin user's first name\n- **last_name:** (optional) Admin user's last name\n- **email:** (required) Admin user's email address\n\n**Response Payload:**\n- admin_user: The created admin user", "operationId": "post_public_admin_admin_users_resource_collection", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateAdminUser"}}], "tags": ["admin users"]}}, "/users/current_user": {"get": {"responses": {"500": {"description": "Internal Server Error."}, "404": {"description": "Admin User not found."}, "401": {"description": "Unauthorized. API credentials required."}, "200": {"description": "Admin User successfully fetched and returned"}}, "summary": "Get current admin user info via admin API client", "description": "Get current admin user info\nRequires admin API key authentication.", "operationId": "get_public_admin_current_user_resource_instance", "tags": ["admin users"]}}, "/users/simple": {"get": {"responses": {"401": {"description": "Unauthorized. API credentials required"}, "200": {"description": "Test endpoint working"}}, "summary": "Simple test endpoint for admin API client", "description": "Simple test endpoint", "operationId": "get_public_admin_simple_user_resource", "tags": ["admin users"]}}, "/users/test": {"get": {"responses": {"401": {"description": "Unauthorized. API credentials required"}, "200": {"description": "Test endpoint working"}}, "summary": "Test endpoint for admin API client", "description": "Test endpoint", "operationId": "get_public_admin_test_user_resource", "tags": ["admin users"]}}, "/users/{cuid}": {"parameters": [{"name": "cuid", "in": "path", "required": true, "type": "string"}], "patch": {"responses": {"500": {"description": "Internal Server Error."}, "404": {"description": "User not found."}, "401": {"description": "Unauthorized. API credentials required."}, "400": {"description": "Bad Request. Possible issues could be missing or invalid fields in payload."}, "200": {"description": "User updated successfully."}}, "summary": "Update user via admin API client", "description": "Update a specific user by CUID\nRequires admin API key authentication.\n\n**Request Payload:**\n- **first_name:** (required) User's first name\n- **last_name:** (optional) User's last name\n- **job_title:** (optional) User's job title\n- **email:** (required) User's email address\n- **password:** (optional) User's new password\n- **organization:** (required) Organization details object:\n    - **organization_cuid:** (required) The CUID of the organization\n    - **roles:** (optional) List of role CUIDs to assign to the user\n\n**Response Payload:**\n- user: The updated user", "operationId": "patch_public_admin_user_resource_instance", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/PatchUser"}}], "tags": ["admin users"]}}, "/users/{user_cuid}/api_credentials/{api_key}": {"parameters": [{"name": "user_cuid", "in": "path", "required": true, "type": "string"}, {"name": "api_key", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"500": {"description": "Internal Server Error"}, "404": {"description": "User not found"}, "403": {"description": "Forbidden - API key not found or doesn't belong to user"}, "401": {"description": "Unauthorized. API credentials required"}, "200": {"description": "API credentials successfully regenerated"}}, "summary": "Revoke and regenerate API credentials for a user via admin API client", "description": "Revoke and regenerate API credentials for a user\nRequires admin API key authentication.\n\n**Parameters:**\n- **user_cuid:** (required) The CUID of the user\n- **api_key:** (required) The API key to revoke\n\n**Response Payload:**\n- client: The new client credentials", "operationId": "post_public_admin_user_api_credentials_resource", "tags": ["admin users"]}}}, "info": {"title": "ValidMind Admin V1 API", "version": "1.0", "description": "Admin API endpoints for organization and user management"}, "produces": ["application/json"], "consumes": ["application/json"], "tags": [{"name": "admin organizations", "description": "Admin Organizations API - requires admin API credentials"}, {"name": "admin users", "description": "Admin Users API - requires admin API credentials"}], "definitions": {"CreateOrganization": {"required": ["admin_user", "initial_templates", "name"], "properties": {"name": {"type": "string", "description": "Organization name"}, "demo_inventory_models": {"type": "array", "description": "List of demo models", "items": {"type": "string"}}, "initial_templates": {"description": "Dict of templates to load by template type", "allOf": [{"$ref": "#/definitions/InitialTemplates"}]}, "admin_user": {"description": "Admin user to assign to organization", "allOf": [{"$ref": "#/definitions/AdminUser"}]}}, "type": "object"}, "InitialTemplates": {"properties": {"model_documentation": {"type": "array", "description": "List of model documentation templates to load", "items": {"type": "string"}}, "validation_report": {"type": "array", "description": "List of validation report templates to load", "items": {"type": "string"}}, "monitoring": {"type": "array", "description": "List of monitoring templates to load", "items": {"type": "string"}}}, "type": "object"}, "AdminUser": {"required": ["email"], "properties": {"name": {"type": "string", "description": "Admin user's name"}, "email": {"type": "string", "description": "Admin user's email"}, "password": {"type": "string", "description": "Admin user's password"}}, "type": "object"}, "PatchOrganization": {"properties": {"name": {"type": "string", "description": "Organization name"}, "oidc_mappings": {"description": "OIDC Mappings for Organization", "allOf": [{"$ref": "#/definitions/OidcMappings"}]}}, "type": "object"}, "OidcMappings": {"required": ["role_mappings"], "properties": {"role_mappings": {"type": "object", "description": "Object with key / value mappings for roles"}}, "type": "object"}, "BootstrapOrganization": {"required": ["admin_user", "organization_name"], "properties": {"organization_name": {"type": "string", "description": "Organization name"}, "admin_user": {"description": "Admin user to assign to organization and admin app", "allOf": [{"$ref": "#/definitions/AdminUser"}]}}, "type": "object"}, "CreateUser": {"required": ["email", "first_name", "organization"], "properties": {"first_name": {"type": "string", "description": "User first name"}, "last_name": {"type": "string", "description": "User last name"}, "email": {"type": "string", "description": "User's email"}, "password": {"type": "string", "description": "User's password"}, "organization": {"description": "Organization details with CUID and roles", "allOf": [{"$ref": "#/definitions/OrganizationDetails"}]}}, "type": "object"}, "OrganizationDetails": {"required": ["organization_cuid"], "properties": {"organization_cuid": {"type": "string", "description": "Organization CUID"}, "roles": {"type": "array", "description": "List of role CUIDs to assign to the user", "items": {"type": "string"}}}, "type": "object"}, "PatchUser": {"required": ["email", "first_name", "organization"], "properties": {"first_name": {"type": "string", "description": "User first name"}, "last_name": {"type": "string", "description": "User last name"}, "job_title": {"type": "string", "description": "User job title"}, "email": {"type": "string", "description": "User's email"}, "password": {"type": "string", "description": "User's password"}, "organization": {"description": "Organization details with CUID and roles", "allOf": [{"$ref": "#/definitions/OrganizationDetails"}]}}, "type": "object"}, "CreateAdminUser": {"required": ["email", "first_name"], "properties": {"first_name": {"type": "string", "description": "Admin user first name"}, "last_name": {"type": "string", "description": "Admin user last name"}, "email": {"type": "string", "description": "Admin user's email"}}, "type": "object"}}, "responses": {"ParseError": {"description": "When a mask can't be parsed"}, "MaskError": {"description": "When any error occurs on mask"}}}
