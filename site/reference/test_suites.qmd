---
title: test_suites
toc-depth: 3
toc-expand: 3
sidebar: id-reference
---

Entrypoint for test suites.

- [classifier](test_suites/classifier.qmd)
- [cluster](test_suites/cluster.qmd)
- [embeddings](test_suites/embeddings.qmd)
- [llm](test_suites/llm.qmd)
- [nlp](test_suites/nlp.qmd)
- [parameters_optimization](test_suites/parameters_optimization.qmd)
- [regression](test_suites/regression.qmd)
- [statsmodels_timeseries](test_suites/statsmodels_timeseries.qmd)
- [summarization](test_suites/summarization.qmd)
- [tabular_datasets](test_suites/tabular_datasets.qmd)
- [text_data](test_suites/text_data.qmd)
- [time_series](test_suites/time_series.qmd)

## format_dataframe[()]{.muted}

```python
def format_dataframe(
    df: {'cls': 'ExprAttribute', 'values': [{'cls': 'ExprName', 'name': 'pd'}, {'cls': 'ExprName', 'name': 'DataFrame'}]}) -> {'cls': 'ExprAttribute', 'values': [{'cls': 'ExprName', 'name': 'pd'}, {'cls': 'ExprName', 'name': 'DataFrame'}]}:
```

Format a pandas DataFrame for display purposes

## get_logger[()]{.muted}

```python
def get_logger(
    name = 'validmind',    log_level = None):
```

Get a logger for the given module name

## test_id_to_name[()]{.muted}

```python
def test_id_to_name(
    test_id: {'cls': 'ExprName', 'name': 'str'}) -> {'cls': 'ExprName', 'name': 'str'}:
```

Convert a test ID to a human-readable name.

**Parameters**

- **test_id** str: The test identifier, typically in CamelCase or snake_case.

**Returns**

- A human-readable name derived from the test ID.

## describe_suite[()]{.muted}

```python
def describe_suite(
    test_suite_id: str,
    verbose = False):
```

Describes a Test Suite by ID

**Parameters**

- **test_suite_id**: Test Suite ID
- **verbose**: If True, describe all plans and tests in the Test Suite

**Returns**

- A formatted table with the Test Suite description

## get_by_id[()]{.muted}

```python
def get_by_id(
    test_suite_id: str):
```

Returns the test suite by ID

## list_suites[()]{.muted}

```python
def list_suites(
    pretty: bool = True):
```

Returns a list of all available test suites

## register_test_suite[()]{.muted}

```python
def register_test_suite(
    suite_id: str,
    suite: TestSuite):
```

Registers a custom test suite

## [class]{.muted} ClassifierDiagnosis

```python
class ClassifierDiagnosis(TestSuite):
```

Test suite for sklearn classifier model diagnosis tests

**Inherited members**

## [class]{.muted} ClassifierFullSuite

```python
class ClassifierFullSuite(TestSuite):
```

Full test suite for binary classification models.

**Inherited members**

## [class]{.muted} ClassifierMetrics

```python
class ClassifierMetrics(TestSuite):
```

Test suite for sklearn classifier metrics

**Inherited members**

## [class]{.muted} ClassifierModelValidation

```python
class ClassifierModelValidation(TestSuite):
```

Test suite for binary classification models.

**Inherited members**

## [class]{.muted} ClassifierPerformance

```python
class ClassifierPerformance(TestSuite):
```

Test suite for sklearn classifier models

**Inherited members**

## [class]{.muted} ClusterFullSuite

```python
class ClusterFullSuite(TestSuite):
```

Full test suite for clustering models.

**Inherited members**

## [class]{.muted} ClusterMetrics

```python
class ClusterMetrics(TestSuite):
```

Test suite for sklearn clustering metrics

**Inherited members**

## [class]{.muted} ClusterPerformance

```python
class ClusterPerformance(TestSuite):
```

Test suite for sklearn cluster performance

**Inherited members**

## [class]{.muted} EmbeddingsFullSuite

```python
class EmbeddingsFullSuite(TestSuite):
```

Full test suite for embeddings models.

**Inherited members**

## [class]{.muted} EmbeddingsMetrics

```python
class EmbeddingsMetrics(TestSuite):
```

Test suite for embeddings metrics

**Inherited members**

## [class]{.muted} EmbeddingsPerformance

```python
class EmbeddingsPerformance(TestSuite):
```

Test suite for embeddings model performance

**Inherited members**

## [class]{.muted} KmeansParametersOptimization

```python
class KmeansParametersOptimization(TestSuite):
```

Test suite for sklearn hyperparameters optimization

**Inherited members**

## [class]{.muted} LLMClassifierFullSuite

```python
class LLMClassifierFullSuite(TestSuite):
```

Full test suite for LLM classification models.

**Inherited members**

## [class]{.muted} NLPClassifierFullSuite

```python
class NLPClassifierFullSuite(TestSuite):
```

Full test suite for NLP classification models.

**Inherited members**

## [class]{.muted} PromptValidation

```python
class PromptValidation(TestSuite):
```

Test suite for prompt validation

**Inherited members**

## [class]{.muted} RegressionFullSuite

```python
class RegressionFullSuite(TestSuite):
```

Full test suite for regression models.

**Inherited members**

## [class]{.muted} RegressionMetrics

```python
class RegressionMetrics(TestSuite):
```

Test suite for performance metrics of regression metrics

**Inherited members**

## [class]{.muted} RegressionModelDescription

```python
class RegressionModelDescription(TestSuite):
```

Test suite for performance metric of regression model of statsmodels library

**Inherited members**

## [class]{.muted} RegressionModelsEvaluation

```python
class RegressionModelsEvaluation(TestSuite):
```

Test suite for metrics comparison of regression model of statsmodels library

**Inherited members**

## [class]{.muted} RegressionPerformance

```python
class RegressionPerformance(TestSuite):
```

Test suite for regression model performance

**Inherited members**

## [class]{.muted} SummarizationMetrics

```python
class SummarizationMetrics(TestSuite):
```

Test suite for Summarization metrics

**Inherited members**

## [class]{.muted} TabularDataQuality

```python
class TabularDataQuality(TestSuite):
```

Test suite for data quality on tabular datasets

**Inherited members**

## [class]{.muted} TabularDataset

```python
class TabularDataset(TestSuite):
```

Test suite for tabular datasets.

**Inherited members**

## [class]{.muted} TabularDatasetDescription

```python
class TabularDatasetDescription(TestSuite):
```

Test suite to extract metadata and descriptive statistics from a tabular dataset

**Inherited members**

## [class]{.muted} TextDataQuality

```python
class TextDataQuality(TestSuite):
```

Test suite for data quality on text data

**Inherited members**

## [class]{.muted} TimeSeriesDataQuality

```python
class TimeSeriesDataQuality(TestSuite):
```

Test suite for data quality on time series datasets

**Inherited members**

## [class]{.muted} TimeSeriesDataset

```python
class TimeSeriesDataset(TestSuite):
```

Test suite for time series datasets.

**Inherited members**

## [class]{.muted} TimeSeriesModelValidation

```python
class TimeSeriesModelValidation(TestSuite):
```

Test suite for time series model validation.

**Inherited members**

## [class]{.muted} TimeSeriesMultivariate

```python
class TimeSeriesMultivariate(TestSuite):
```

This test suite provides a preliminary understanding of the features and relationship in multivariate dataset. It presents various multivariate visualizations that can help identify patterns, trends, and relationships between pairs of variables. The visualizations are designed to explore the relationships between multiple features simultaneously. They allow you to quickly identify any patterns or trends in the data, as well as any potential outliers or anomalies. The individual feature distribution can also be explored to provide insight into the range and frequency of values observed in the data. This multivariate analysis test suite aims to provide an overview of the data structure and guide further exploration and modeling.

**Inherited members**

## [class]{.muted} TimeSeriesUnivariate

```python
class TimeSeriesUnivariate(TestSuite):
```

This test suite provides a preliminary understanding of the target variable(s) used in the time series dataset. It visualizations that present the raw time series data and a histogram of the target variable(s).

The raw time series data provides a visual inspection of the target variable's behavior over time. This helps to identify any patterns or trends in the data, as well as any potential outliers or anomalies. The histogram of the target variable displays the distribution of values, providing insight into the range and frequency of values observed in the data.

**Inherited members**
