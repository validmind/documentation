---
title: "[validmind](/reference/validmind.html).Mentions"
sidebar: validmind-reference
toc-depth: 4
toc-expand: 4
---

## Mentions[()]{.muted}

<!-- function.qmd.jinja2 - function signature -->

```python
def Mentions(
    dataset: VMDataset,
    top_mentions: int = 25):
```

Calculates and visualizes frequencies of '@' prefixed mentions in a text-based dataset for NLP model analysis.

### Purpose

The "Mentions" test is designed to gauge the quality of data in a Natural Language Processing (NLP) or text-focused Machine Learning model. The primary objective is to identify and calculate the frequency of 'mentions' within a chosen text column of a dataset. A 'mention' in this context refers to individual text elements that are prefixed by '@'. The output of this test reveals the most frequently mentioned entities or usernames, which can be integral for applications such as social media analyses or customer sentiment analyses.

### Test Mechanism

The test first verifies the existence of a text column in the provided dataset. It then employs a regular expression pattern to extract mentions from the text. Subsequently, the frequency of each unique mention is calculated. The test selects the most frequent mentions based on default or user-defined parameters, the default being the top 25, for representation. This process of thresholding forms the core of the test. A treemap plot visualizes the test results, where the size of each rectangle corresponds to the frequency of a particular mention.

### Signs of High Risk

- The lack of a valid text column in the dataset, which would result in the failure of the test execution.
- The absence of any mentions within the text data, indicating that there might not be any text associated with '@'. This situation could point toward sparse or poor-quality data, thereby hampering the model's generalization or learning capabilities.

### Strengths

- The test is specifically optimized for text-based datasets which gives it distinct power in the context of NLP.
- It enables quick identification and visually appealing representation of the predominant elements or mentions.
- It can provide crucial insights about the most frequently mentioned entities or usernames.

### Limitations

- The test only recognizes mentions that are prefixed by '@', hence useful textual aspects not preceded by '@' might be ignored.
- This test isn't suited for datasets devoid of textual data.
- It does not provide insights on less frequently occurring data or outliers, which means potentially significant patterns could be overlooked.

## [class]{.muted} SkipTestError

<!-- class.qmd.jinja2 - class definition -->

```python
class SkipTestError(BaseError):
```

Useful error to throw when a test cannot be executed.

**Inherited members**

- **From BaseError**: [class BaseError[()]{.muted}](#class-baseerror), [__init__[()]{.muted}](#__init__), [__str__[()]{.muted}](#__str__), [description[()]{.muted}](#description)
- **From builtins.BaseException**: with_traceback, add_note
