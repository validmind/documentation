# errors { #validmind.errors }

`errors`

This module contains all the custom errors that are used in the ValidMind Library.

The following base errors are defined for others:
- BaseError
- APIRequestError

## Classes

| Name | Description |
| --- | --- |
| [APIRequestError](#validmind.errors.APIRequestError) | Generic error for API request errors that are not known. |
| [GetTestSuiteError](#validmind.errors.GetTestSuiteError) | When the test suite could not be found. |
| [InitializeTestSuiteError](#validmind.errors.InitializeTestSuiteError) | When the test suite was found but could not be initialized. |
| [InvalidContentIdPrefixError](#validmind.errors.InvalidContentIdPrefixError) | When an invalid text content_id is sent to the API. |
| [InvalidInputError](#validmind.errors.InvalidInputError) | When an invalid input object. |
| [InvalidMetricResultsError](#validmind.errors.InvalidMetricResultsError) | When an invalid metric results object is sent to the API. |
| [InvalidRequestBodyError](#validmind.errors.InvalidRequestBodyError) | When a POST/PUT request is made with an invalid request body. |
| [InvalidTestParametersError](#validmind.errors.InvalidTestParametersError) | When an invalid parameters for the test. |
| [InvalidTestResultsError](#validmind.errors.InvalidTestResultsError) | When an invalid test results object is sent to the API. |
| [InvalidTextObjectError](#validmind.errors.InvalidTextObjectError) | When an invalid Metadat (Text) object is sent to the API. |
| [InvalidValueFormatterError](#validmind.errors.InvalidValueFormatterError) | When an invalid value formatter is provided when serializing results. |
| [InvalidXGBoostTrainedModelError](#validmind.errors.InvalidXGBoostTrainedModelError) | When an invalid XGBoost trained model is used when calling init_r_model. |
| [LoadTestError](#validmind.errors.LoadTestError) | Exception raised when an error occurs while loading a test |
| [MismatchingClassLabelsError](#validmind.errors.MismatchingClassLabelsError) | When the class labels found in the dataset don't match the provided target labels. |
| [MissingCacheResultsArgumentsError](#validmind.errors.MissingCacheResultsArgumentsError) | When the cache_results function is missing arguments. |
| [MissingClassLabelError](#validmind.errors.MissingClassLabelError) | When the one or more class labels are missing from provided dataset targets. |
| [MissingDependencyError](#validmind.errors.MissingDependencyError) | When a required dependency is missing. |
| [MissingDocumentationTemplate](#validmind.errors.MissingDocumentationTemplate) | When the client config is missing the documentation template. |
| [MissingOrInvalidModelPredictFnError](#validmind.errors.MissingOrInvalidModelPredictFnError) | When the pytorch model is missing a predict function or its predict |
| [MissingRExtrasError](#validmind.errors.MissingRExtrasError) | When the R extras have not been installed. |
| [MissingRequiredTestInputError](#validmind.errors.MissingRequiredTestInputError) | When a required test context variable is missing. |
| [MissingTextContentIdError](#validmind.errors.MissingTextContentIdError) | When a Text object is sent to the API without a content_id. |
| [MissingTextContentsError](#validmind.errors.MissingTextContentsError) | When a Text object is sent to the API without a "text" attribute. |
| [SkipTestError](#validmind.errors.SkipTestError) | Useful error to throw when a test cannot be executed. |
| [TestInputInvalidDatasetError](#validmind.errors.TestInputInvalidDatasetError) | When an invalid dataset is used in a test context. |
| [UnsupportedColumnTypeError](#validmind.errors.UnsupportedColumnTypeError) | When an unsupported column type is found on a dataset. |
| [UnsupportedDatasetError](#validmind.errors.UnsupportedDatasetError) | When an unsupported dataset is used. |
| [UnsupportedFigureError](#validmind.errors.UnsupportedFigureError) | When an unsupported figure object is constructed. |
| [UnsupportedModelError](#validmind.errors.UnsupportedModelError) | When an unsupported model is used. |
| [UnsupportedModelForSHAPError](#validmind.errors.UnsupportedModelForSHAPError) | When an unsupported model is used for SHAP importance. |
| [UnsupportedRModelError](#validmind.errors.UnsupportedRModelError) | When an unsupported R model is used. |

### APIRequestError { #validmind.errors.APIRequestError }

```python
errors.APIRequestError(self, message='')
```

Generic error for API request errors that are not known.

### GetTestSuiteError { #validmind.errors.GetTestSuiteError }

```python
errors.GetTestSuiteError(self, message='')
```

When the test suite could not be found.

### InitializeTestSuiteError { #validmind.errors.InitializeTestSuiteError }

```python
errors.InitializeTestSuiteError(self, message='')
```

When the test suite was found but could not be initialized.

### InvalidContentIdPrefixError { #validmind.errors.InvalidContentIdPrefixError }

```python
errors.InvalidContentIdPrefixError(self, message='')
```

When an invalid text content_id is sent to the API.

### InvalidInputError { #validmind.errors.InvalidInputError }

```python
errors.InvalidInputError(self, message='')
```

When an invalid input object.

### InvalidMetricResultsError { #validmind.errors.InvalidMetricResultsError }

```python
errors.InvalidMetricResultsError(self, message='')
```

When an invalid metric results object is sent to the API.

### InvalidRequestBodyError { #validmind.errors.InvalidRequestBodyError }

```python
errors.InvalidRequestBodyError(self, message='')
```

When a POST/PUT request is made with an invalid request body.

### InvalidTestParametersError { #validmind.errors.InvalidTestParametersError }

```python
errors.InvalidTestParametersError(self, message='')
```

When an invalid parameters for the test.

### InvalidTestResultsError { #validmind.errors.InvalidTestResultsError }

```python
errors.InvalidTestResultsError(self, message='')
```

When an invalid test results object is sent to the API.

### InvalidTextObjectError { #validmind.errors.InvalidTextObjectError }

```python
errors.InvalidTextObjectError(self, message='')
```

When an invalid Metadat (Text) object is sent to the API.

### InvalidValueFormatterError { #validmind.errors.InvalidValueFormatterError }

```python
errors.InvalidValueFormatterError(self, message='')
```

When an invalid value formatter is provided when serializing results.

### InvalidXGBoostTrainedModelError { #validmind.errors.InvalidXGBoostTrainedModelError }

```python
errors.InvalidXGBoostTrainedModelError(self, message='')
```

When an invalid XGBoost trained model is used when calling init_r_model.

### LoadTestError { #validmind.errors.LoadTestError }

```python
errors.LoadTestError(self, message, original_error=None)
```

Exception raised when an error occurs while loading a test

### MismatchingClassLabelsError { #validmind.errors.MismatchingClassLabelsError }

```python
errors.MismatchingClassLabelsError(self, message='')
```

When the class labels found in the dataset don't match the provided target labels.

### MissingCacheResultsArgumentsError { #validmind.errors.MissingCacheResultsArgumentsError }

```python
errors.MissingCacheResultsArgumentsError(self, message='')
```

When the cache_results function is missing arguments.

### MissingClassLabelError { #validmind.errors.MissingClassLabelError }

```python
errors.MissingClassLabelError(self, message='')
```

When the one or more class labels are missing from provided dataset targets.

### MissingDependencyError { #validmind.errors.MissingDependencyError }

```python
errors.MissingDependencyError(
    self,
    message='',
    required_dependencies=None,
    extra=None,
)
```

When a required dependency is missing.

### MissingDocumentationTemplate { #validmind.errors.MissingDocumentationTemplate }

```python
errors.MissingDocumentationTemplate(self, message='')
```

When the client config is missing the documentation template.

### MissingOrInvalidModelPredictFnError { #validmind.errors.MissingOrInvalidModelPredictFnError }

```python
errors.MissingOrInvalidModelPredictFnError(self, message='')
```

When the pytorch model is missing a predict function or its predict
method does not have the expected arguments.

### MissingRExtrasError { #validmind.errors.MissingRExtrasError }

```python
errors.MissingRExtrasError(self, message='')
```

When the R extras have not been installed.

### MissingRequiredTestInputError { #validmind.errors.MissingRequiredTestInputError }

```python
errors.MissingRequiredTestInputError(self, message='')
```

When a required test context variable is missing.

### MissingTextContentIdError { #validmind.errors.MissingTextContentIdError }

```python
errors.MissingTextContentIdError(self, message='')
```

When a Text object is sent to the API without a content_id.

### MissingTextContentsError { #validmind.errors.MissingTextContentsError }

```python
errors.MissingTextContentsError(self, message='')
```

When a Text object is sent to the API without a "text" attribute.

### SkipTestError { #validmind.errors.SkipTestError }

```python
errors.SkipTestError(self, message='')
```

Useful error to throw when a test cannot be executed.

### TestInputInvalidDatasetError { #validmind.errors.TestInputInvalidDatasetError }

```python
errors.TestInputInvalidDatasetError(self, message='')
```

When an invalid dataset is used in a test context.

### UnsupportedColumnTypeError { #validmind.errors.UnsupportedColumnTypeError }

```python
errors.UnsupportedColumnTypeError(self, message='')
```

When an unsupported column type is found on a dataset.

### UnsupportedDatasetError { #validmind.errors.UnsupportedDatasetError }

```python
errors.UnsupportedDatasetError(self, message='')
```

When an unsupported dataset is used.

### UnsupportedFigureError { #validmind.errors.UnsupportedFigureError }

```python
errors.UnsupportedFigureError(self, message='')
```

When an unsupported figure object is constructed.

### UnsupportedModelError { #validmind.errors.UnsupportedModelError }

```python
errors.UnsupportedModelError(self, message='')
```

When an unsupported model is used.

### UnsupportedModelForSHAPError { #validmind.errors.UnsupportedModelForSHAPError }

```python
errors.UnsupportedModelForSHAPError(self, message='')
```

When an unsupported model is used for SHAP importance.

### UnsupportedRModelError { #validmind.errors.UnsupportedRModelError }

```python
errors.UnsupportedRModelError(self, message='')
```

When an unsupported R model is used.

## Functions

| Name | Description |
| --- | --- |
| [raise_api_error](#validmind.errors.raise_api_error) | Safely try to parse JSON from the response message in case the API |
| [should_raise_on_fail_fast](#validmind.errors.should_raise_on_fail_fast) | Determine whether an error should be raised when fail_fast is True. |

### raise_api_error { #validmind.errors.raise_api_error }

```python
errors.raise_api_error(error_string)
```

Safely try to parse JSON from the response message in case the API
returns a non-JSON string or if the API returns a non-standard error

### should_raise_on_fail_fast { #validmind.errors.should_raise_on_fail_fast }

```python
errors.should_raise_on_fail_fast(error)
```

Determine whether an error should be raised when fail_fast is True.