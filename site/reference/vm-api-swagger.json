{"swagger": "2.0", "basePath": "/vm/api/v1", "paths": {"/groups": {"get": {"responses": {"500": {"description": "Internal server error"}, "403": {"description": "Authorization failed"}, "401": {"description": "Authentication failed"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ClientPaginatedGroupsResponse"}}}, "summary": "Get paginated list of groups accessible to the API client", "description": "Uses API key authentication and rate limiting.", "operationId": "Get paginated list of groups for API client", "parameters": [{"name": "page", "in": "query", "type": "integer", "description": "Page number", "default": 1}, {"name": "limit", "in": "query", "type": "integer", "description": "Items per page", "default": 100}, {"name": "search", "in": "query", "type": "string", "description": "Search term"}, {"name": "sort_by", "in": "query", "type": "string", "description": "Sort field", "default": "name"}, {"name": "sort_order", "in": "query", "type": "string", "description": "Sort order", "default": "asc"}, {"name": "is_default", "in": "query", "type": "boolean", "description": "Filter by default groups"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["groups"]}, "post": {"responses": {"500": {"description": "Internal server error"}, "403": {"description": "Authorization failed"}, "401": {"description": "Authentication failed"}, "400": {"description": "Bad request - validation error"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ClientGroupResponse"}}}, "summary": "Create a new group via API client", "description": "Uses API key authentication and rate limiting.", "operationId": "Create a new group via API client", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ClientCreateGroupRequest"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["groups"]}}, "/groups/{cuid}": {"parameters": [{"name": "cuid", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"500": {"description": "Internal server error"}, "404": {"description": "Group not found"}, "403": {"description": "Authorization failed"}, "401": {"description": "Authentication failed"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ClientGroupResponse"}}}, "summary": "Get a specific group by CUID via API client", "description": "Uses API key authentication and rate limiting.", "operationId": "Get a specific group by CUID via API client", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["groups"]}, "delete": {"responses": {"500": {"description": "Internal server error"}, "404": {"description": "Group not found"}, "403": {"description": "Authorization failed"}, "401": {"description": "Authentication failed"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ClientGroupResponse"}}}, "summary": "Delete a specific group by CUID via API client", "description": "Uses API key authentication and rate limiting.", "operationId": "Delete a group via API client", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["groups"]}, "patch": {"responses": {"500": {"description": "Internal server error"}, "404": {"description": "Group not found"}, "403": {"description": "Authorization failed"}, "401": {"description": "Authentication failed"}, "400": {"description": "Bad request - validation error"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ClientGroupResponse"}}}, "summary": "Update a specific group by CUID via API client", "description": "Uses API key authentication and rate limiting.", "operationId": "Update a group via API client", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ClientUpdateGroupRequest"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["groups"]}}, "/groups/{cuid}/resources": {"parameters": [{"name": "cuid", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success"}}, "summary": "Get resources in a specific group via API client", "description": "Uses API key authentication and rate limiting.", "operationId": "Get resources in a group via API client", "tags": ["groups"]}, "post": {"responses": {"200": {"description": "Success"}}, "summary": "Add resources to a specific group via API client", "description": "Uses API key authentication and rate limiting.", "operationId": "Add resources to a group via API client", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ClientGroupResourcesRequest"}}], "tags": ["groups"]}, "delete": {"responses": {"200": {"description": "Success"}}, "summary": "Remove resources from a specific group via API client", "description": "Uses API key authentication and rate limiting.", "operationId": "Remove resources from a group via API client", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ClientGroupResourcesRequest"}}], "tags": ["groups"]}}, "/groups/{cuid}/users": {"parameters": [{"name": "cuid", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success"}}, "summary": "Get users in a specific group via API client", "description": "Uses API key authentication and rate limiting.", "operationId": "Get users in a group via API client", "tags": ["groups"]}, "post": {"responses": {"200": {"description": "Success"}}, "summary": "Add users to a specific group via API client", "description": "Uses API key authentication and rate limiting.", "operationId": "Add users to a group via API client", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ClientGroupUsersRequest"}}], "tags": ["groups"]}, "delete": {"responses": {"200": {"description": "Success"}}, "summary": "Remove users from a specific group via API client", "description": "Uses API key authentication and rate limiting.", "operationId": "Remove users from a group via API client", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ClientGroupUsersRequest"}}], "tags": ["groups"]}}, "/health": {"get": {"responses": {"200": {"description": "Success"}}, "summary": "Health check endpoint for client API", "operationId": "Health check endpoint for client API", "tags": ["models"]}}, "/models": {"get": {"responses": {"500": {"description": "Internal server error"}, "403": {"description": "Authorization failed"}, "401": {"description": "Authentication failed"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ClientPaginatedModelsResponse"}}}, "summary": "Get paginated list of models accessible to the API client", "description": "Uses API key authentication and rate limiting.", "operationId": "Get paginated list of models for API client", "parameters": [{"name": "page", "in": "query", "type": "integer", "description": "Page number", "default": 1}, {"name": "limit", "in": "query", "type": "integer", "description": "Items per page", "default": 100}, {"name": "search", "in": "query", "type": "string", "description": "Search term"}, {"name": "sort_by", "in": "query", "type": "string", "description": "Sort field", "default": "name"}, {"name": "sort_order", "in": "query", "type": "string", "description": "Sort order", "default": "asc"}, {"name": "tiering", "in": "query", "type": "string", "description": "Tiering filter"}, {"name": "business_units", "in": "query", "type": "string", "description": "Business unit filter (cuid csv)"}, {"name": "status", "in": "query", "type": "string", "description": "Status filter (cuid csv)"}, {"name": "uses", "in": "query", "type": "string", "description": "Uses filter"}, {"name": "owners", "in": "query", "type": "string", "description": "Owners filter (cuid csv)"}, {"name": "developers", "in": "query", "type": "string", "description": "Developers filter (cuid csv)"}, {"name": "validators", "in": "query", "type": "string", "description": "Validators filter (cuid csv)"}, {"name": "is_vendor_model", "in": "query", "type": "boolean", "description": "Vendor model filter (boolean)"}, {"name": "is_archived", "in": "query", "type": "string", "description": "Archived filter (boolean)", "default": "false"}, {"name": "is_deleted", "in": "query", "type": "string", "description": "Deleted filter (boolean)", "default": "false"}, {"name": "cuids", "in": "query", "type": "string", "description": "CUIDs (used for filtering models by clicking on a chart)"}, {"name": "format", "in": "query", "type": "string", "description": "Response format (json or csv)", "default": "json", "enum": ["json", "csv"]}, {"name": "columns", "in": "query", "type": "string", "description": "Columns to include in the response (csv)"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["models"]}, "post": {"responses": {"500": {"description": "Internal server error"}, "403": {"description": "Authorization failed"}, "401": {"description": "Authentication failed"}, "400": {"description": "Bad request - validation error"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ClientModelResponse"}}}, "summary": "Create a new inventory model via API client", "description": "Uses API key authentication and rate limiting.", "operationId": "Create a new model via API client", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ClientCreateModelRequest"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["models"]}}, "/models/filters": {"get": {"responses": {"500": {"description": "Internal server error"}, "403": {"description": "Authorization failed"}, "401": {"description": "Authentication failed"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ClientFiltersResponse"}}}, "summary": "Get available filters for inventory models via API client", "description": "Uses API key authentication and rate limiting.", "operationId": "Get available filters for models", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["models"]}}, "/models/{model_cuid}": {"parameters": [{"name": "model_cuid", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"500": {"description": "Internal server error"}, "404": {"description": "Model not found"}, "403": {"description": "Authorization failed"}, "401": {"description": "Authentication failed"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ClientModelResponse"}}}, "summary": "Get a specific model by CUID via API client", "description": "Uses API key authentication and rate limiting.", "operationId": "Get a specific model by CUID", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["models"]}}, "/organization/business-units": {"get": {"responses": {"500": {"description": "Internal server error"}, "403": {"description": "Authorization failed"}, "401": {"description": "Authentication failed"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ClientPaginatedBusinessUnitsResponse"}}}, "summary": "Get paginated list of business units accessible to the API client", "description": "Uses API key authentication and rate limiting.", "operationId": "Get paginated list of business units for API client", "parameters": [{"name": "page", "in": "query", "type": "integer", "description": "Page number", "default": 1}, {"name": "limit", "in": "query", "type": "integer", "description": "Items per page", "default": 100}, {"name": "search", "in": "query", "type": "string", "description": "Search term"}, {"name": "sort_by", "in": "query", "type": "string", "description": "Sort field", "default": "name"}, {"name": "sort_order", "in": "query", "type": "string", "description": "Sort order", "default": "asc"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["business units"]}, "post": {"responses": {"500": {"description": "Internal server error"}, "403": {"description": "Authorization failed"}, "401": {"description": "Authentication failed"}, "400": {"description": "Bad request - validation error"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ClientBusinessUnitResponse"}}}, "summary": "Create a new business unit via API client", "description": "Uses API key authentication and rate limiting.", "operationId": "Create a new business unit via API client", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ClientCreateBusinessUnitRequest"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["business units"]}}, "/organization/business-units/{cuid}": {"parameters": [{"name": "cuid", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"500": {"description": "Internal server error"}, "404": {"description": "Business unit not found"}, "403": {"description": "Authorization failed"}, "401": {"description": "Authentication failed"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ClientBusinessUnitResponse"}}}, "summary": "Get a specific business unit by CUID via API client", "description": "Uses API key authentication and rate limiting.", "operationId": "Get a specific business unit by CUID via API client", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["business units"]}, "delete": {"responses": {"500": {"description": "Internal server error"}, "404": {"description": "Business unit not found"}, "403": {"description": "Authorization failed"}, "401": {"description": "Authentication failed"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ClientBusinessUnitResponse"}}}, "summary": "Delete a business unit via API client", "description": "Uses API key authentication and rate limiting.", "operationId": "Delete a business unit via API client", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["business units"]}, "patch": {"responses": {"500": {"description": "Internal server error"}, "404": {"description": "Business unit not found"}, "403": {"description": "Authorization failed"}, "401": {"description": "Authentication failed"}, "400": {"description": "Bad request - validation error"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ClientBusinessUnitResponse"}}}, "summary": "Update a business unit via API client", "description": "Uses API key authentication and rate limiting.", "operationId": "Update a business unit via API client", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ClientUpdateBusinessUnitRequest"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["business units"]}}, "/organization/templates": {"get": {"responses": {"500": {"description": "Internal server error"}, "403": {"description": "Authorization failed"}, "401": {"description": "Authentication failed"}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/ClientTemplateResponse"}}}}, "summary": "Get list of templates accessible to the API client", "description": "Uses API key authentication and rate limiting.", "operationId": "Get list of templates for API client", "parameters": [{"name": "include_copies", "in": "query", "type": "boolean", "description": "Include copies of templates"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["templates"]}}, "/organization/templates/{cuid}": {"parameters": [{"name": "cuid", "in": "path", "required": true, "type": "string"}], "put": {"responses": {"500": {"description": "Internal server error"}, "404": {"description": "Template not found"}, "403": {"description": "Authorization failed"}, "401": {"description": "Authentication failed"}, "400": {"description": "Bad request - validation error"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ClientTemplateWithVersionResponse"}}}, "summary": "Update a template via API client", "description": "Uses API key authentication and rate limiting.", "operationId": "Update a template via API client", "parameters": [{"name": "version", "in": "query", "type": "string", "description": "Version number", "default": "latest"}, {"name": "type", "in": "query", "type": "string", "description": "Template type"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["templates"]}, "get": {"responses": {"500": {"description": "Internal server error"}, "404": {"description": "Template not found"}, "403": {"description": "Authorization failed"}, "401": {"description": "Authentication failed"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ClientTemplateWithVersionResponse"}}}, "summary": "Get a specific template by CUID via API client", "description": "Uses API key authentication and rate limiting.", "operationId": "Get a specific template by CUID via API client", "parameters": [{"name": "version", "in": "query", "type": "string", "description": "Version number", "default": "latest"}, {"name": "type", "in": "query", "type": "string", "description": "Template type"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["templates"]}}, "/organization/templates/{cuid}/validate": {"parameters": [{"name": "cuid", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"500": {"description": "Internal server error"}, "404": {"description": "Template not found"}, "403": {"description": "Authorization failed"}, "401": {"description": "Authentication failed"}, "200": {"description": "Success"}}, "summary": "Validate JSON template via API client", "description": "Uses API key authentication and rate limiting.", "operationId": "Validate JSON template via API client", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ClientValidateTemplateRequest"}}], "tags": ["templates"]}}, "/organization/templates/{cuid}/version/{version_cuid}/duplicate": {"parameters": [{"name": "cuid", "in": "path", "required": true, "type": "string"}, {"name": "version_cuid", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"500": {"description": "Internal server error"}, "404": {"description": "Template or Template Version not found"}, "403": {"description": "Authorization failed"}, "401": {"description": "Authentication failed"}, "400": {"description": "Bad request - validation error"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ClientTemplateWithVersionResponse"}}}, "summary": "Duplicate template with given template version via API client", "description": "Uses API key authentication and rate limiting.", "operationId": "Duplicate template via API client", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ClientDuplicateTemplateRequest"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["templates"]}}, "/organization/templates/{cuid}/version/{version_cuid}/models": {"parameters": [{"name": "cuid", "in": "path", "required": true, "type": "string"}, {"name": "version_cuid", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"500": {"description": "Internal server error"}, "404": {"description": "Template version not found"}, "403": {"description": "Authorization failed"}, "401": {"description": "Authentication failed"}, "200": {"description": "Success"}}, "summary": "Get a list of models used by the template version via API client", "description": "Uses API key authentication and rate limiting.", "operationId": "Get models used by template version via API client", "tags": ["templates"]}}, "/organization/use-case/categories": {"get": {"responses": {"500": {"description": "Internal server error"}, "403": {"description": "Authorization failed"}, "401": {"description": "Authentication failed"}}, "operationId": "Fetch a paginated list of use_case categories for the organization (public API)", "parameters": [{"name": "page", "in": "query", "type": "integer", "description": "Page number for the categories list", "default": 1}, {"name": "limit", "in": "query", "type": "integer", "description": "Number of categories per page", "default": 100}, {"name": "sort_by", "in": "query", "type": "string", "description": "Sort by this field", "default": "name", "enum": ["name", "parent", "order"]}, {"name": "sort_order", "in": "query", "type": "string", "description": "Sort order", "default": "asc", "enum": ["asc", "desc"]}, {"name": "search", "in": "query", "type": "string", "description": "Search for categories by name"}], "tags": ["use cases"]}, "post": {"responses": {"200": {"description": "Success"}}, "operationId": "Create a new use case category for the organization (public API)", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ClientCreateUseCaseCategoryRequest"}}], "tags": ["use cases"]}}, "/organization/use-case/category/{use_case_category_cuid}": {"parameters": [{"name": "use_case_category_cuid", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"404": {"description": "Category not found"}, "200": {"description": "Success"}}, "description": "Fetch an organization use case category by cuid (public API)", "operationId": "get_use_case_category_resource_instance", "tags": ["use cases"]}, "delete": {"responses": {"404": {"description": "Organization or UseCaseCategory not found"}, "200": {"description": "Success"}}, "description": "Delete a use case category by cuid (public API)", "operationId": "delete_use_case_category_resource_instance", "tags": ["use cases"]}, "patch": {"responses": {"404": {"description": "Organization or UseCaseCategory not found"}, "200": {"description": "Success"}}, "description": "Update a use case category by cuid (public API)", "operationId": "patch_use_case_category_resource_instance", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ClientUpdateUseCaseCategoryRequest"}}], "tags": ["use cases"]}}, "/organization/use-case/{use_case_cuid}": {"parameters": [{"name": "use_case_cuid", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"404": {"description": "Use case not found"}, "200": {"description": "Success"}}, "description": "Fetch a use case by cuid (public API)", "operationId": "get_use_case_resource_instance", "tags": ["use cases"]}, "delete": {"responses": {"404": {"description": "Organization or Use case not found"}, "200": {"description": "Success"}}, "description": "Delete a use case by cuid (public API)", "operationId": "delete_use_case_resource_instance", "tags": ["use cases"]}, "patch": {"responses": {"404": {"description": "Organization or Use case not found"}, "200": {"description": "Success"}}, "description": "Update a use case by cuid (public API)", "operationId": "patch_use_case_resource_instance", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ClientUpdateUseCaseRequest"}}], "tags": ["use cases"]}}, "/organization/use-cases": {"get": {"responses": {"500": {"description": "Internal server error"}, "403": {"description": "Authorization failed"}, "401": {"description": "Authentication failed"}}, "operationId": "Fetch a paginated list of use_cases for the organization (public API)", "parameters": [{"name": "page", "in": "query", "type": "integer", "description": "Page number for the use_cases list", "default": 1}, {"name": "limit", "in": "query", "type": "integer", "description": "Number of use_cases per page", "default": 100}, {"name": "sort_by", "in": "query", "type": "string", "description": "Sort by this field", "default": "name", "enum": ["name", "category_id"]}, {"name": "sort_order", "in": "query", "type": "string", "description": "Sort order", "default": "asc", "enum": ["asc", "desc"]}, {"name": "search", "in": "query", "type": "string", "description": "Search for use_cases by name"}], "tags": ["use cases"]}, "post": {"responses": {"200": {"description": "Success"}}, "operationId": "Create a new use case for the organization (public API)", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ClientCreateUseCaseRequest"}}], "tags": ["use cases"]}}, "/test-auth": {"get": {"responses": {"500": {"description": "Internal server error"}, "401": {"description": "Authentication failed"}}, "summary": "Test endpoint to verify API authentication is working", "operationId": "Test endpoint to verify API authentication", "tags": ["models"]}}}, "info": {"title": "ValidMind Public API", "version": "1.0", "description": "Public API for client applications"}, "produces": ["application/json"], "consumes": ["application/json"], "tags": [{"name": "models", "description": "Public API for inventory models"}, {"name": "groups", "description": "Client API for groups"}, {"name": "business units", "description": "Client API for business units"}, {"name": "use cases", "description": "Public API for use cases"}, {"name": "templates", "description": "Client API for templates"}], "definitions": {"ClientCreateModelRequest": {"required": ["business_unit_cuid", "custom_fields", "group_cuid", "is_vendor_model", "name", "purpose", "template_cuid", "tiering"], "properties": {"name": {"type": "string", "description": "Model name"}, "purpose": {"type": "string", "description": "Model purpose"}, "tiering": {"type": "string", "description": "Model tiering"}, "owners": {"type": "array", "description": "Model owners", "items": {"type": "string"}}, "use_case_cuid": {"type": "string", "description": "Use case CUID"}, "business_unit_cuid": {"type": "string", "description": "Business unit CUID"}, "group_cuid": {"type": "string", "description": "Group CUID"}, "template_cuid": {"type": "string", "description": "Template CUID"}, "is_vendor_model": {"type": "boolean", "description": "Is vendor model"}, "vendor_name": {"type": "string", "description": "Vendor name"}, "custom_fields": {"type": "object", "description": "Custom fields"}, "allow_duplicates": {"type": "boolean", "description": "Allow duplicate names", "default": false}}, "type": "object"}, "ClientPaginatedModelsResponse": {"properties": {"page": {"type": "integer", "description": "Current page"}, "total": {"type": "integer", "description": "Total number of models"}, "limit": {"type": "integer", "description": "Items per page"}, "results": {"type": "array", "items": {"$ref": "#/definitions/ClientModelResponse"}}, "debug": {"type": "object", "description": "Debug information"}}, "type": "object"}, "ClientModelResponse": {"properties": {"cuid": {"type": "string", "description": "Model CUID"}, "name": {"type": "string", "description": "Model name"}, "model_id": {"type": "string", "description": "Model ID"}, "tiering": {"type": "string", "description": "Model tiering"}, "users": {"type": "array", "description": "Model users", "items": {"type": "object"}}, "business_unit": {"type": "object", "description": "Business unit information"}, "use": {"type": "string", "description": "Model use"}, "status": {"type": "object", "description": "Model status"}, "is_vendor_model": {"type": "boolean", "description": "Is vendor model"}, "vendor_name": {"type": "string", "description": "Vendor name"}, "created_at": {"type": "string", "format": "date-time", "description": "Creation date"}, "updated_at": {"type": "string", "format": "date-time", "description": "Last update date"}}, "type": "object"}, "ClientFiltersResponse": {"properties": {"tiering": {"type": "array", "description": "Available tiering values", "items": {"type": "string"}}, "business_units": {"type": "array", "description": "Available business units", "items": {"type": "object"}}, "owners": {"type": "array", "description": "Available owners", "items": {"type": "object"}}, "developers": {"type": "array", "description": "Available developers", "items": {"type": "object"}}, "validators": {"type": "array", "description": "Available validators", "items": {"type": "object"}}, "status": {"type": "array", "description": "Available statuses", "items": {"type": "object"}}, "uses": {"type": "array", "description": "Available uses", "items": {"type": "string"}}}, "type": "object"}, "ClientCreateGroupRequest": {"required": ["name"], "properties": {"name": {"type": "string", "description": "Group name"}, "description": {"type": "string", "description": "Group description"}}, "type": "object"}, "ClientPaginatedGroupsResponse": {"properties": {"page": {"type": "integer", "description": "Current page"}, "total": {"type": "integer", "description": "Total number of groups"}, "limit": {"type": "integer", "description": "Items per page"}, "results": {"type": "array", "items": {"$ref": "#/definitions/ClientGroupResponse"}}}, "type": "object"}, "ClientGroupResponse": {"properties": {"cuid": {"type": "string", "description": "Group CUID"}, "name": {"type": "string", "description": "Group name"}, "description": {"type": "string", "description": "Group description"}, "is_default": {"type": "boolean", "description": "Is default group"}, "created_at": {"type": "string", "format": "date-time", "description": "Creation date"}, "updated_at": {"type": "string", "format": "date-time", "description": "Last update date"}}, "type": "object"}, "ClientUpdateGroupRequest": {"properties": {"name": {"type": "string", "description": "Group name"}, "description": {"type": "string", "description": "Group description"}, "is_default": {"type": "boolean", "description": "Is default group"}}, "type": "object"}, "ClientGroupUsersRequest": {"required": ["users"], "properties": {"users": {"type": "array", "description": "List of user CUIDs", "items": {"type": "string"}}}, "type": "object"}, "ClientGroupResourcesRequest": {"required": ["resources", "type"], "properties": {"type": {"type": "string", "description": "Resource type"}, "resources": {"type": "array", "description": "List of resource CUIDs", "items": {"type": "string"}}}, "type": "object"}, "ClientCreateBusinessUnitRequest": {"required": ["name"], "properties": {"name": {"type": "string", "description": "Business Unit name"}}, "type": "object"}, "ClientPaginatedBusinessUnitsResponse": {"properties": {"page": {"type": "integer", "description": "Current page"}, "total": {"type": "integer", "description": "Total number of business units"}, "limit": {"type": "integer", "description": "Items per page"}, "results": {"type": "array", "items": {"$ref": "#/definitions/ClientBusinessUnitResponse"}}}, "type": "object"}, "ClientBusinessUnitResponse": {"properties": {"cuid": {"type": "string", "description": "Business Unit CUID"}, "name": {"type": "string", "description": "Business Unit name"}, "created_at": {"type": "string", "format": "date-time", "description": "Creation date"}, "updated_at": {"type": "string", "format": "date-time", "description": "Last update date"}}, "type": "object"}, "ClientUpdateBusinessUnitRequest": {"required": ["name"], "properties": {"name": {"type": "string", "description": "Business Unit name"}}, "type": "object"}, "ClientCreateUseCaseRequest": {"required": ["name"], "properties": {"use_case_cuid": {"type": "string", "description": "UseCase cuid"}, "name": {"type": "string", "description": "UseCase name"}, "category_cuid": {"type": "string", "description": "UseCase category"}, "order": {"type": "integer", "description": "UseCase order", "default": 0}}, "type": "object"}, "ClientUpdateUseCaseRequest": {"properties": {"name": {"type": "string", "description": "UseCase name"}, "category_cuid": {"type": "string", "description": "UseCase category"}, "order": {"type": "integer", "description": "UseCase order", "default": 0}}, "type": "object"}, "ClientCreateUseCaseCategoryRequest": {"required": ["name"], "properties": {"name": {"type": "string", "description": "Category name"}, "parent": {"type": "string", "description": "Parent category cuid"}, "order": {"type": "integer", "description": "Order", "default": 0}}, "type": "object"}, "ClientUpdateUseCaseCategoryRequest": {"properties": {"name": {"type": "string", "description": "Category name"}, "parent": {"type": "string", "description": "Parent category cuid"}, "order": {"type": "integer", "description": "Order", "default": 0}}, "type": "object"}, "ClientTemplateResponse": {"properties": {"id": {"type": "integer", "description": "Template ID"}, "cuid": {"type": "string", "description": "Template CUID"}, "name": {"type": "string", "description": "Template name"}, "type": {"type": "string", "description": "Template type"}, "description": {"type": "string", "description": "Template description"}, "organization": {"type": "object", "description": "Organization info"}, "created_at": {"type": "string", "format": "date-time", "description": "Creation date"}, "updated_at": {"type": "string", "format": "date-time", "description": "Last update date"}, "versions": {"type": "array", "description": "Template versions", "items": {"type": "object"}}, "created_by": {"type": "object", "description": "Creator info"}}, "type": "object"}, "ClientTemplateWithVersionResponse": {"properties": {"id": {"type": "integer", "description": "Template ID"}, "cuid": {"type": "string", "description": "Template CUID"}, "name": {"type": "string", "description": "Template name"}, "type": {"type": "string", "description": "Template type"}, "description": {"type": "string", "description": "Template description"}, "organization": {"type": "object", "description": "Organization info"}, "created_at": {"type": "string", "format": "date-time", "description": "Creation date"}, "updated_at": {"type": "string", "format": "date-time", "description": "Last update date"}, "versions": {"type": "array", "description": "Template versions", "items": {"type": "object"}}, "created_by": {"type": "object", "description": "Creator info"}, "current_version": {"type": "object", "description": "Current version details"}}, "type": "object"}, "ClientValidateTemplateRequest": {"required": ["json"], "properties": {"json": {"type": "object", "description": "Code to be validated"}}, "type": "object"}, "ClientDuplicateTemplateRequest": {"required": ["description", "new_name"], "properties": {"description": {"type": "string", "description": "Commit message"}, "new_name": {"type": "string", "description": "New template name"}}, "type": "object"}}, "responses": {"ParseError": {"description": "When a mask can't be parsed"}, "MaskError": {"description": "When any error occurs on mask"}, "AuthError": {}, "BaseError": {}, "Exception": {}, "NotFoundError": {}}}
